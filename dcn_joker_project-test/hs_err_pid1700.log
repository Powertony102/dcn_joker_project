#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ffff2163eeb, pid=1700, tid=15320
#
# JRE version: Java(TM) SE Runtime Environment (21.0.2+13) (build 21.0.2+13-LTS-58)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (21.0.2+13-LTS-58, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# C  [d3d9on12.dll+0x53eeb]
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: --module-path=C:\javasdk\javafx-sdk-23.0.1\lib --add-modules=javafx.controls,javafx.fxml -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=2095:C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 BattleJoker

Host: 12th Gen Intel(R) Core(TM) i7-12700H, 20 cores, 15G,  Windows 11 , 64 bit Build 22621 (10.0.22621.3958)
Time: Sat Oct 19 17:38:57 2024  Windows 11 , 64 bit Build 22621 (10.0.22621.3958) elapsed time: 336.936077 seconds (0d 0h 5m 36s)

---------------  T H R E A D  ---------------

Current thread (0x0000023421ca9f40):  JavaThread "QuantumRenderer-0" daemon [_thread_in_native, id=15320, stack(0x000000bc84400000,0x000000bc84500000) (1024K)]

Stack: [0x000000bc84400000,0x000000bc84500000],  sp=0x000000bc844fe250,  free space=1016k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [d3d9on12.dll+0x53eeb]

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 3836  com.sun.prism.d3d.D3DSwapChain.nPresent(JJ)I javafx.graphics@23.0.1 (0 bytes) @ 0x0000023411503c1c [0x0000023411503bc0+0x000000000000005c]
J 4150 c2 com.sun.javafx.tk.quantum.PresentingPainter.run()V javafx.graphics@23.0.1 (680 bytes) @ 0x00000234116121ac [0x00000234116116e0+0x0000000000000acc]
J 4021 c2 com.sun.javafx.tk.RenderJob.run()V javafx.graphics@23.0.1 (95 bytes) @ 0x00000234115a7ffc [0x00000234115a7f00+0x00000000000000fc]
J 4151% c2 java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V java.base@21.0.2 (187 bytes) @ 0x0000023411619448 [0x00000234116191a0+0x00000000000002a8]
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5 java.base@21.0.2
j  com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run()V+8 javafx.graphics@23.0.1
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 java.base@21.0.2
j  java.lang.Thread.run()V+19 java.base@21.0.2
v  ~StubRoutines::call_stub 0x0000023410c0100d

siginfo: EXCEPTION_ACCESS_VIOLATION (0xc0000005), reading address 0x0000000000000000


Registers:
RAX=0x0000000000000000, RBX=0x000000bc844fe3e0, RCX=0x0000023467a93d90, RDX=0x0000000000000000
RSP=0x000000bc844fe250, RBP=0x000000bc844fe329, RSI=0x0000023467a93d58, RDI=0x0000000000000000
R8 =0x0000000000000000, R9 =0x0000000000000000, R10=0xa7c8379d125d2870, R11=0x000000bc844fe3e0
R12=0x0000000000000000, R13=0x0000000000000000, R14=0x000000bc844fe800, R15=0x0000000000000000
RIP=0x00007ffff2163eeb, EFLAGS=0x0000000000010246


Register to memory mapping:

RAX=0x0 is null
RBX=0x000000bc844fe3e0 is pointing into the stack for thread: 0x0000023421ca9f40
RCX=0x0000023467a93d90 points into unknown readable memory: 0x0000000000000000 | 00 00 00 00 00 00 00 00
RDX=0x0 is null
RSP=0x000000bc844fe250 is pointing into the stack for thread: 0x0000023421ca9f40
RBP=0x000000bc844fe329 is pointing into the stack for thread: 0x0000023421ca9f40
RSI=0x0000023467a93d58 points into unknown readable memory: 0x0000023467a8fe48 | 48 fe a8 67 34 02 00 00
RDI=0x0 is null
R8 =0x0 is null
R9 =0x0 is null
R10=0xa7c8379d125d2870 is an unknown value
R11=0x000000bc844fe3e0 is pointing into the stack for thread: 0x0000023421ca9f40
R12=0x0 is null
R13=0x0 is null
R14=0x000000bc844fe800 is pointing into the stack for thread: 0x0000023421ca9f40
R15=0x0 is null

Top of Stack: (sp=0x000000bc844fe250)
0x000000bc844fe250:   000000bc844fe3e0 0000023467a93d58
0x000000bc844fe260:   0000000000000000 0000000000000000
0x000000bc844fe270:   0000000000000000 0000000000000000
0x000000bc844fe280:   0000000000000223 0000000000000000
0x000000bc844fe290:   0000000000000000 000000bc844fe0f0
0x000000bc844fe2a0:   0000000000000000 0000000704d2cab8
0x000000bc844fe2b0:   0000000000000000 ffffffffffffffff
0x000000bc844fe2c0:   0000000000000000 0000000000010000
0x000000bc844fe2d0:   0000000000000478 0001000100000575
0x000000bc844fe2e0:   0000000100000057 0000000000000000
0x000000bc844fe2f0:   0000000000000021 0000000000000000
0x000000bc844fe300:   0000000000630000 0000000000000001
0x000000bc844fe310:   0000000100000000 0001000100000001
0x000000bc844fe320:   0000000000010000 0000000000000001
0x000000bc844fe330:   0000000000630000 00007ff8158cd66a
0x000000bc844fe340:   0000ff8691246f52 0000000000000650
0x000000bc844fe350:   0000000000000001 000000bc844fe8f0
0x000000bc844fe360:   0000000000000000 0000000000000000
0x000000bc844fe370:   0000000000000000 0000023467b581b0
0x000000bc844fe380:   000000bc844fe490 00007ffff2129774
0x000000bc844fe390:   000002347ed703c8 0000023472fe9460
0x000000bc844fe3a0:   000002347ed70cc0 0000000019930520
0x000000bc844fe3b0:   000000bc844fe7a0 0000000000000640
0x000000bc844fe3c0:   0000000000000000 0000000000000650
0x000000bc844fe3d0:   0000000000000000 0000000000000065
0x000000bc844fe3e0:   0000000000000000 0000000000000000
0x000000bc844fe3f0:   0000000000000000 0000000000000000
0x000000bc844fe400:   0000000000000000 0000000000000000
0x000000bc844fe410:   0000000000000000 0000000000000000
0x000000bc844fe420:   0000000000000000 0000000000000000
0x000000bc844fe430:   0000000000000000 0000000000000000
0x000000bc844fe440:   0000000000000000 0000000000000000 

Instructions: (pc=0x00007ffff2163eeb)
0x00007ffff2163deb:   00 48 8b c5 48 8b 5c 24 60 48 8b 6c 24 70 48 83
0x00007ffff2163dfb:   c4 40 41 5e 5f 5e c3 cc cc cc cc cc cc cc cc cc
0x00007ffff2163e0b:   cc 48 89 5c 24 08 48 89 74 24 10 57 48 83 ec 20
0x00007ffff2163e1b:   48 8b f1 8b fa 48 83 c1 28 e8 13 cf fb ff 48 8b
0x00007ffff2163e2b:   46 10 48 8d 4e 28 48 8b 3c f8 48 ff 15 94 34 03
0x00007ffff2163e3b:   00 0f 1f 44 00 00 48 8b 5c 24 30 48 8b c7 48 8b
0x00007ffff2163e4b:   74 24 38 48 83 c4 20 5f c3 cc cc cc cc cc cc cc
0x00007ffff2163e5b:   cc 48 89 5c 24 10 55 56 57 41 54 41 55 41 56 41
0x00007ffff2163e6b:   57 48 8d 6c 24 d9 48 81 ec 00 01 00 00 48 8b 05
0x00007ffff2163e7b:   f1 b4 04 00 48 33 c4 48 89 45 17 49 8b d9 8b fa
0x00007ffff2163e8b:   48 8b f1 45 33 e4 4d 85 c9 75 0a b9 57 00 07 80
0x00007ffff2163e9b:   e8 a0 22 fb ff 33 d2 44 8d 42 70 48 8b cb e8 86
0x00007ffff2163eab:   fe fa ff 8b d7 48 8b ce e8 54 ff ff ff 48 8b f8
0x00007ffff2163ebb:   48 89 44 24 50 48 85 c0 74 1b 48 8b 08 48 8b 41
0x00007ffff2163ecb:   08 49 ba 70 d8 da 56 73 b6 41 fd 48 8b cf ff 15
0x00007ffff2163edb:   41 34 03 00 90 45 8a f4 4d 8b fc 4c 89 64 24 40
0x00007ffff2163eeb:   48 8b 07 49 ba 70 99 d5 74 79 1e e0 de 4c 8d 44
0x00007ffff2163efb:   24 40 48 8d 15 a4 84 03 00 48 8b cf 48 8b 00 ff
0x00007ffff2163f0b:   15 10 34 03 00 41 bd 01 00 00 00 85 c0 78 5c 48
0x00007ffff2163f1b:   8b 06 44 39 a8 80 3e 00 00 75 0a b9 57 00 07 80
0x00007ffff2163f2b:   e8 10 22 fb ff 48 8b 4c 24 40 48 8b 01 49 ba 70
0x00007ffff2163f3b:   2b 56 7e 44 2f 58 a1 48 8d 55 df 48 8b 40 40 ff
0x00007ffff2163f4b:   15 d0 33 03 00 0f 10 00 0f 11 03 0f 10 48 10 0f
0x00007ffff2163f5b:   11 4b 10 0f 10 40 20 0f 11 43 20 44 89 63 60 4c
0x00007ffff2163f6b:   8b 7c 24 40 44 8a 73 28 45 22 f5 4c 89 64 24 38
0x00007ffff2163f7b:   48 8b 07 49 ba 70 99 d5 74 79 1e e0 de 4c 8d 44
0x00007ffff2163f8b:   24 38 48 8d 15 a4 84 03 00 48 8b cf 48 8b 00 ff
0x00007ffff2163f9b:   15 80 33 03 00 48 8b 4c 24 38 85 c0 78 3b 44 89
0x00007ffff2163fab:   6b 60 48 8b 01 49 ba 70 f8 d0 70 bf 8f 28 85 4c
0x00007ffff2163fbb:   8d 44 24 30 33 d2 48 8b 40 70 ff 15 55 33 03 00
0x00007ffff2163fcb:   85 c0 78 0a 44 84 6c 24 30 45 8a f5 75 03 45 8a
0x00007ffff2163fdb:   f4 48 8b 4c 24 38 4c 8b f9 48 85 c9 75 16 4c 39 


Stack slot to memory mapping:

stack at sp + 0 slots: 0x000000bc844fe3e0 is pointing into the stack for thread: 0x0000023421ca9f40
stack at sp + 1 slots: 0x0000023467a93d58 points into unknown readable memory: 0x0000023467a8fe48 | 48 fe a8 67 34 02 00 00
stack at sp + 2 slots: 0x0 is null
stack at sp + 3 slots: 0x0 is null
stack at sp + 4 slots: 0x0 is null
stack at sp + 5 slots: 0x0 is null
stack at sp + 6 slots: 0x0000000000000223 is an unknown value
stack at sp + 7 slots: 0x0 is null


Compiled method (n/a)  336986 3836     n 0       com.sun.prism.d3d.D3DSwapChain::nPresent (native)
 total in heap  [0x0000023411503a10,0x0000023411503e00] = 1008
 relocation     [0x0000023411503b70,0x0000023411503ba8] = 56
 main code      [0x0000023411503bc0,0x0000023411503df3] = 563
 stub code      [0x0000023411503df3,0x0000023411503df8] = 5
 oops           [0x0000023411503df8,0x0000023411503e00] = 8

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000023463be2728} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain'
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = long
  #           [sp+0x70]  (sp of caller)
  0x0000023411503bc0: 448b 5208 | 49bb 0000 | 0022 3402 | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x0000023411503bd8: ;   {runtime_call ic_miss_stub}
  0x0000023411503bd8: 0000 e9a1 | ab74 ff90 
[Verified Entry Point]
  0x0000023411503be0: 8984 2400 | 80ff ff55 | 488b ec48 | 83ec 6090 | 4181 7f20 | 0100 0000 

  0x0000023411503bf8: ;   {runtime_call StubRoutines (final stubs)}
  0x0000023411503bf8: 7405 e861 | 1173 ff4d | 8bc8 4c8b 

  0x0000023411503c04: ;   {oop(a 'java/lang/Class'{0x000000070bb31b68} = 'com/sun/prism/d3d/D3DSwapChain')}
  0x0000023411503c04: c249 be68 | 1bb3 0b07 | 0000 004c | 8974 2450 | 4c8d 7424 | 5049 8bd6 

  0x0000023411503c1c: ;   {internal_word}
  0x0000023411503c1c: c5f8 7749 | ba1c 3c50 | 1134 0200 | 004d 8997 | a003 0000 | 4989 a798 

  0x0000023411503c34: ;   {external_word}
  0x0000023411503c34: 0300 0049 | baf9 4533 | 59ff 7f00 | 0041 803a | 000f 844e | 0000 0052 | 4150 4151 

  0x0000023411503c50: ;   {metadata({method} {0x0000023463be2728} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain')}
  0x0000023411503c50: 48ba 2027 | be63 3402 | 0000 498b | cf48 83ec | 2040 f6c4 | 0f0f 8419 | 0000 0048 

  0x0000023411503c6c: ;   {runtime_call}
  0x0000023411503c6c: 83ec 0848 | b840 09e4 | 58ff 7f00 | 00ff d048 | 83c4 08e9 | 0c00 0000 

  0x0000023411503c84: ;   {runtime_call}
  0x0000023411503c84: 48b8 4009 | e458 ff7f | 0000 ffd0 | 4883 c420 | 4159 4158 | 5a49 8d8f | b803 0000 | 41c7 874c 
  0x0000023411503ca4: 0400 0004 

  0x0000023411503ca8: ;   {runtime_call}
  0x0000023411503ca8: 0000 0048 | b8e0 4146 | f3ff 7f00 | 00ff d0c5 | f877 41c7 | 874c 0400 | 0005 0000 | 00f0 8344 
  0x0000023411503cc8: 24c0 0049 | 3baf 5004 | 0000 0f87 | 0e00 0000 | 4183 bf48 | 0400 0000 | 0f84 2b00 | 0000 c5f8 
  0x0000023411503ce8: 7748 8945 | f849 8bcf | 4c8b e448 | 83ec 2048 

  0x0000023411503cf8: ;   {runtime_call}
  0x0000023411503cf8: 83e4 f048 | b8d0 c3af | 58ff 7f00 | 00ff d049 | 8be4 4d33 | e448 8b45 | f841 c787 | 4c04 0000 
  0x0000023411503d18: 0800 0000 | 4183 bfc8 | 0400 0002 | 0f84 9c00 

  0x0000023411503d28: ;   {external_word}
  0x0000023411503d28: 0000 49ba | f945 3359 | ff7f 0000 | 4180 3a00 | 0f84 4c00 | 0000 4889 

  0x0000023411503d40: ;   {metadata({method} {0x0000023463be2728} 'nPresent' '(JJ)I' in 'com/sun/prism/d3d/D3DSwapChain')}
  0x0000023411503d40: 45f8 48ba | 2027 be63 | 3402 0000 | 498b cf48 | 83ec 2040 | f6c4 0f0f | 8419 0000 | 0048 83ec 
  0x0000023411503d60: ;   {runtime_call}
  0x0000023411503d60: 0848 b840 | 09e4 58ff | 7f00 00ff | d048 83c4 | 08e9 0c00 

  0x0000023411503d74: ;   {runtime_call}
  0x0000023411503d74: 0000 48b8 | 4009 e458 | ff7f 0000 | ffd0 4883 | c420 488b | 45f8 49c7 | 8798 0300 | 0000 0000 
  0x0000023411503d94: 0049 c787 | a003 0000 | 0000 0000 | c5f8 7749 | 8b8f 2804 | 0000 c781 | 0001 0000 | 0000 0000 
  0x0000023411503db4: c949 837f | 0800 0f85 | 0100 0000 

  0x0000023411503dc0: ;   {runtime_call StubRoutines (initial stubs)}
  0x0000023411503dc0: c3e9 3ad1 | 6fff c5f8 | 7748 8945 | f84c 8be4 | 4883 ec20 | 4883 e4f0 

  0x0000023411503dd8: ;   {runtime_call}
  0x0000023411503dd8: 48b8 7041 | e458 ff7f | 0000 ffd0 | 498b e44d | 33e4 488b | 45f8 e937 | ffff fff4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2)  336992 4150   !   4       com.sun.javafx.tk.quantum.PresentingPainter::run (680 bytes)
 total in heap  [0x0000023411610d90,0x0000023411618f18] = 33160
 relocation     [0x0000023411610ef0,0x0000023411611698] = 1960
 constants      [0x00000234116116a0,0x00000234116116e0] = 64
 main code      [0x00000234116116e0,0x0000023411615940] = 16992
 stub code      [0x0000023411615940,0x0000023411615be8] = 680
 oops           [0x0000023411615be8,0x0000023411615c20] = 56
 metadata       [0x0000023411615c20,0x00000234116160e0] = 1216
 scopes data    [0x00000234116160e0,0x0000023411617548] = 5224
 scopes pcs     [0x0000023411617548,0x0000023411618648] = 4352
 dependencies   [0x0000023411618648,0x0000023411618798] = 336
 handler table  [0x0000023411618798,0x0000023411618cd8] = 1344
 nul chk table  [0x0000023411618cd8,0x0000023411618f18] = 576


[Constant Pool]
             Address          hex4                    hex8      
  0x00000234116116a0:   0x88e368f1      0xbee4f8b588e368f1      
  0x00000234116116a4:   0xbee4f8b5                              
  0x00000234116116a8:   0x00000000      0x0000000000000000      
  0x00000234116116ac:   0x00000000                              
  0x00000234116116b0:   0x3f800000      0x000000003f800000      
  0x00000234116116b4:   0x00000000                              
  0x00000234116116b8:   0x88e368f1      0x3ee4f8b588e368f1      
  0x00000234116116bc:   0x3ee4f8b5                              
  0x00000234116116c0:   0x074a771d      0x3fefffeb074a771d      
  0x00000234116116c4:   0x3fefffeb                              
  0x00000234116116c8:   0x7c5ac472      0x3ff0000a7c5ac472      
  0x00000234116116cc:   0x3ff0000a                              
  0x00000234116116d0:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000234116116d4:   0xf4f4f4f4                              
  0x00000234116116d8:   0xf4f4f4f4      0xf4f4f4f4f4f4f4f4      
  0x00000234116116dc:   0xf4f4f4f4                              

[MachCode]
[Entry Point]
  # {method} {0x0000023463997f78} 'run' '()V' in 'com/sun/javafx/tk/quantum/PresentingPainter'
  #           [sp+0xa0]  (sp of caller)
  0x00000234116116e0: ;   {no_reloc}
  0x00000234116116e0: 448b 5208 | 49bb 0000 | 0022 3402 | 0000 4d03 | d349 3bc2 

  0x00000234116116f4: ;   {runtime_call ic_miss_stub}
  0x00000234116116f4: 0f85 86d0 | 63ff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x0000023411611700: 8984 2400 | 80ff ff55 | 4881 ec90 | 0000 0090 | 4181 7f20 | 0100 0000 | 0f85 1842 | 0000 4889 
  0x0000023411611720: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070b87c4f0})}
  0x0000023411611720: 5424 2849 | baf0 c487 | 0b07 0000 | 0041 8b7a | 0c85 ff0f | 84c3 1d00 | 004d 8d14 | fc4c 8954 
  0x0000023411611740: 2430 4d8b | 9780 0300 | 0049 8b1a | 33c0 41ba | 0100 0000 | f045 0fb1 | 54fc 1041 | 0f94 c345 
  0x0000023411611760: 0fb6 db45 | 85db 0f84 | 7d19 0000 | 4180 7f40 | 000f 85ec | 1800 004c | 8b54 2430 | 4c8b c349 
  0x0000023411611780: c1e8 0345 | 8944 fc0c | 4c8b db4d | 33da 49c1 | eb15 4d85 | db74 1a49 | c1ea 0948 | b900 a0ed 
  0x00000234116117a0: 1534 0200 | 0049 03ca | 8039 020f | 85ea 1800 | 004c 8b44 | 2428 458b | 4828 478b | 5ccc 6445 
  0x00000234116117c0: 85db 0f84 | 5d1f 0000 | 478b 54cc | 684b 8b7c | d410 470f | b65c cc62 | 4585 db0f | 85d3 1e00 
  0x00000234116117e0: 0043 8b4c | cc2c 85c9 | 0f8e e21e | 0000 478b | 5ccc 3045 | 85db 0f8e | f01e 0000 | 4589 5820 
  0x0000023411611800: 4589 5818 | 4189 4814 | 4189 481c | 430f b64c | cc60 85c9 | 0f84 261f | 0000 4889 | 5c24 3047 
  0x0000023411611820: ;   {no_reloc}
  0x0000023411611820: 0fb6 44cc | 6144 894c 

  0x0000023411611828: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611828: 2424 49bb | 385c a30b | 0700 0000 

  0x0000023411611834: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611834: 49b9 385c | a30b 0700 | 0000 4983 | c110 4c89 | 4c24 3845 | 85c0 0f85 | 8a0d 0000 | 4885 ff0f 
  0x0000023411611854: 84c0 2400 | 004f 8b44 | d410 448b | 4c24 244f | 8d1c cc4b 

  0x0000023411611868: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611868: 8d14 d448 | bd38 5ca3 | 0b07 0000 | 004c 895c 

  0x0000023411611878: ;   {optimized virtual_call}
  0x0000023411611878: 2440 90e8 

  0x000002341161187c: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop }
                      ;*invokevirtual _begin {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.View::lock@9 (line 740)
                      ; - com.sun.prism.PresentableState::lock@11 (line 285)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x000002341161187c: 4012 eeff 

  0x0000023411611880: ;   {other}
  0x0000023411611880: 0f1f 8400 | f00a 0000 | 448b 5424 | 2447 3b64 | d468 0f84 | ac1f 0000 | 4c8b 5424 | 2841 8b6a 
  0x00000234116118a0: 3044 8b5c | 2424 4789 | 64dc 0c45 | 8b5c ec08 

  0x00000234116118b0: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x00000234116118b0: 4181 fbd8 | 7502 010f | 8513 2000 | 004d 8d14 | ec41 0fb6 | 6a0c 85ed | 0f85 7a24 | 0000 458b 
  0x00000234116118d0: 5a30 4489 | 5c24 2443 | 0fb6 6cdc | 2085 ed0f | 8577 2400 | 004b 8b94 | dc80 0000 | 004f 8d14 
  0x00000234116118f0: ;   {oop([B{0x000000070ba35c38})}
  0x00000234116118f0: dc48 bd38 | 5ca3 0b07 | 0000 004c | 8954 2440 

  0x0000023411611900: ;   {static_call}
  0x0000023411611900: 6666 90e8 

  0x0000023411611904: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop }
                      ;*invokestatic nTestCooperativeLevel {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::testLostStateAndReset@13 (line 158)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411611904: d81e efff 

  0x0000023411611908: ;   {other}
  0x0000023411611908: 0f1f 8400 | 780b 0001 | 3d68 0876 | 880f 8455 | 2400 003d | 6908 7688 | 0f84 6624 | 0000 3d70 
  0x0000023411611928: 0876 880f | 8477 2400 | 003d 7408 | 7688 0f84 | 8824 0000 | 85c0 0f8c | 9c24 0000 | 4c8b 5424 
  0x0000023411611948: 2841 8b4a | 2c45 8b5c | cc08 458b 

  0x0000023411611954: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x0000023411611954: 5228 4181 | fbc0 3925 | 010f 8581 | 1f00 0047 | 8b44 d43c | 4d8d 1ccc | 4c89 5c24 | 4045 8b4b 
  0x0000023411611974: 2043 8b6c | cc1c 443b | c50f 85c1 | 2200 0047 | 8b44 cc20 | 438b 6cd4 | 4041 3be8 | 0f85 c622 
  0x0000023411611994: 0000 c4c1 | 7a10 4b18 | c481 7a10 | 44d4 34c5 | f82e c10f | 8ac7 2200 | 000f 85c1 | 2200 00c4 
  0x00000234116119b4: c17a 1043 | 1cc4 817a | 1054 d438 | c5f8 2ed0 | 0f8a 3224 | 0000 0f85 | 2c24 0000 | 478b 5ccc 
  0x00000234116119d4: 3443 8b6c | dc1c 4789 | 64dc 1443 | ff44 dc0c 

  0x00000234116119e4: ; implicit exception: dispatches to 0x0000023411614f34
  0x00000234116119e4: 458b 5cec 

  0x00000234116119e8: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x00000234116119e8: 0841 81fb | 080d 2501 | 0f85 0a2f | 0000 4d8d | 14ec 4d8b | 5210 4d85 | d20f 8425 | 2400 004c 
  0x0000023411611a08: 8b54 2440 | 458b 5a14 

  0x0000023411611a10: ; implicit exception: dispatches to 0x0000023411614bf4
  0x0000023411611a10: 478b 54dc | 1849 8bd1 | 48c1 e203 | 4d8b c249 

  0x0000023411611a20: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611a20: c1e0 0348 | bd38 5ca3 | 0b07 0000 

  0x0000023411611a2c: ;   {static_call}
  0x0000023411611a2c: 0066 90e8 

  0x0000023411611a30: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [40]=Oop [48]=Oop [64]=Oop }
                      ;*invokestatic create {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@8 (line 148)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411611a30: 6c0d f4ff 

  0x0000023411611a34: ;   {other}
  0x0000023411611a34: 0f1f 8400 | a40c 0002 | 4c8b 5424 | 40c4 c17a | 104a 18c4 | c17a 1042 | 1c44 8b58 

  0x0000023411611a50: ;   {metadata('com/sun/prism/d3d/D3DGraphics')}
  0x0000023411611a50: 0841 81fb | 7018 2501 | 0f85 a61e | 0000 4889 

  0x0000023411611a60: ;   {section_word}
  0x0000023411611a60: 4424 40c5 | f82e 0d45 | fcff ff7a | 060f 84e1 | 2300 0044 | 8b50 2c44 | 8954 2424 | c5f2 5ac9 
  0x0000023411611a80: c5fa 5ac0 

  0x0000023411611a84: ; implicit exception: dispatches to 0x0000023411614c30
  0x0000023411611a84: 478b 4cd4 | 0c41 8be9 | 83e5 0885 | ed0f 850d | 2200 0045 | 85c9 0f85 | 8c1e 0000 | c481 7b11 
  0x0000023411611aa4: 44d4 28c4 | 817b 114c | d410 43c7 | 44d4 40ff | ffff ffc4 | 817b 1044 | d430 4183 | c902 4789 
  0x0000023411611ac4: 4cd4 0cc4 | 817b 104c | d438 4183 | f901 0f8e | d10a 0000 | c481 7b10 

  0x0000023411611adc: ;   {section_word}
  0x0000023411611adc: 54d4 20c5 | f92e 15c1 | fbff ff0f | 8a4b 2500 | 000f 8545 | 2500 00c4 | 817b 1054 

  0x0000023411611af8: ;   {section_word}
  0x0000023411611af8: d418 c5f9 | 2e15 a6fb | ffff 0f8a | 6825 0000 | 0f85 6225 

  0x0000023411611b0c: ;   {section_word}
  0x0000023411611b0c: 0000 c5f9 | 2e05 92fb | ffff 0f8a | 6812 0000 | 0f85 6212 

  0x0000023411611b20: ;   {section_word}
  0x0000023411611b20: 0000 c5f9 | 2e0d 7efb | ffff 0f8a | 5412 0000 | 0f85 4e12 | 0000 43c7 | 44d4 0c02 | 0000 00c4 
  0x0000023411611b40: 817b 1044 

  0x0000023411611b44: ;   {section_word}
  0x0000023411611b44: d448 c5fb | 100d 6afb | ffff c5f9 | 2ec8 0f86 | 5025 0000 

  0x0000023411611b58: ;   {section_word}
  0x0000023411611b58: c5f9 2e05 | 40fb ffff | 0f86 7a25 | 0000 c481 | 7b10 44d4 | 50c5 f92e | c80f 86a1 

  0x0000023411611b74: ;   {section_word}
  0x0000023411611b74: 2500 00c5 | f92e 0521 | fbff ff0f | 86cb 2500 | 00c4 817b | 1044 d458 | c5f9 2ec8 | 0f86 f225 
  0x0000023411611b94: ;   {section_word}
  0x0000023411611b94: 0000 c5f9 | 2e05 02fb | ffff 0f86 | 1c26 0000 | c481 7b10 | 44d4 60c5 | f92e c80f | 8643 2600 
  0x0000023411611bb4: ;   {section_word}
  0x0000023411611bb4: 00c5 f92e | 05e3 faff | ff0f 866d | 2600 00c4 | 817b 1044 

  0x0000023411611bc8: ;   {section_word}
  0x0000023411611bc8: d468 c5fb | 1015 f6fa | ffff c5f9 | 2ed0 0f86 | 8c26 0000 

  0x0000023411611bdc: ;   {section_word}
  0x0000023411611bdc: c5f9 2e05 | dcfa ffff | 0f86 b626 | 0000 c481 | 7b10 44d4 | 70c5 f92e | c80f 86dd 

  0x0000023411611bf8: ;   {section_word}
  0x0000023411611bf8: 2600 00c5 | f92e 059d | faff ff0f | 8607 2700 | 004b 8d14 | d448 8954 

  0x0000023411611c10: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611c10: 2458 48bd | 385c a30b | 0700 0000 

  0x0000023411611c1c: ;   {optimized virtual_call}
  0x0000023411611c1c: 6666 90e8 

  0x0000023411611c20: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [88]=Oop }
                      ;*invokevirtual calculateType {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@22 (line 278)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411611c20: bca0 edff 

  0x0000023411611c24: ;   {other}
  0x0000023411611c24: 0f1f 8400 | 940e 0003 | 448b 5c24 | 2443 8944 | dc40 83f8 | 010f 8e09 | 2700 004c | 8b54 2440 
  0x0000023411611c44: 4589 6218 | 4588 6228 | 4589 6214 | 4c8b 5424 | 2845 8b5a | 2847 8b5c | dc6c 4489 | 5c24 2449 
  0x0000023411611c64: 8bd2 4c8b 

  0x0000023411611c68: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611c68: 4424 4048 | bd38 5ca3 | 0b07 0000 

  0x0000023411611c74: ;   {optimized virtual_call}
  0x0000023411611c74: 0066 90e8 

  0x0000023411611c78: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop }
                      ;*invokevirtual paintImpl {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@331 (line 92)
  0x0000023411611c78: 644b feff 

  0x0000023411611c7c: ;   {other}
  0x0000023411611c7c: 0f1f 8400 | ec0e 0004 | 4c8b 5424 | 2845 8862 | 2441 8b6a | 2c45 8b54 

  0x0000023411611c94: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x0000023411611c94: ec08 4181 | fac0 3925 | 010f 85b9 | 1c00 004d | 8d14 ec4c | 8954 2440 | 458b 5a14 

  0x0000023411611cb0: ; implicit exception: dispatches to 0x0000023411614c84
  0x0000023411611cb0: 478b 54dc | 1844 8954 | 2448 430f | b66c d420 | 85ed 0f85 | d021 0000 | 478b 5cd4 | 2c44 895c 
  0x0000023411611cd0: 244c 478b | 54dc 1044 | 8954 2450 | 448b 5c24 | 484f 8d14 | dc4c 8954 | 2458 448b | 5424 5045 
  0x0000023411611cf0: 85d2 0f8e | a200 0000 | 448b 5c24 | 4c47 8b5c | dc18 4489 | 5c24 5444 | 8b54 244c | 478b 54d4 
  0x0000023411611d10: 2044 8954 | 2460 448b | 5c24 4c47 | 8b5c dc1c | 4489 5c24 | 6443 8b6c | d40c 85ed | 0f8f 8226 
  0x0000023411611d30: 0000 478b | 54d4 1444 | 8b5c 244c | 49c1 e303 | 4c89 5c24 | 6845 85d2 | 0f8f f710 | 0000 448b 
  0x0000023411611d50: 5424 604b | 8b94 d480 | 0000 0044 | 8b5c 2454 | 4d8b cb49 | c1e1 0344 | 8b54 2464 | 4d8b c249 
  0x0000023411611d70: c1e0 038b 

  0x0000023411611d74: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611d74: 7c24 5048 | bd38 5ca3 | 0b07 0000 

  0x0000023411611d80: ;   {static_call}
  0x0000023411611d80: 0066 90e8 

  0x0000023411611d84: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [76]=NarrowOop [88]=Oop [104]=Oop }
                      ;*invokestatic nDrawIndexedQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::renderQuads@7 (line 622)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@8 (line 125)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411611d84: d8c4 ebff 

  0x0000023411611d88: ;   {other}
  0x0000023411611d88: 0f1f 8400 | f80f 0005 | 448b 5c24 | 4c47 8964 | dc10 488b | 5424 404c | 8b44 2458 

  0x0000023411611da4: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611da4: 48bd 385c | a30b 0700 

  0x0000023411611dac: ;   {static_call}
  0x0000023411611dac: 0000 90e8 

  0x0000023411611db0: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [88]=Oop }
                      ;*invokestatic create {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@11 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411611db0: ec09 f4ff 

  0x0000023411611db4: ;   {other}
  0x0000023411611db4: 0f1f 8400 | 2410 0006 

  0x0000023411611dbc: ; implicit exception: dispatches to 0x0000023411614ccc
  0x0000023411611dbc: 448b 5008 

  0x0000023411611dc0: ;   {metadata('com/sun/prism/d3d/D3DGraphics')}
  0x0000023411611dc0: 4181 fa70 | 1825 010f | 8547 2b00 | 004c 8b54 | 2440 458b | 5220 478b | 44d4 1c44 | 8944 244c 
  0x0000023411611de0: 4c8b 5c24 | 4045 8b43 | 144b 8b54 | c410 4889 | 4424 5047 | 8b54 d420 | 4489 5424 

  0x0000023411611dfc: ;   {static_call}
  0x0000023411611dfc: 6066 90e8 

  0x0000023411611e00: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [80]=Oop [88]=Oop }
                      ;*invokestatic nGetTextureWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalWidth@7 (line 98)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentWidth@1 (line 108)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@43 (line 67)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411611e00: 5c43 ecff 

  0x0000023411611e04: ;   {other}
  0x0000023411611e04: 0f1f 8400 | 7410 0007 | 8944 2464 | 4c8b 5424 | 4045 8b52 | 144b 8b54 

  0x0000023411611e1c: ;   {static_call}
  0x0000023411611e1c: d410 90e8 

  0x0000023411611e20: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [80]=Oop [88]=Oop }
                      ;*invokestatic nGetTextureHeight {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalHeight@7 (line 103)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentHeight@1 (line 113)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@49 (line 68)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411611e20: 3c47 ecff 

  0x0000023411611e24: ;   {other}
  0x0000023411611e24: 0f1f 8400 | 9410 0008 | 8bd8 4c8b | 5424 4041 | 8b7a 2045 | 8b5c fc34 

  0x0000023411611e3c: ; implicit exception: dispatches to 0x0000023411614d2c
  0x0000023411611e3c: 438b 6cdc | 0c85 ed0f | 8e63 2000 | 0043 8b6c | dc1c 458b 

  0x0000023411611e50: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x0000023411611e50: 54ec 0841 | 81fa 080d | 2501 0f85 | d02a 0000 | 4d8d 14ec | 418b 6a1c | 85ed 0f85 | 7c20 0000 
  0x0000023411611e70: 4180 7f40 | 000f 856d | 1300 004c | 8b54 2450 

  0x0000023411611e80: ;   {oop(a 'com/sun/prism/CompositeMode'{0x000000070bb32410})}
  0x0000023411611e80: 41c7 4244 | 8264 76e1 | 448b 5424 | 64c4 c16a | 2ad2 c5e2 | 2adb 448b | 5c24 4cc4 | c14a 2af3 
  0x0000023411611ea0: 448b 5424 | 60c4 c142 | 2afa 4c8b 

  0x0000023411611eac: ;   {oop(a 'com/sun/prism/CompositeMode'{0x000000070bb32410})}
  0x0000023411611eac: 5424 5049 | bb10 24b3 | 0b07 0000 | 004d 33da | 49c1 eb15 | 4d85 db74 | 1b49 c1ea | 0949 b800 
  0x0000023411611ecc: a0ed 1534 | 0200 004d | 03c2 4180 | 3802 0f85 | 4413 0000 | 4c8b c749 | c1e0 0348 | 8b54 2450 
  0x0000023411611eec: c5f8 57c0 | c5f0 57c9 | c5d8 57e4 | c5d0 57ed 

  0x0000023411611efc: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611efc: 48bd 385c | a30b 0700 

  0x0000023411611f04: ;   {optimized virtual_call}
  0x0000023411611f04: 0000 90e8 

  0x0000023411611f08: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [88]=Oop }
                      ;*invokevirtual drawTexture {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@117 (line 74)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411611f08: f44f eeff 

  0x0000023411611f0c: ;   {other}
  0x0000023411611f0c: 0f1f 8400 | 7c11 0009 | 448b 5c24 | 4843 0fb6 | 6cdc 2085 | ed0f 8505 | 2000 0045 | 8bd3 478b 
  0x0000023411611f2c: 54d4 2c44 | 8954 2448 

  0x0000023411611f34: ; implicit exception: dispatches to 0x0000023411614d74
  0x0000023411611f34: 478b 5cd4 | 1044 895c | 244c 4585 | db0f 8ea3 | 0000 0044 | 8b5c 2448 | 478b 54dc | 1844 8954 
  0x0000023411611f54: 2450 458b | d347 8b5c | d420 4489 | 5c24 5447 | 8b54 d41c | 4489 5424 | 5844 8b54 | 2454 438b 
  0x0000023411611f74: 6cd4 0c85 | ed0f 8f79 | 2400 0045 | 8bda 478b | 54dc 1444 | 8b5c 2448 | 49c1 e303 | 4c89 5c24 
  0x0000023411611f94: 6045 85d2 | 0f8f b60f | 0000 448b | 5424 544b | 8b94 d480 | 0000 0044 | 8b5c 2450 | 4d8b cb49 
  0x0000023411611fb4: c1e1 0344 | 8b54 2458 | 4d8b c249 | c1e0 038b 

  0x0000023411611fc4: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411611fc4: 7c24 4c48 | bd38 5ca3 | 0b07 0000 

  0x0000023411611fd0: ;   {static_call}
  0x0000023411611fd0: 0066 90e8 

  0x0000023411611fd4: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [96]=Oop }
                      ;*invokestatic nDrawIndexedQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DContext::renderQuads@7 (line 622)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@8 (line 125)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411611fd4: 88c2 ebff 

  0x0000023411611fd8: ;   {other}
  0x0000023411611fd8: 0f1f 8400 | 4812 000a | 448b 5c24 | 4847 8964 | dc10 4c8b | 5424 4045 | 8b52 2047 | 8b5c d434 
  0x0000023411611ff8: ; implicit exception: dispatches to 0x0000023411614da4
  0x0000023411611ff8: 438b 6cdc | 0c85 ed0f | 8e3b 1f00 | 00ff cd43 | 896c dc0c | 448b 5424 | 2445 85d2 | 0f84 4218 
  0x0000023411612018: 0000 458b | da4f 8d14 | dc4c 8954 | 2440 4c8b | 5c24 4048 | 8d9c 2480 | 0000 0049 | 8b03 a802 
  0x0000023411612038: 0f85 2300 | 0000 4883 | c801 4889 | 03f0 490f | b11b 0f84 | 3700 0000 | 482b c448 | 2507 f0ff 
  0x0000023411612058: ff48 8903 | e924 0000 | 004c 8bd0 | 4833 c0f0 | 4d0f b17a | 3e48 c703 | 0300 0000 | 7411 4c3b 
  0x0000023411612078: f875 1549 | ff82 8600 | 0000 4833 | c075 0949 | ff87 5005 | 0000 33c0 | 0f85 da18 | 0000 448b 
  0x0000023411612098: 5424 2443 | 0fb6 6cd4 | 0d4c 8b5c | 2440 488d | 8424 8000 | 0000 4883 | 3800 0f84 | 7900 0000 
  0x00000234116120b8: 4d8b 1341 | f6c2 020f | 8462 0000 | 0049 83ba | 8600 0000 | 0074 0949 | ff8a 8600 

  0x00000234116120d4: ;   {no_reloc}
  0x00000234116120d4: 0000 eb4b | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb3d 4983 
  0x00000234116120f4: ba9e 0000 | 0000 7422 | 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4983 ba9e | 0000 0000 
  0x0000023411612114: 750d f04d | 0fb1 7a3e | 7505 83c8 | 01eb 0ca8 | 00eb 084c | 8b10 f04d | 0fb1 1375 | 0a49 ff8f 
  0x0000023411612134: 5005 0000 | 4533 d20f | 8558 1800 | 0085 ed0f | 840f 1e00 | 004c 8b54 | 2428 418b | 6a2c 458b 
  0x0000023411612154: ;   {metadata('com/sun/prism/d3d/D3DSwapChain')}
  0x0000023411612154: 54ec 0841 | 81fa c039 | 2501 0f85 | 5d18 0000 | 4d8d 14ec | 458b 5a14 

  0x000002341161216c: ; implicit exception: dispatches to 0x0000023411614dd4
  0x000002341161216c: 478b 54dc | 1844 8954 | 2424 430f | b66c d420 | 85ed 0f85 | e81d 0000 | 4b8b 94d4 | 8000 0000 
  0x000002341161218c: 4f8b 44dc | 1049 c1e2 

  0x0000023411612194: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411612194: 0348 bd38 | 5ca3 0b07 | 0000 004c | 8954 2440 

  0x00000234116121a4: ;   {static_call}
  0x00000234116121a4: 6666 90e8 

  0x00000234116121a8: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop }
                      ;*invokestatic nPresent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::present@25 (line 87)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x00000234116121a8: 341a efff 

  0x00000234116121ac: ;   {other}
  0x00000234116121ac: 0f1f 8400 | 1c14 000b | 3d68 0876 | 880f 84c1 | 1d00 003d | 6908 7688 | 0f84 d21d | 0000 85c0 
  0x00000234116121cc: 0f8c e61d | 0000 4c8b | 5424 3045 | 8b5a 3c43 | 8b5c dc14 

  0x00000234116121e0: ; implicit exception: dispatches to 0x0000023411614e1c
  0x00000234116121e0: 418b 7cdc | 0c43 0fbe | 6cdc 10c4 | 6252 f7d7 | 4183 c2f1 | 4585 d20f | 8c77 1600 | 0085 ed0f 
  0x0000023411612200: 85e0 1a00 | 0085 ff0f | 86c7 1700 | 0049 8d34 | dc49 8d4c | dc10 8039 | 510f 8555 | 1600 0048 
  0x0000023411612220: 8b54 2438 | 41b8 0f00 | 0000 4533 | c949 ba40 | 4fc3 1034 | 0200 0041 

  0x0000023411612238: ;   {other}
  0x0000023411612238: ffd2 0f1f | 8400 0000 | 0000 85c0 | 0f8d 2a16 | 0000 83c0 | 1083 f80f | 7d48 3bc7 | 0f83 a718 
  0x0000023411612258: 0000 83ff | 0e0f 869e | 1800 0083 | f80f 0f83 | 9518 0000 | 448b c84d | 63d1 460f | be44 1610 
  0x0000023411612278: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411612278: 49bb 385c | a30b 0700 | 0000 470f | be5c 1310 | 453b c30f | 8401 0b00 | 0045 85c9 | 0f8d da15 
  0x0000023411612298: ;   {oop(a 'java/lang/Class'{0x000000070bb34e08} = 'com/sun/prism/impl/Disposer')}
  0x0000023411612298: 0000 49ba | 084e b30b | 0700 0000 | 458b 5a70 | 4585 db0f | 84db 1500 | 004f 8d04 | dc48 8d9c 
  0x00000234116122b8: 2480 0000 | 0049 8b00 | a802 0f85 | 2300 0000 | 4883 c801 | 4889 03f0 | 490f b118 | 0f84 3700 
  0x00000234116122d8: 0000 482b | c448 2507 | f0ff ff48 | 8903 e924 | 0000 004c | 8bd0 4833 | c0f0 4d0f | b17a 3e48 
  0x00000234116122f8: c703 0300 | 0000 7411 | 4c3b f875 | 1549 ff82 | 8600 0000 | 4833 c075 | 0949 ff87 | 5005 0000 
  0x0000023411612318: 33c0 0f85 | d016 0000 | 438b 6cdc | 0c45 8b54 

  0x0000023411612328: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x0000023411612328: ec08 4181 | faf8 0004 | 000f 85e6 | 1600 004d | 8d0c ec45 | 3b61 0c0f | 8590 0f00 | 0048 8d84 
  0x0000023411612348: 2480 0000 | 0048 8338 | 000f 8479 | 0000 004d | 8b10 41f6 | c202 0f84 | 6200 0000 | 4983 ba86 
  0x0000023411612368: 0000 0000 | 7409 49ff | 8a86 0000 | 00eb 4b49 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 
  0x0000023411612388: c742 3e00 | 0000 00eb | 3d49 83ba | 9e00 0000 | 0074 2248 | 33c0 49c7 | 423e 0000 | 0000 f083 
  0x00000234116123a8: 0424 0049 | 83ba 9e00 | 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb0c a800 | eb08 4c8b 
  0x00000234116123c8: 10f0 4d0f | b110 750a | 49ff 8f50 | 0500 0045 | 33d2 0f85 | 5416 0000 

  0x00000234116123e0: ;   {oop(a 'java/lang/Class'{0x000000070bb34e08} = 'com/sun/prism/impl/Disposer')}
  0x00000234116123e0: 49ba 084e | b30b 0700 | 0000 458b | 4270 4585 | c00f 84ad | 1400 004f | 8d0c c448 | 8d9c 2480 
  0x0000023411612400: 0000 0049 | 8b01 a802 | 0f85 2300 | 0000 4883 | c801 4889 | 03f0 490f | b119 0f84 | 3700 0000 
  0x0000023411612420: 482b c448 | 2507 f0ff | ff48 8903 | e924 0000 | 004c 8bd0 | 4833 c0f0 | 4d0f b17a | 3e48 c703 
  0x0000023411612440: 0300 0000 | 7411 4c3b | f875 1549 | ff82 8600 | 0000 4833 | c075 0949 | ff87 5005 | 0000 33c0 
  0x0000023411612460: 0f85 f615 | 0000 478b | 5cc4 1447 | 8b5c dc10 | 4585 db0f | 855b 1b00 | 0048 8d84 | 2480 0000 
  0x0000023411612480: 0048 8338 | 000f 8479 | 0000 004d | 8b11 41f6 | c202 0f84 | 6200 0000 | 4983 ba86 | 0000 0000 
  0x00000234116124a0: 7409 49ff | 8a86 0000 | 00eb 4b49 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 | c742 3e00 
  0x00000234116124c0: 0000 00eb | 3d49 83ba | 9e00 0000 | 0074 2248 | 33c0 49c7 | 423e 0000 | 0000 f083 

  0x00000234116124dc: ;   {no_reloc}
  0x00000234116124dc: 0424 0049 | 83ba 9e00 | 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb0c a800 | eb08 4c8b 
  0x00000234116124fc: 10f0 4d0f | b111 750a | 49ff 8f50 | 0500 0045 | 33d2 0f85 | 7515 0000 | 4c8b 5c24 | 2845 8b53 
  0x000002341161251c: 2847 8b4c | d468 4f8b | 54cc 104d | 85d2 0f84 | c41a 0000 | 498b eb4f | 8b44 cc10 | 4b8d 14cc 
  0x000002341161253c: ;   {optimized virtual_call}
  0x000002341161253c: 6666 90e8 

  0x0000023411612540: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual _end {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.View::unlock@9 (line 751)
                      ; - com.sun.prism.PresentableState::unlock@11 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x0000023411612540: 3cc5 63ff 

  0x0000023411612544: ;   {other}
  0x0000023411612544: 0f1f 8400 | b417 000c | 448b 5d28 

  0x0000023411612550: ; implicit exception: dispatches to 0x0000023411614e84
  0x0000023411612550: 478b 54dc | 6c47 8b5c | d438 4585 | db0f 8459 | 1300 0045 | 33c0 4787 | 44dc 0c8b | 6d30 458b 
  0x0000023411612570: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x0000023411612570: 5cec 0841 | 81fb d875 | 0201 0f85 | 3115 0000 

  0x0000023411612580: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x000000070bae0cf0})}
  0x0000023411612580: 49ba f00c | ae0b 0700 | 0000 458b | 5a34 478b | 54dc 1845 | 85d2 0f84 | fc05 0000 | 4b8d 34d4 
  0x00000234116125a0: 4b8d 1cdc | e95f 0500 | 0044 8b58 | 4847 8b54 

  0x00000234116125b0: ;   {oop(a 'com/sun/prism/paint/Paint$Type'{0x000000070ba033f0})}
  0x00000234116125b0: dc10 4181 | fa7e 0674 | e10f 8580 | f6ff ffc6 | 4028 01c5 | f35a c9c5 | fa11 4818 | c5f3 5ac8 
  0x00000234116125d0: c5fa 1148 | 14e9 76f6 | ffff 4533 | c048 8b54 

  0x00000234116125e0: ;   {oop([B{0x000000070ba35c38})}
  0x00000234116125e0: 2428 48bd | 385c a30b | 0700 0000 

  0x00000234116125ec: ;   {optimized virtual_call}
  0x00000234116125ec: 6666 90e8 

  0x00000234116125f0: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [40]=Oop [48]=Oop }
                      ;*invokevirtual paintImpl {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@37 (line 57)
  0x00000234116125f0: ec41 feff 

  0x00000234116125f4: ;   {other}
  0x00000234116125f4: 0f1f 8400 | 6418 000d | 4c8b 5424 | 3045 8b52 | 3c43 8b5c | d414 418b | 7cdc 0c47 | 0fbe 54d4 
  0x0000023411612614: 10c4 622a | f7c7 4183 | c0f1 4585 | c00f 8c0d | 0f00 0045 | 85d2 0f85 | 9414 0000 | 85ff 0f86 
  0x0000023411612634: 5c0f 0000 | 498d 34dc | 498d 4cdc | 1080 3951 | 0f85 ea0e | 0000 488b | 5424 3841 | b80f 0000 
  0x0000023411612654: 0045 33c9 | 49ba 404f | c310 3402 | 0000 41ff 

  0x0000023411612664: ;   {other}
  0x0000023411612664: d20f 1f84 | 0000 0000 | 0085 c00f | 8dbf 0e00 | 0083 c010 | 83f8 0f7d | 483b c70f | 830f 1000 
  0x0000023411612684: 0083 ff0e | 0f86 0610 | 0000 83f8 | 0f0f 83fd | 0f00 0044 | 8bc8 4d63 | d146 0fbe 

  0x00000234116126a0: ;   {oop([B{0x000000070ba35c38})}
  0x00000234116126a0: 5c16 1049 | b838 5ca3 | 0b07 0000 | 0047 0fbe | 5410 1045 | 3bda 0f84 | 7906 0000 | 4585 c90f 
  0x00000234116126c0: 8d6f 0e00 

  0x00000234116126c4: ;   {oop(a 'java/lang/Class'{0x000000070bb34e08} = 'com/sun/prism/impl/Disposer')}
  0x00000234116126c4: 0049 ba08 | 4eb3 0b07 | 0000 0045 | 8b52 7045 | 85d2 0f84 | 700e 0000 | 4f8d 04d4 | 488d 9c24 
  0x00000234116126e4: 8000 0000 | 498b 00a8 | 020f 8523 | 0000 0048 | 83c8 0148 | 8903 f049 | 0fb1 180f | 8437 0000 
  0x0000023411612704: 0048 2bc4 | 4825 07f0 | ffff 4889 | 03e9 2400 | 0000 4c8b | d848 33c0 | f04d 0fb1 | 7b3e 48c7 
  0x0000023411612724: 0303 0000 | 0074 114c | 3bf8 7515 | 49ff 8386 | 0000 0048 | 33c0 7509 | 49ff 8750 | 0500 0033 
  0x0000023411612744: c00f 8565 | 0e00 0047 | 8b5c d40c 

  0x0000023411612750: ; implicit exception: dispatches to 0x0000023411614ae8
  0x0000023411612750: 478b 4cdc 

  0x0000023411612754: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x0000023411612754: 0841 81f9 | f800 0400 | 0f85 7b0e | 0000 4f8d | 0cdc 453b | 610c 0f85 | fc09 0000 | 488d 8424 
  0x0000023411612774: 8000 0000 | 4883 3800 | 0f84 7900 | 0000 4d8b | 1041 f6c2 | 020f 8462 | 0000 0049 | 83ba 8600 
  0x0000023411612794: 0000 0074 | 0949 ff8a | 8600 0000 | eb4b 498b | 8296 0000 | 0049 0b82 | 8e00 0000 | 750a 49c7 
  0x00000234116127b4: 423e 0000 | 0000 eb3d | 4983 ba9e | 0000 0000 | 7422 4833 | c049 c742 | 3e00 0000 | 00f0 8304 
  0x00000234116127d4: 2400 4983 | ba9e 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 0ca8 00eb | 084c 8b10 
  0x00000234116127f4: f04d 0fb1 | 1075 0a49 | ff8f 5005 | 0000 4533 | d20f 85f5 

  0x0000023411612808: ;   {oop(a 'java/lang/Class'{0x000000070bb34e08} = 'com/sun/prism/impl/Disposer')}
  0x0000023411612808: 0d00 0049 | ba08 4eb3 | 0b07 0000 | 0045 8b42 | 7045 85c0 | 0f84 420d | 0000 4f8d | 0cc4 488d 
  0x0000023411612828: 9c24 8000 | 0000 498b | 01a8 020f | 8523 0000 | 0048 83c8 | 0148 8903 | f049 0fb1 | 190f 8437 
  0x0000023411612848: 0000 0048 | 2bc4 4825 | 07f0 ffff | 4889 03e9 | 2400 0000 | 4c8b d048 | 33c0 f04d | 0fb1 7a3e 
  0x0000023411612868: 48c7 0303 | 0000 0074 | 114c 3bf8 | 7515 49ff | 8286 0000 | 0048 33c0 | 7509 49ff | 8750 0500 
  0x0000023411612888: 0033 c00f | 8597 0d00 | 0047 8b5c | c414 478b | 5cdc 1045 | 85db 0f85 | 7c12 0000 | 488d 8424 
  0x00000234116128a8: 8000 0000 | 4883 3800 | 0f84 7900 | 0000 4d8b | 1141 f6c2 | 020f 8462 | 0000 0049 | 83ba 8600 
  0x00000234116128c8: 0000 0074 | 0949 ff8a | 8600 0000 | eb4b 498b | 8296 0000 | 0049 0b82 | 8e00 0000 | 750a 49c7 
  0x00000234116128e8: 423e 0000 | 0000 eb3d | 4983 ba9e | 0000 0000 | 7422 4833 | c049 c742 | 3e00 0000 | 00f0 8304 
  0x0000023411612908: ;   {no_reloc}
  0x0000023411612908: 2400 4983 | ba9e 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 0ca8 00eb | 084c 8b10 
  0x0000023411612928: f04d 0fb1 | 1175 0a49 | ff8f 5005 | 0000 4533 | d20f 8516 | 0d00 004c | 8b44 2428 | 458b 5028 
  0x0000023411612948: ; implicit exception: dispatches to 0x0000023411614b20
  0x0000023411612948: 478b 5cd4 | 6c47 8b54 | dc38 4585 | d20f 8421 | 0c00 0045 | 33db 4787 | 5cd4 0c45 | 8b58 3047 
  0x0000023411612968: 8b54 dc08 

  0x000002341161296c: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x000002341161296c: 4181 fad8 | 7502 010f | 8504 0d00 

  0x0000023411612978: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x000000070bae0cf0})}
  0x0000023411612978: 0049 baf0 | 0cae 0b07 | 0000 0045 | 8b52 3447 | 8b44 d418 | 4585 c00f | 84c3 0000 | 004b 8d34 
  0x0000023411612998: c44b 8d3c | d4eb 2990 | 41ff c045 | 8943 1444 | 8b56 184d | 8b9f 5804 

  0x00000234116129b0: ; ImmutableOopMap {r10=NarrowOop rsi=Oop [48]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@119 (line 302)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
                      ;   {poll}
  0x00000234116129b0: 0000 4185 | 0345 85d2 | 0f84 9a00 | 0000 49c1 | e203 488b | fe49 8bf2 | 448b 5e0c 

  0x00000234116129cc: ; implicit exception: dispatches to 0x00000234116149f8
  0x00000234116129cc: 438b 5cdc | 0c41 807f | 4000 0f85 | 0504 0000 

  0x00000234116129dc: ; implicit exception: dispatches to 0x0000023411614a0c
  0x00000234116129dc: 458b 5cdc 

  0x00000234116129e0: ;   {metadata('com/sun/prism/d3d/D3DTextureResource')}
  0x00000234116129e0: 0841 81fb | 8006 2501 | 0f85 821f | 0000 4d8d | 1cdc 450f | b653 1a45 | 85d2 0f85 | 010a 0000 
  0x0000023411612a00: 458b 431c 

  0x0000023411612a04: ; implicit exception: dispatches to 0x0000023411614a58
  0x0000023411612a04: 478b 4cc4 

  0x0000023411612a08: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x0000023411612a08: 0841 81f9 | 080d 2501 | 0f85 9a1f | 0000 4f8d | 14c4 4d8b | 5210 4d85 | d20f 8401 | 0a00 0045 
  0x0000023411612a28: 0fb6 4318 | 4585 c00f | 8572 ffff | ff45 8b43 | 0c45 85c0 | 0f8f 1e0a | 0000 458b | 4314 4181 
  0x0000023411612a48: f800 0400 | 000f 8c4d | ffff ffe9 | 4fff ffff 

  0x0000023411612a58: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070b87c4f0})}
  0x0000023411612a58: 49ba f0c4 | 870b 0700 | 0000 418b | 5a0c 418b | 74dc 1045 | 8b5c dc0c | 4d8b d349 | c1e2 034c 
  0x0000023411612a78: 8b44 2430 | 4d3b d00f | 85bb 1000 | 0083 fe01 | 0f85 9606 | 0000 4180 | 7f40 000f | 8593 0600 
  0x0000023411612a98: 0045 8964 | dc0c 41bb | 0100 0000 | ffce 4189 | 74dc 10f0 | 8344 24c0 | 0045 85db | 740e 458b 
  0x0000023411612ab8: 5cdc 1445 | 85db 0f85 | d901 0000 | 4881 c490 | 0000 005d 

  0x0000023411612acc: ;   {poll_return}
  0x0000023411612acc: 493b a750 | 0400 000f | 8747 2e00 | 00c3 660f | 1f44 0000 | 41ff c345 | 895a 1444 | 8b5e 184d 
  0x0000023411612aec: 8b97 5804 

  0x0000023411612af0: ; ImmutableOopMap {r11=NarrowOop rsi=Oop [48]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@119 (line 302)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
                      ;   {poll}
  0x0000023411612af0: 0000 4185 | 0245 85db | 0f84 9a00 | 0000 4f8d | 14dc 488b | de49 8bf2 | 448b 560c 

  0x0000023411612b0c: ; implicit exception: dispatches to 0x0000023411614a28
  0x0000023411612b0c: 438b 7cd4 | 0c41 807f | 4000 0f85 | f702 0000 

  0x0000023411612b1c: ; implicit exception: dispatches to 0x0000023411614a3c
  0x0000023411612b1c: 458b 54fc 

  0x0000023411612b20: ;   {metadata('com/sun/prism/d3d/D3DTextureResource')}
  0x0000023411612b20: 0841 81fa | 8006 2501 | 0f85 621e | 0000 4d8d | 14fc 450f | b65a 1a45 | 85db 0f85 | 5d09 0000 
  0x0000023411612b40: 458b 421c 

  0x0000023411612b44: ; implicit exception: dispatches to 0x0000023411614a7c
  0x0000023411612b44: 478b 5cc4 

  0x0000023411612b48: ;   {metadata('com/sun/prism/d3d/D3DTextureData')}
  0x0000023411612b48: 0841 81fb | 080d 2501 | 0f85 7e1e | 0000 4f8d | 1cc4 4d8b | 5b10 4d85 | db0f 845d | 0900 0045 
  0x0000023411612b68: 0fb6 5a18 | 4585 db0f | 8572 ffff | ff45 8b5a | 0c45 85db | 0f8f 9209 | 0000 458b | 5a14 4181 
  0x0000023411612b88: fb00 0400 | 000f 8c4d | ffff ffe9 | 4fff ffff 

  0x0000023411612b98: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070b87c4f0})}
  0x0000023411612b98: 49ba f0c4 | 870b 0700 | 0000 418b | 5a0c 418b | 7cdc 1041 | 8b6c dc0c | 4c8b d549 | c1e2 034c 
  0x0000023411612bb8: 8b5c 2430 | 4d3b d30f | 855b 1400 | 0083 ff01 | 0f85 9605 | 0000 4180 | 7f40 000f | 85c4 0600 
  0x0000023411612bd8: 0045 8964 | dc0c 41ba | 0100 0000 | ffcf 4189 | 7cdc 10f0 | 8344 24c0 | 0045 85d2 | 0f84 cafe 
  0x0000023411612bf8: ffff 458b | 54dc 1445 | 85d2 0f84 | bcfe ffff | 478b 44d4 | 1445 85c0 | 0f84 aefe | ffff 478b 
  0x0000023411612c18: 5cc4 0c45 | 85db 0f84 | a0fe ffff | 438b 44c4 | 0c44 8bd0 | 4183 e2fe | f047 0fb1 | 54c4 0c40 
  0x0000023411612c38: 0f94 c540 | 0fb6 ed85 | ed0f 8492 | 1800 0043 | 8b6c c418 | 85ed 0f84 | 70fe ffff | 458b 5cec 
  0x0000023411612c58: 0849 ba00 | 0000 2234 | 0200 004d | 03d3 4d8b 

  0x0000023411612c68: ;   {metadata('java/lang/BaseVirtualThread')}
  0x0000023411612c68: 5240 49bb | 989b 0222 | 3402 0000 | 4d3b d30f | 840f 1800 | 004d 8d04 

  0x0000023411612c80: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000704c83e30})}
  0x0000023411612c80: ec48 ba30 | 3ec8 0407 

  0x0000023411612c88: ;   {optimized virtual_call}
  0x0000023411612c88: 0000 00e8 

  0x0000023411612c8c: ; ImmutableOopMap {}
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x0000023411612c8c: f0bd 63ff 

  0x0000023411612c90: ;   {other}
  0x0000023411612c90: 0f1f 8400 | 001f 0010 | e927 feff | ff47 8b44 | dc14 4585 | c00f 8419 | feff ff47 | 8b54 c40c 
  0x0000023411612cb0: 4585 d20f | 840b feff | ff43 8b44 | c40c 448b | d841 83e3 | fef0 470f | b15c c40c | 400f 94c5 
  0x0000023411612cd0: 400f b6ed | 85ed 0f84 | c417 0000 | 438b 6cc4 | 1885 ed0f | 84db fdff | ff45 8b54 | ec08 49bb 
  0x0000023411612cf0: 0000 0022 | 3402 0000 | 4d03 da4d 

  0x0000023411612cfc: ;   {metadata('java/lang/BaseVirtualThread')}
  0x0000023411612cfc: 8b53 4049 | bb98 9b02 | 2234 0200 | 004d 3bd3 | 0f84 6617 | 0000 4d8d 

  0x0000023411612d14: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000704c83e30})}
  0x0000023411612d14: 04ec 48ba | 303e c804 | 0700 0000 

  0x0000023411612d20: ;   {optimized virtual_call}
  0x0000023411612d20: 6666 90e8 

  0x0000023411612d24: ; ImmutableOopMap {}
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x0000023411612d24: 58bd 63ff 

  0x0000023411612d28: ;   {other}
  0x0000023411612d28: 0f1f 8400 | 981f 0011 | e98f fdff | ff41 bb0f | 0000 0044 | 2bd8 4533 | c083 f80f | 450f 4fd8 
  0x0000023411612d48: 4181 fbe8 | 0300 0041 | b8e8 0300 | 0045 0f47 | d844 03d8 | 41ff c145 | 3bcb 0f8c | 32f9 ffff 
  0x0000023411612d68: 4d8b 9758 

  0x0000023411612d6c: ; ImmutableOopMap {rsi=Oop [40]=Oop [48]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@98 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
                      ;   {poll}
  0x0000023411612d6c: 0400 0041 | 8502 4183 | f90f 0f8d | 49f9 ffff | 418b c1e9 | 13f9 ffff | 43c7 44d4 | 0c03 0000 
  0x0000023411612d8c: 00e9 aded | ffff 41ba | 0f00 0000 | 442b d045 | 33c0 83f8 | 0f45 0f4f | d041 81fa | e803 0000 
  0x0000023411612dac: 41b8 e803 | 0000 450f | 47d0 4403 | d041 ffc1 | 453b ca0f | 8caa f4ff | ff4d 8b97 

  0x0000023411612dc8: ; ImmutableOopMap {rsi=Oop [40]=Oop [48]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@98 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411612dc8: 5804 0000 

  0x0000023411612dcc: ;   {poll}
  0x0000023411612dcc: 4185 0241 | 83f9 0f0f | 8dc1 f4ff | ff41 8bc1 | e98b f4ff | ff85 db0f | 84f3 fbff | ff4d 8b57 
  0x0000023411612dec: 2848 8bcb | 48c1 e103 | 4d85 d20f | 84e7 0500 | 004d 8b5f | 384b 894c | 13f8 4983 | c2f8 4d89 
  0x0000023411612e0c: 5728 e9c9 | fbff ff85 | ff0f 8401 | fdff ff4d | 8b57 2848 | 8bcf 48c1 | e103 4d85 | d20f 8451 
  0x0000023411612e2c: 0600 004d | 8b5f 384b | 894c 13f8 | 4983 c2f8 | 4d89 5728 | e9d7 fcff | ff44 8b5c | 2460 438b 
  0x0000023411612e4c: 6cdc 3045 | 8b5c ec08 

  0x0000023411612e54: ;   {metadata('com/sun/prism/d3d/D3DTexture')}
  0x0000023411612e54: 4181 fbc8 | 9524 010f | 85bf 1600 | 0049 8d14 | ec44 8b52 | 3445 85d2 | 0f84 7e16 | 0000 4789 
  0x0000023411612e74: 64d4 1443 | ff44 d40c | 448b 5424 | 604b 8d1c | d443 8b4c | d434 478b | 54d4 1845 | 8bda 448b 
  0x0000023411612e94: 421c 458b | d044 8b4c | 2460 478b | 4ccc 1041 | 8bc1 448b | 4a38 4c8b | c149 c1e0 | 0349 c1e1 
  0x0000023411612eb4: 0333 ff33 | f633 c933 | ed89 2c24 | 4489 5c24 | 0889 4424 | 1044 8954 | 2418 41ba | 0100 0000 
  0x0000023411612ed4: 4489 5424 

  0x0000023411612ed8: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411612ed8: 2048 bd38 | 5ca3 0b07 | 0000 0048 | 895c 2478 

  0x0000023411612ee8: ;   {optimized virtual_call}
  0x0000023411612ee8: 6666 90e8 

  0x0000023411612eec: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [76]=NarrowOop [84]=NarrowOop [88]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [120]=Oop }
                      ;*invokeinterface update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@62 (line 115)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411612eec: 90bb 63ff 

  0x0000023411612ef0: ;   {other}
  0x0000023411612ef0: 0f1f 8400 | 6021 0014 | 448b 5c24 | 6043 8b6c | dc30 458b 

  0x0000023411612f04: ;   {metadata('com/sun/prism/d3d/D3DTexture')}
  0x0000023411612f04: 5cec 0841 | 81fb c895 | 2401 0f85 | 5016 0000 | 4d8d 14ec | 458b 5234 | 458b da43 | 8b6c d40c 
  0x0000023411612f24: 85ed 0f8e | f416 0000 | 448b 4424 | 6047 8964 | c410 458b | d047 8964 | d418 4789 | 64d4 0c47 
  0x0000023411612f44: 8964 d414 | ffcd 4389 | 6cdc 0ce9 | faed ffff | 448b 5c24 | 5443 8b6c | dc30 458b 

  0x0000023411612f60: ;   {metadata('com/sun/prism/d3d/D3DTexture')}
  0x0000023411612f60: 5cec 0841 | 81fb c895 | 2401 0f85 | 3816 0000 | 498d 14ec | 448b 5234 | 4585 d20f | 8487 1500 
  0x0000023411612f80: 0047 8964 | d414 43ff | 44d4 0c44 | 8b54 2454 | 4f8d 2cd4 | 458b da43 | 8b7c dc34 | 478b 5cdc 
  0x0000023411612fa0: 1845 8bd3 | 448b 5a1c | 418b db44 | 8b44 2454 | 478b 5cc4 | 1044 8b4a | 384c 8bc7 | 49c1 e003 
  0x0000023411612fc0: 49c1 e103 | 33ff 33f6 | 33c9 33c0 | 8904 2444 | 8954 2408 | 4489 5c24 | 1089 5c24 | 1841 ba01 
  0x0000023411612fe0: 0000 0044 | 8954 2420 

  0x0000023411612fe8: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411612fe8: 48bd 385c | a30b 0700 | 0000 4c89 

  0x0000023411612ff4: ;   {optimized virtual_call}
  0x0000023411612ff4: 6c24 70e8 

  0x0000023411612ff8: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [80]=NarrowOop [84]=NarrowOop [88]=NarrowOop [96]=Oop [112]=Oop }
                      ;*invokeinterface update {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@62 (line 115)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411612ff8: 84ba 63ff 

  0x0000023411612ffc: ;   {other}
  0x0000023411612ffc: 0f1f 8400 | 6c22 0015 | 448b 5c24 | 5443 8b6c | dc30 458b 

  0x0000023411613010: ;   {metadata('com/sun/prism/d3d/D3DTexture')}
  0x0000023411613010: 5cec 0841 | 81fb c895 | 2401 0f85 | c415 0000 | 4d8d 14ec | 458b 5a34 | 458b d343 | 8b6c dc0c 
  0x0000023411613030: 85ed 0f8e | 3c16 0000 | 448b 4424 | 5447 8964 | c410 458b | d847 8964 | dc18 4789 | 64dc 0c47 
  0x0000023411613050: 8964 dc14 | ffcd 458b | da43 896c | dc0c e93b | efff ff45 | 8b54 fc0c | 4585 d20f | 8406 e7ff 
  0x0000023411613070: ff4d 8b5f | 2849 8bca | 48c1 e103 | 4d85 db0f | 8483 0600 | 004d 8b57 | 384b 894c | 1af8 4983 
  0x0000023411613090: c3f8 4d89 | 5f28 e9dc | e6ff ff4d | 8b57 584d | 8b5f 48f0 | 8344 24c0 | 0080 3900 | 0f84 ffe6 
  0x00000234116130b0: ffff 4488 | 214d 85db | 751d 498b | d749 ba70 | 26a3 58ff | 7f00 0041 

  0x00000234116130c8: ;   {other}
  0x00000234116130c8: ffd2 0f1f | 8400 0000 | 0000 e9da | e6ff ff4b | 894c 1af8 | 4983 c3f8 | 4d89 5f48 | e9c8 e6ff 
  0x00000234116130e8: ff45 8b5c | fc0c 4d8b | d349 c1e2 | 034c 3bd3 | 0f84 5202 | 0000 488b | eb4c 8b54 | 2430 498b 
  0x0000023411613108: d241 b801 

  0x000002341161310c: ;   {optimized virtual_call}
  0x000002341161310c: 0000 00e8 

  0x0000023411613110: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*invokevirtual acquire {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@9 (line 153)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x0000023411613110: 6cb9 63ff 

  0x0000023411613114: ;   {other}
  0x0000023411613114: 0f1f 8400 | 8423 0016 | 488b dde9 | 8de6 ffff | 4533 dbe9 | 78f9 ffff | 458b 54dc | 0c45 85d2 
  0x0000023411613134: 0f84 5ff9 | ffff 4d8b | 5f28 498b | ca48 c1e1 | 034d 85db | 0f84 9609 | 0000 4d8b | 5738 4b89 
  0x0000023411613154: 4c1a f849 | 83c3 f84d | 895f 28e9 | 35f9 ffff | 4533 d2e9 | 78fa ffff | 458b 5918 | 4585 db0f 
  0x0000023411613174: 8447 1500 | 0049 8be9 | 4c89 4424 | 3844 8954 | 2424 4b8d 

  0x0000023411613188: ;   {optimized virtual_call}
  0x0000023411613188: 14dc 90e8 

  0x000002341161318c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000002341161318c: 5058 e5ff 

  0x0000023411613190: ;   {other}
  0x0000023411613190: 0f1f 8400 | 0024 0017 

  0x0000023411613198: ;   {optimized virtual_call}
  0x0000023411613198: 488b d5e8 

  0x000002341161319c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.ref.ReferenceQueue::poll@17 (line 184)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000002341161319c: e025 30f8 

  0x00000234116131a0: ;   {other}
  0x00000234116131a0: 0f1f 8400 | 1024 0018 | 4889 4424 | 4044 8b5d | 1845 85db | 0f84 2a15 | 0000 4b8d | 14dc 488b 
  0x00000234116131c0: ;   {optimized virtual_call}
  0x00000234116131c0: 6c24 28e8 

  0x00000234116131c4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116131c4: 1853 e5ff 

  0x00000234116131c8: ;   {other}
  0x00000234116131c8: 0f1f 8400 | 3824 0019 | 4c8b 5424 | 404d 85d2 | 0f85 7e05 | 0000 4c8b | 4424 38e9 | 88f5 ffff 
  0x00000234116131e8: 4c8b 5424 | 5045 8b5a | 4445 85db | 0f84 81ec | ffff 4d8b | 5728 498b | cb48 c1e1 | 034d 85d2 
  0x0000023411613208: 0f84 ba0a | 0000 4d8b | 5f38 4b89 | 4c13 f849 | 83c2 f84d | 8957 28e9 | 57ec ffff | 4d8b 5758 
  0x0000023411613228: 4d8b 5f48 | f083 4424 | c000 4180 | 3800 7454 | 4588 204d | 85db 740f | 4f89 441a | f849 83c3 
  0x0000023411613248: f84d 895f | 48eb 3dc4 | c179 7efd | c5f9 7ef7 | c5f9 7ede | c5f9 7ed3 | 498b c849 | 8bd7 49ba 
  0x0000023411613268: 7026 a358 | ff7f 0000 

  0x0000023411613270: ;   {other}
  0x0000023411613270: 41ff d20f | 1f84 0000 | 0000 00c5 | f96e d3c5 | f96e dec5 | f96e f7c4 | c179 6efd | 4c8b 5424 
  0x0000023411613290: 4045 8b5a | 2041 8bfb | e943 ecff | ff45 8b5c | dc0c 4585 | db0f 842e | f9ff ff4d | 8b57 2849 
  0x00000234116132b0: 8bcb 48c1 | e103 4d85 | d20f 843d | 0a00 004d | 8b5f 384b | 894c 13f8 | 4983 c2f8 | 4d89 5728 
  0x00000234116132d0: e904 f9ff | ff45 8b51 | 1845 85d2 | 0f84 9014 | 0000 498b | e94c 8944 | 2438 4489 | 5c24 244b 
  0x00000234116132f0: ;   {optimized virtual_call}
  0x00000234116132f0: 8d14 d4e8 

  0x00000234116132f4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116132f4: 88b7 63ff 

  0x00000234116132f8: ;   {other}
  0x00000234116132f8: 0f1f 8400 | 6825 001a 

  0x0000023411613300: ;   {optimized virtual_call}
  0x0000023411613300: 488b d5e8 

  0x0000023411613304: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.ref.ReferenceQueue::poll@17 (line 184)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613304: 78b7 63ff 

  0x0000023411613308: ;   {other}
  0x0000023411613308: 0f1f 8400 | 7825 001b | 4889 4424 | 4044 8b5d | 1845 85db | 0f84 7214 | 0000 4b8d | 14dc 488b 
  0x0000023411613328: ;   {optimized virtual_call}
  0x0000023411613328: 6c24 28e8 

  0x000002341161332c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000002341161332c: 50b7 63ff 

  0x0000023411613330: ;   {other}
  0x0000023411613330: 0f1f 8400 | a025 001c | 4c8b 5424 | 404d 85d2 | 0f85 1608 | 0000 4c8b | 4424 38e9 | f5ef ffff 
  0x0000023411613350: 458b 54fc | 1041 ffc2 | 4585 d27c | 1045 8954 | fc10 f083 | 4424 c000 | e944 e4ff | ff49 8b87 
  0x0000023411613370: b801 0000 | 4c8b d049 | 83c2 284d | 3b97 c801 | 0000 0f83 | 3011 0000 | 4d89 97b8 | 0100 0041 
  0x0000023411613390: 0f0d 8ac0 | 0000 0048 | c700 0100 

  0x000002341161339c: ;   {metadata('java/lang/Error')}
  0x000002341161339c: 0000 c740 | 08b0 0901 | 0044 8960 | 0c4c 8960 | 104c 8960 | 184c 8960 | 2048 8be8 

  0x00000234116133b8: ;   {oop("Maximum lock count exceeded"{0x0000000704c83658})}
  0x00000234116133b8: 49b8 5836 | c804 0700 | 0000 488b 

  0x00000234116133c4: ;   {optimized virtual_call}
  0x00000234116133c4: d566 90e8 

  0x00000234116133c8: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop }
                      ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock@45 (line 231)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@1 (line 152)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x00000234116133c8: b4b6 63ff 

  0x00000234116133cc: ;   {other}
  0x00000234116133cc: 0f1f 8400 | 3c26 001d | 488b d548 | 81c4 9000 

  0x00000234116133dc: ;   {runtime_call _rethrow_Java}
  0x00000234116133dc: 0000 5de9 | 1c36 71ff | 498b d749 | ba90 26a3 | 58ff 7f00 | 0041 ffd2 

  0x00000234116133f4: ;   {other}
  0x00000234116133f4: 0f1f 8400 | 0000 0000 | e9db f5ff | ffba 45ff | ffff 488b | ef48 8974 | 2428 4c89 | 5c24 3844 
  0x0000023411613414: 8954 2424 

  0x0000023411613418: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613418: 6666 90e8 

  0x000002341161341c: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::_isgone@10 (line 36)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x000002341161341c: e011 64ff 

  0x0000023411613420: ;   {other}
  0x0000023411613420: 0f1f 8400 | 9026 001e | 4533 c04d | 3bd0 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x0000023411613440: ffff 4889 | 7c24 2848 | 8974 2430 | 4c89 5c24 

  0x0000023411613450: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613450: 3866 90e8 

  0x0000023411613454: ; ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x0000023411613454: a811 64ff 

  0x0000023411613458: ;   {other}
  0x0000023411613458: 0f1f 8400 | c826 001f | ba45 ffff | ff48 8bee | 4c89 5c24 | 2844 8944 

  0x0000023411613470: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613470: 2424 90e8 

  0x0000023411613474: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::isLocked@4 (line 87)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@68 (line 289)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x0000023411613474: 8811 64ff 

  0x0000023411613478: ;   {other}
  0x0000023411613478: 0f1f 8400 | e826 0020 | 498b d749 | ba90 26a3 | 58ff 7f00 | 0041 ffd2 

  0x0000023411613490: ;   {other}
  0x0000023411613490: 0f1f 8400 | 0000 0000 | e97f f6ff | ffba 45ff | ffff 488b | eb48 8974 | 2428 4c89 | 5424 3844 
  0x00000234116134b0: 895c 2424 

  0x00000234116134b4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116134b4: 6666 90e8 

  0x00000234116134b8: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::_isgone@10 (line 36)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x00000234116134b8: 4411 64ff 

  0x00000234116134bc: ;   {other}
  0x00000234116134bc: 0f1f 8400 | 2c27 0021 | 4533 c04d | 3bd8 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x00000234116134dc: ffff 4889 | 5c24 2848 | 8974 2430 | 4c89 5424 

  0x00000234116134ec: ;   {runtime_call UncommonTrapBlob}
  0x00000234116134ec: 3866 90e8 

  0x00000234116134f0: ; ImmutableOopMap {[40]=Oop [48]=Oop [56]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x00000234116134f0: 0c11 64ff 

  0x00000234116134f4: ;   {other}
  0x00000234116134f4: 0f1f 8400 | 6427 0022 | baf6 ffff | ff48 8b6c 

  0x0000023411613504: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613504: 2428 90e8 

  0x0000023411613508: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x0000023411613508: f410 64ff 

  0x000002341161350c: ;   {other}
  0x000002341161350c: 0f1f 8400 | 7c27 0023 | ba45 ffff | ff48 8bee | 4c89 5424 | 2844 895c 

  0x0000023411613524: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613524: 2424 90e8 

  0x0000023411613528: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::isLocked@4 (line 87)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@68 (line 289)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x0000023411613528: d410 64ff 

  0x000002341161352c: ;   {other}
  0x000002341161352c: 0f1f 8400 | 9c27 0024 | ba45 ffff | ff48 8b6c 

  0x000002341161353c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161353c: 2428 90e8 

  0x0000023411613540: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.Disposer::cleanUp@11 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411613540: bc10 64ff 

  0x0000023411613544: ;   {other}
  0x0000023411613544: 0f1f 8400 | b427 0025 | baf6 ffff | ff48 8b6c 

  0x0000023411613554: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613554: 2428 90e8 

  0x0000023411613558: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual disposeUnreachables {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411613558: a410 64ff 

  0x000002341161355c: ;   {other}
  0x000002341161355c: 0f1f 8400 | cc27 0026 | baf6 ffff | ff48 8b6c 

  0x000002341161356c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161356c: 2428 90e8 

  0x0000023411613570: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual processDisposalQueue {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411613570: 8c10 64ff 

  0x0000023411613574: ;   {other}
  0x0000023411613574: 0f1f 8400 | e427 0027 | baf6 ffff | ff49 8be8 

  0x0000023411613584: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613584: 6666 90e8 

  0x0000023411613588: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getAndSet {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::setPainting@5 (line 293)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@69 (line 124)
  0x0000023411613588: 7410 64ff 

  0x000002341161358c: ;   {other}
  0x000002341161358c: 0f1f 8400 | fc27 0028 | bae4 ffff | ff48 8b6c | 2428 895c 

  0x00000234116135a0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116135a0: 2428 90e8 

  0x00000234116135a4: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.ArraysSupport::mismatch@12 (line 389)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116135a4: 5810 64ff 

  0x00000234116135a8: ;   {other}
  0x00000234116135a8: 0f1f 8400 | 1828 0029 | 4c89 4424 | 3841 8bea | 498b d04c | 8d84 2480 

  0x00000234116135c0: ;   {runtime_call _complete_monitor_locking_Java}
  0x00000234116135c0: 0000 00e8 

  0x00000234116135c4: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@-1 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116135c4: 382b 71ff 

  0x00000234116135c8: ;   {other}
  0x00000234116135c8: 0f1f 8400 | 3828 002a | 448b d54c | 8b44 2438 | e96e f1ff | ffba deff | ffff 488b | 6c24 2844 
  0x00000234116135e8: 895c 2428 | 4489 5424 

  0x00000234116135f0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116135f0: 2c66 90e8 

  0x00000234116135f4: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop [44]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116135f4: 0810 64ff 

  0x00000234116135f8: ;   {other}
  0x00000234116135f8: 0f1f 8400 | 6828 002b | 498b c848 | 8d94 2480 | 0000 004d | 8bc7 49ba | 60f7 e358 | ff7f 0000 
  0x0000023411613618: ;   {other}
  0x0000023411613618: 41ff d20f | 1f84 0000 | 0000 00e9 | e3f1 ffff | 4c89 4c24 | 3841 8be8 | 498b d14c | 8d84 2480 
  0x0000023411613638: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000023411613638: 0000 00e8 

  0x000002341161363c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@-1 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000002341161363c: c02a 71ff 

  0x0000023411613640: ;   {other}
  0x0000023411613640: 0f1f 8400 | b028 002c | 448b c54c | 8b4c 2438 | e93c f2ff | ff49 8bc9 | 488d 9424 | 8000 0000 
  0x0000023411613660: 4d8b c749 | ba60 f7e3 | 58ff 7f00 | 0041 ffd2 

  0x0000023411613670: ;   {other}
  0x0000023411613670: 0f1f 8400 | 0000 0000 | e9c2 f2ff | ffba deff | ffff 418b 

  0x0000023411613684: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613684: eb66 90e8 

  0x0000023411613688: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@84 (line 127)
  0x0000023411613688: 740f 64ff 

  0x000002341161368c: ;   {other}
  0x000002341161368c: 0f1f 8400 | fc28 002d | ba76 ffff | ff48 8b6c | 2428 895c | 2424 8944 

  0x00000234116136a4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116136a4: 242c 90e8 

  0x00000234116136a8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@74 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116136a8: 540f 64ff 

  0x00000234116136ac: ;   {other}
  0x00000234116136ac: 0f1f 8400 | 1c29 002e | ba45 ffff | ff49 8be8 | 4489 5c24 

  0x00000234116136c0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116136c0: 2466 90e8 

  0x00000234116136c4: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@18 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 430)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x00000234116136c4: 380f 64ff 

  0x00000234116136c8: ;   {other}
  0x00000234116136c8: 0f1f 8400 | 3829 002f | ba45 ffff | ff49 8be8 | 894c 2424 

  0x00000234116136dc: ;   {runtime_call UncommonTrapBlob}
  0x00000234116136dc: 6666 90e8 

  0x00000234116136e0: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@25 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 430)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x00000234116136e0: 1c0f 64ff 

  0x00000234116136e4: ;   {other}
  0x00000234116136e4: 0f1f 8400 | 5429 0030 | ba45 ffff | ff49 8be8 | 4489 5c24 

  0x00000234116136f8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116136f8: 2466 90e8 

  0x00000234116136fc: ; ImmutableOopMap {rbp=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@32 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 430)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x00000234116136fc: 000f 64ff 

  0x0000023411613700: ;   {other}
  0x0000023411613700: 0f1f 8400 | 7029 0031 | 498b d749 | ba90 26a3 | 58ff 7f00 | 0041 ffd2 

  0x0000023411613718: ;   {other}
  0x0000023411613718: 0f1f 8400 | 0000 0000 | e952 e0ff | ffba 45ff | ffff 498b | e844 895c 

  0x0000023411613730: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613730: 2424 90e8 

  0x0000023411613734: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@4 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 430)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x0000023411613734: c80e 64ff 

  0x0000023411613738: ;   {other}
  0x0000023411613738: 0f1f 8400 | a829 0032 | ba45 ffff | ff49 8be8 | 894c 2424 

  0x000002341161374c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161374c: 6666 90e8 

  0x0000023411613750: ; ImmutableOopMap {rbp=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@51 (line 439)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x0000023411613750: ac0e 64ff 

  0x0000023411613754: ;   {other}
  0x0000023411613754: 0f1f 8400 | c429 0033 | 498b ea44 

  0x0000023411613760: ;   {metadata('java/lang/ref/PhantomReference')}
  0x0000023411613760: 8b5d 0841 | 81fb b8e8 | 0300 0f85 | b210 0000 | 4c8b d54c | 8954 2440 | 498b d248 | 8b6c 2428 
  0x0000023411613780: ;   {optimized virtual_call}
  0x0000023411613780: 6666 90e8 

  0x0000023411613784: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokevirtual clear0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.Reference::clear@1 (line 398)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@16 (line 175)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411613784: b869 d9ff 

  0x0000023411613788: ;   {other}
  0x0000023411613788: 0f1f 8400 | f829 0034 | 448b 5424 | 2443 8b6c | d410 458b 

  0x000002341161379c: ;   {metadata('java/util/Hashtable')}
  0x000002341161379c: 5cec 0841 | 81fb 20d4 | 0000 0f85 | 8810 0000 | 498d 14ec | 4c8b 4424 | 4048 8b6c 

  0x00000234116137b8: ;   {optimized virtual_call}
  0x00000234116137b8: 2428 90e8 

  0x00000234116137bc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116137bc: 1622 0000 

  0x00000234116137c0: ;   {other}
  0x00000234116137c0: 0f1f 8400 | 302a 0035 | 4c8b d844 | 8b50 0848 | be00 0000 | 2234 0200 | 0049 03f2 | 4c8b 5620 
  0x00000234116137e0: ;   {metadata('com/sun/prism/impl/Disposer$Record')}
  0x00000234116137e0: 49b8 c808 | 2523 3402 | 0000 4d3b | d00f 857d | 0b00 0049 | 8bd3 6666 | 9048 b840 | b2b2 6734 
  0x0000023411613800: ;   {virtual_call}
  0x0000023411613800: 0200 00e8 

  0x0000023411613804: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokeinterface dispose {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@32 (line 177)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411613804: 29fc 63ff 

  0x0000023411613808: ;   {other}
  0x0000023411613808: 0f1f 8400 | 782a 0036 | 448b 4424 | 2443 8b6c | c40c 458b 

  0x000002341161381c: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x000002341161381c: 5cec 0841 | 81fb f800 | 0400 0f85 | 1c10 0000 | 4d8d 14ec | 453b 620c | 0f85 c20e | 0000 4c8b 
  0x000002341161383c: 4424 38e9 | 2cef ffff | baf6 ffff | ff48 8b6c 

  0x000002341161384c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161384c: 2428 90e8 

  0x0000023411613850: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getNativeFrameBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.PresentableState::lock@19 (line 286)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x0000023411613850: ac0d 64ff 

  0x0000023411613854: ;   {other}
  0x0000023411613854: 0f1f 8400 | c42a 0037 | ba5e ffff | ff48 8b6c 

  0x0000023411613864: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613864: 2428 90e8 

  0x0000023411613868: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getDoPresent {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@441 (line 106)
  0x0000023411613868: 940d 64ff 

  0x000002341161386c: ;   {other}
  0x000002341161386c: 0f1f 8400 | dc2a 0038 | ba45 ffff | ff48 8b6c 

  0x000002341161387c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161387c: 2428 90e8 

  0x0000023411613880: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.Disposer::cleanUp@11 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613880: 7c0d 64ff 

  0x0000023411613884: ;   {other}
  0x0000023411613884: 0f1f 8400 | f42a 0039 | baf6 ffff | ff48 8b6c 

  0x0000023411613894: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613894: 2428 90e8 

  0x0000023411613898: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual disposeUnreachables {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613898: 640d 64ff 

  0x000002341161389c: ;   {other}
  0x000002341161389c: 0f1f 8400 | 0c2b 003a | baf6 ffff | ff48 8b6c 

  0x00000234116138ac: ;   {runtime_call UncommonTrapBlob}
  0x00000234116138ac: 2428 90e8 

  0x00000234116138b0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual processDisposalQueue {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116138b0: 4c0d 64ff 

  0x00000234116138b4: ;   {other}
  0x00000234116138b4: 0f1f 8400 | 242b 003b | baf6 ffff 

  0x00000234116138c0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116138c0: ff66 90e8 

  0x00000234116138c4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getAndSet {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::setPainting@5 (line 293)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@502 (line 124)
  0x00000234116138c4: 380d 64ff 

  0x00000234116138c8: ;   {other}
  0x00000234116138c8: 0f1f 8400 | 382b 003c | bade ffff 

  0x00000234116138d4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116138d4: ff66 90e8 

  0x00000234116138d8: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*invokeinterface isDeviceReady {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x00000234116138d8: 240d 64ff 

  0x00000234116138dc: ;   {other}
  0x00000234116138dc: 0f1f 8400 | 4c2b 003d | bade ffff | ff48 8b6c | 2428 894c | 2424 4489 

  0x00000234116138f4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116138f4: 5424 28e8 

  0x00000234116138f8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=NarrowOop }
                      ;*invokeinterface lockResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x00000234116138f8: 040d 64ff 

  0x00000234116138fc: ;   {other}
  0x00000234116138fc: 0f1f 8400 | 6c2b 003e | bade ffff | ff48 8b6c | 2428 4889 | 4424 30c5 | fa11 4c24 | 24c5 fa11 
  0x000002341161391c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161391c: 4424 38e8 

  0x0000023411613920: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokeinterface scale {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411613920: dc0c 64ff 

  0x0000023411613924: ;   {other}
  0x0000023411613924: 0f1f 8400 | 942b 003f | ba45 ffff | ff48 8b6c | 2428 4889 | 4424 30c5 | fb11 4c24 | 38c5 fb11 
  0x0000023411613944: 4424 4044 | 894c 244c 

  0x000002341161394c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161394c: 6666 90e8 

  0x0000023411613950: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop }
                      ;*tableswitch {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.AffineBase::scale@8 (line 2524)
                      ; - com.sun.javafx.geom.transform.Affine3D::scale@13 (line 701)
                      ; - com.sun.prism.impl.BaseGraphics::scale@20 (line 205)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411613950: ac0c 64ff 

  0x0000023411613954: ;   {other}
  0x0000023411613954: 0f1f 8400 | c42b 0040 | bade ffff 

  0x0000023411613960: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613960: ff66 90e8 

  0x0000023411613964: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop }
                      ;*invokeinterface prepare {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411613964: 980c 64ff 

  0x0000023411613968: ;   {other}
  0x0000023411613968: 0f1f 8400 | d82b 0041 | 498b d34c | 8d84 2480 

  0x0000023411613978: ;   {oop([B{0x000000070ba35c38})}
  0x0000023411613978: 0000 0048 | bd38 5ca3 | 0b07 0000 

  0x0000023411613984: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000023411613984: 0066 90e8 

  0x0000023411613988: ; ImmutableOopMap {rbp=Oop [56]=Derived_oop_rbp [36]=NarrowOop [40]=Oop [48]=Oop [64]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.tk.quantum.GlassScene::getDoPresent@-1 (line 337)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@441 (line 106)
  0x0000023411613988: 7427 71ff 

  0x000002341161398c: ;   {other}
  0x000002341161398c: 0f1f 8400 | fc2b 0042 | e9fd e6ff | ff49 8bcb | 488d 9424 | 8000 0000 | 4d8b c749 | ba60 f7e3 
  0x00000234116139ac: 58ff 7f00 | 0041 ffd2 

  0x00000234116139b4: ;   {other}
  0x00000234116139b4: 0f1f 8400 | 0000 0000 | e980 e7ff | ffba deff 

  0x00000234116139c4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116139c4: ffff 90e8 

  0x00000234116139c8: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*invokeinterface present {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x00000234116139c8: 340c 64ff 

  0x00000234116139cc: ;   {other}
  0x00000234116139cc: 0f1f 8400 | 3c2c 0043 | bae4 ffff | ff48 8b6c | 2428 895c 

  0x00000234116139e0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116139e0: 2428 90e8 

  0x00000234116139e4: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.util.ArraysSupport::mismatch@12 (line 389)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116139e4: 180c 64ff 

  0x00000234116139e8: ;   {other}
  0x00000234116139e8: 0f1f 8400 | 582c 0044 | 4c89 4424 | 3841 8beb | 498b d04c | 8d84 2480 

  0x0000023411613a00: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000023411613a00: 0000 00e8 

  0x0000023411613a04: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@-1 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613a04: f826 71ff 

  0x0000023411613a08: ;   {other}
  0x0000023411613a08: 0f1f 8400 | 782c 0045 | 448b dd4c | 8b44 2438 | e903 e9ff | ffba deff | ffff 4489 

  0x0000023411613a24: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613a24: 5c24 30e8 

  0x0000023411613a28: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [48]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613a28: d40b 64ff 

  0x0000023411613a2c: ;   {other}
  0x0000023411613a2c: 0f1f 8400 | 9c2c 0046 | 498b c848 | 8d94 2480 | 0000 004d | 8bc7 49ba | 60f7 e358 | ff7f 0000 
  0x0000023411613a4c: ;   {other}
  0x0000023411613a4c: 41ff d20f | 1f84 0000 | 0000 00e9 | 84e9 ffff | 4c89 4c24 | 3841 8be8 | 498b d14c | 8d84 2480 
  0x0000023411613a6c: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000023411613a6c: 0000 00e8 

  0x0000023411613a70: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*synchronization entry
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@-1 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613a70: 8c26 71ff 

  0x0000023411613a74: ;   {other}
  0x0000023411613a74: 0f1f 8400 | e42c 0047 | 448b c54c | 8b4c 2438 | e9dd e9ff | ff49 8bc9 | 488d 9424 | 8000 0000 
  0x0000023411613a94: 4d8b c749 | ba60 f7e3 | 58ff 7f00 | 0041 ffd2 

  0x0000023411613aa4: ;   {other}
  0x0000023411613aa4: 0f1f 8400 | 0000 0000 | e963 eaff | ffba deff 

  0x0000023411613ab4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613ab4: ffff 90e8 

  0x0000023411613ab8: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@517 (line 127)
  0x0000023411613ab8: 440b 64ff 

  0x0000023411613abc: ;   {other}
  0x0000023411613abc: 0f1f 8400 | 2c2d 0048 | ba45 ffff | ff48 8b6c | 2428 895c | 2424 4489 

  0x0000023411613ad4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613ad4: 5424 2ce8 

  0x0000023411613ad8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.String::startsWith@50 (line 2293)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411613ad8: 240b 64ff 

  0x0000023411613adc: ;   {other}
  0x0000023411613adc: 0f1f 8400 | 4c2d 0049 | 498b d749 | ba90 26a3 | 58ff 7f00 | 0041 ffd2 

  0x0000023411613af4: ;   {other}
  0x0000023411613af4: 0f1f 8400 | 0000 0000 | e998 efff | ffba 76ff | ffff 488b | 6c24 2889 | 5c24 2489 

  0x0000023411613b10: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613b10: 4424 2ce8 

  0x0000023411613b14: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.util.ArraysSupport::mismatch@74 (line 401)
                      ; - java.lang.String::startsWith@70 (line 2297)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613b14: e80a 64ff 

  0x0000023411613b18: ;   {other}
  0x0000023411613b18: 0f1f 8400 | 882d 004a | 33ed 4585 | db40 0f94 | c5ba 45ff | ffff 4489 

  0x0000023411613b30: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613b30: 4424 30e8 

  0x0000023411613b34: ; ImmutableOopMap {[40]=Oop [48]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.Disposer::processDisposalQueue@7 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411613b34: c80a 64ff 

  0x0000023411613b38: ;   {other}
  0x0000023411613b38: 0f1f 8400 | a82d 004b | ba45 ffff | ff8b eb44 | 895c 2424 

  0x0000023411613b4c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613b4c: 6666 90e8 

  0x0000023411613b50: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [48]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1059)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x0000023411613b50: ac0a 64ff 

  0x0000023411613b54: ;   {other}
  0x0000023411613b54: 0f1f 8400 | c42d 004c | 498b ea44 

  0x0000023411613b60: ;   {metadata('java/lang/ref/PhantomReference')}
  0x0000023411613b60: 8b5d 0841 | 81fb b8e8 | 0300 0f85 | ec0c 0000 | 4c8b d54c | 8954 2440 | 498b d248 | 8b6c 2428 
  0x0000023411613b80: ;   {optimized virtual_call}
  0x0000023411613b80: 6666 90e8 

  0x0000023411613b84: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokevirtual clear0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.Reference::clear@1 (line 398)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@16 (line 175)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613b84: f8ae 63ff 

  0x0000023411613b88: ;   {other}
  0x0000023411613b88: 0f1f 8400 | f82d 004d | 448b 5424 | 2443 8b6c | d410 458b 

  0x0000023411613b9c: ;   {metadata('java/util/Hashtable')}
  0x0000023411613b9c: 5cec 0841 | 81fb 20d4 | 0000 0f85 | c40c 0000 | 498d 14ec | 4c8b 4424 | 4048 8b6c 

  0x0000023411613bb8: ;   {optimized virtual_call}
  0x0000023411613bb8: 2428 90e8 

  0x0000023411613bbc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613bbc: c0ae 63ff 

  0x0000023411613bc0: ;   {other}
  0x0000023411613bc0: 0f1f 8400 | 302e 004e | 4c8b d844 | 8b50 0848 | be00 0000 | 2234 0200 | 0049 03f2 | 4c8b 5620 
  0x0000023411613be0: ;   {metadata('com/sun/prism/impl/Disposer$Record')}
  0x0000023411613be0: 49b8 c808 | 2523 3402 | 0000 4d3b | d00f 8541 | 0800 0049 | 8bd3 6666 | 9048 b8ff | ffff ffff 
  0x0000023411613c00: ;   {virtual_call}
  0x0000023411613c00: ffff ffe8 

  0x0000023411613c04: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokeinterface dispose {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@32 (line 177)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613c04: 78b1 63ff 

  0x0000023411613c08: ;   {other}
  0x0000023411613c08: 0f1f 8400 | 782e 004f | 448b 4424 | 2443 8b6c | c40c 458b 

  0x0000023411613c1c: ;   {metadata('java/lang/ref/ReferenceQueue')}
  0x0000023411613c1c: 5cec 0841 | 81fb f800 | 0400 0f85 | 580c 0000 | 4d8d 14ec | 453b 620c | 0f85 720b | 0000 4c8b 
  0x0000023411613c3c: 4424 38e9 | 01e7 ffff | ba45 ffff | ff44 8944 

  0x0000023411613c4c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613c4c: 2424 90e8 

  0x0000023411613c50: ; ImmutableOopMap {[40]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@11 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411613c50: ac09 64ff 

  0x0000023411613c54: ;   {other}
  0x0000023411613c54: 0f1f 8400 | c42e 0050 | ba45 ffff | ff44 8944 

  0x0000023411613c64: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613c64: 2424 90e8 

  0x0000023411613c68: ; ImmutableOopMap {[40]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@25 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411613c68: 9409 64ff 

  0x0000023411613c6c: ;   {other}
  0x0000023411613c6c: 0f1f 8400 | dc2e 0051 | c5f8 2ec1 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x0000023411613c8c: c540 0fb6 | edba 45ff 

  0x0000023411613c94: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613c94: ffff 90e8 

  0x0000023411613c98: ; ImmutableOopMap {[40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@37 (line 137)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411613c98: 6409 64ff 

  0x0000023411613c9c: ;   {other}
  0x0000023411613c9c: 0f1f 8400 | 0c2f 0052 | ba45 ffff | ff48 8944 | 2438 c5fb | 114c 2440 | c5fb 1144 

  0x0000023411613cb8: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613cb8: 2448 90e8 

  0x0000023411613cbc: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.Affine3D::scale@7 (line 700)
                      ; - com.sun.prism.impl.BaseGraphics::scale@20 (line 205)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411613cbc: 4009 64ff 

  0x0000023411613cc0: ;   {other}
  0x0000023411613cc0: 0f1f 8400 | 302f 0053 | 498b d749 | ba90 26a3 | 58ff 7f00 | 0041 ffd2 

  0x0000023411613cd8: ;   {other}
  0x0000023411613cd8: 0f1f 8400 | 0000 0000 | e996 e1ff | ffba 45ff | ffff 895c 

  0x0000023411613cec: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613cec: 2424 90e8 

  0x0000023411613cf0: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.lang.String::startsWith@50 (line 2293)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613cf0: 0c09 64ff 

  0x0000023411613cf4: ;   {other}
  0x0000023411613cf4: 0f1f 8400 | 642f 0054 | 498b d749 | ba90 26a3 | 58ff 7f00 | 0041 ffd2 

  0x0000023411613d0c: ;   {other}
  0x0000023411613d0c: 0f1f 8400 | 0000 0000 | e9c0 eeff | ff45 33db | 493b fbbd | ffff ffff | 7c08 400f | 95c5 400f 
  0x0000023411613d2c: b6ed ba45 | ffff ff44 | 8954 2430 

  0x0000023411613d38: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613d38: 6666 90e8 

  0x0000023411613d3c: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [48]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.glass.ui.View::checkNotClosed@6 (line 434)
                      ; - com.sun.glass.ui.View::lock@1 (line 739)
                      ; - com.sun.prism.PresentableState::lock@11 (line 285)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@106 (line 65)
  0x0000023411613d3c: c008 64ff 

  0x0000023411613d40: ;   {other}
  0x0000023411613d40: 0f1f 8400 | b02f 0055 | ba45 ffff 

  0x0000023411613d4c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613d4c: ff66 90e8 

  0x0000023411613d50: ; ImmutableOopMap {[40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@4 (line 116)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411613d50: ac08 64ff 

  0x0000023411613d54: ;   {other}
  0x0000023411613d54: 0f1f 8400 | c42f 0056 | ba45 ffff 

  0x0000023411613d60: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613d60: ff66 90e8 

  0x0000023411613d64: ; ImmutableOopMap {[40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@4 (line 154)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411613d64: 9808 64ff 

  0x0000023411613d68: ;   {other}
  0x0000023411613d68: 0f1f 8400 | d82f 0057 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x0000023411613d7c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613d7c: 242c 90e8 

  0x0000023411613d80: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@187 (line 186)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411613d80: 7c08 64ff 

  0x0000023411613d84: ;   {other}
  0x0000023411613d84: 0f1f 8400 | f42f 0058 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x0000023411613d98: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613d98: 2428 90e8 

  0x0000023411613d9c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@197 (line 190)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411613d9c: 6008 64ff 

  0x0000023411613da0: ;   {other}
  0x0000023411613da0: 0f1f 8400 | 1030 0059 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x0000023411613db4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613db4: 242c 90e8 

  0x0000023411613db8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@250 (line 207)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411613db8: 4408 64ff 

  0x0000023411613dbc: ;   {other}
  0x0000023411613dbc: 0f1f 8400 | 2c30 005a | ba45 ffff | ff48 8b6c | 2428 8944 

  0x0000023411613dd0: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613dd0: 242c 90e8 

  0x0000023411613dd4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::testLostStateAndReset@256 (line 207)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411613dd4: 2808 64ff 

  0x0000023411613dd8: ;   {other}
  0x0000023411613dd8: 0f1f 8400 | 4830 005b | ba45 ffff | ff48 8b6c | 2428 8944 

  0x0000023411613dec: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613dec: 2424 90e8 

  0x0000023411613df0: ; ImmutableOopMap {rbp=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::FAILED@1 (line 79)
                      ; - com.sun.prism.d3d.D3DContext::testLostStateAndReset@270 (line 215)
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411613df0: 0c08 64ff 

  0x0000023411613df4: ;   {other}
  0x0000023411613df4: 0f1f 8400 | 6430 005c | c5f8 2ed0 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x0000023411613e14: c540 0fb6 | edba 45ff 

  0x0000023411613e1c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613e1c: ffff 90e8 

  0x0000023411613e20: ; ImmutableOopMap {[40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::lockResources@49 (line 138)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411613e20: dc07 64ff 

  0x0000023411613e24: ;   {other}
  0x0000023411613e24: 0f1f 8400 | 9430 005d | 4533 db4d | 3bd3 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x0000023411613e44: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613e44: ffff 90e8 

  0x0000023411613e48: ; ImmutableOopMap {[40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@19 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411613e48: b407 64ff 

  0x0000023411613e4c: ;   {other}
  0x0000023411613e4c: 0f1f 8400 | bc30 005e 

  0x0000023411613e54: ;   {section_word}
  0x0000023411613e54: c5f8 2e0d | 54d8 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x0000023411613e74: edba 45ff | ffff 4889 | 4424 38c5 | fa11 4c24 | 24c5 fa11 

  0x0000023411613e88: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613e88: 4424 40e8 

  0x0000023411613e8c: ; ImmutableOopMap {[40]=Oop [56]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseGraphics::scale@3 (line 204)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411613e8c: 7007 64ff 

  0x0000023411613e90: ;   {other}
  0x0000023411613e90: 0f1f 8400 | 0031 005f | ba45 ffff 

  0x0000023411613e9c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613e9c: ff66 90e8 

  0x0000023411613ea0: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [64]=Oop [72]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushVertexBuffer@4 (line 105)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411613ea0: 5c07 64ff 

  0x0000023411613ea4: ;   {other}
  0x0000023411613ea4: 0f1f 8400 | 1431 0060 | ba45 ffff | ff4c 8954 | 2430 448b | 4424 4844 | 8944 2438 | 4c8b 5424 
  0x0000023411613ec4: 504c 8954 | 2440 448b | 5424 4c44 | 8954 243c | 8944 2450 | 4489 5c24 

  0x0000023411613edc: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613edc: 5466 90e8 

  0x0000023411613ee0: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [64]=Oop [84]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::assertLocked@4 (line 95)
                      ; - com.sun.prism.impl.ManagedResource::getResource@1 (line 70)
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@7 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411613ee0: 1c07 64ff 

  0x0000023411613ee4: ;   {other}
  0x0000023411613ee4: 0f1f 8400 | 5431 0061 | ba45 ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b54 2448 | 4489 5424 
  0x0000023411613f04: 384c 8b54 | 2450 4c89 | 5424 4044 | 8b5c 244c | 4489 5c24 | 3c89 4424 

  0x0000023411613f1c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613f1c: 5066 90e8 

  0x0000023411613f20: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [64]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DRTTexture::isMSAA@16 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411613f20: dc06 64ff 

  0x0000023411613f24: ;   {other}
  0x0000023411613f24: 0f1f 8400 | 9431 0062 | ba45 ffff 

  0x0000023411613f30: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613f30: ff66 90e8 

  0x0000023411613f34: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [64]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushVertexBuffer@4 (line 105)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411613f34: c806 64ff 

  0x0000023411613f38: ;   {other}
  0x0000023411613f38: 0f1f 8400 | a831 0063 | ba45 ffff | ff44 895c 

  0x0000023411613f48: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613f48: 2430 90e8 

  0x0000023411613f4c: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [48]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::assertLocked@4 (line 95)
                      ; - com.sun.prism.impl.ManagedResource::unlock@1 (line 156)
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411613f4c: b006 64ff 

  0x0000023411613f50: ;   {other}
  0x0000023411613f50: 0f1f 8400 | c031 0064 | ba45 ffff 

  0x0000023411613f5c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613f5c: ff66 90e8 

  0x0000023411613f60: ; ImmutableOopMap {[40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@444 (line 106)
  0x0000023411613f60: 9c06 64ff 

  0x0000023411613f64: ;   {other}
  0x0000023411613f64: 0f1f 8400 | d431 0065 | ba45 ffff 

  0x0000023411613f70: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613f70: ff66 90e8 

  0x0000023411613f74: ; ImmutableOopMap {[40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::present@9 (line 84)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x0000023411613f74: 8806 64ff 

  0x0000023411613f78: ;   {other}
  0x0000023411613f78: 0f1f 8400 | e831 0066 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x0000023411613f8c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613f8c: 242c 90e8 

  0x0000023411613f90: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::validatePresent@3 (line 223)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x0000023411613f90: 6c06 64ff 

  0x0000023411613f94: ;   {other}
  0x0000023411613f94: 0f1f 8400 | 0432 0067 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x0000023411613fa8: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613fa8: 242c 90e8 

  0x0000023411613fac: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::validatePresent@9 (line 223)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x0000023411613fac: 5006 64ff 

  0x0000023411613fb0: ;   {other}
  0x0000023411613fb0: 0f1f 8400 | 2032 0068 | ba45 ffff | ff48 8b6c | 2428 8944 

  0x0000023411613fc4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613fc4: 2424 90e8 

  0x0000023411613fc8: ; ImmutableOopMap {rbp=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DContext::FAILED@1 (line 79)
                      ; - com.sun.prism.d3d.D3DContext::validatePresent@24 (line 229)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@31 (line 88)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x0000023411613fc8: 3406 64ff 

  0x0000023411613fcc: ;   {other}
  0x0000023411613fcc: 0f1f 8400 | 3c32 0069 | 33ed 4585 | db40 0f94 | c5ba 45ff | ffff 4489 

  0x0000023411613fe4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411613fe4: 4424 30e8 

  0x0000023411613fe8: ; ImmutableOopMap {[40]=Oop [48]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.Disposer::processDisposalQueue@7 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411613fe8: 1406 64ff 

  0x0000023411613fec: ;   {other}
  0x0000023411613fec: 0f1f 8400 | 5c32 006a | 4533 c04d | 3bd0 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff 
  0x000002341161400c: ffff 4489 

  0x0000023411614010: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614010: 4c24 24e8 

  0x0000023411614014: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.glass.ui.View::checkNotClosed@6 (line 434)
                      ; - com.sun.glass.ui.View::unlock@1 (line 750)
                      ; - com.sun.prism.PresentableState::unlock@11 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x0000023411614014: e805 64ff 

  0x0000023411614018: ;   {other}
  0x0000023411614018: 0f1f 8400 | 8832 006b | ba45 ffff | ff89 5c24 

  0x0000023411614028: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614028: 2466 90e8 

  0x000002341161402c: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [48]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1059)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x000002341161402c: d005 64ff 

  0x0000023411614030: ;   {other}
  0x0000023411614030: 0f1f 8400 | a032 006c 

  0x0000023411614038: ;   {section_word}
  0x0000023411614038: c5f9 2e15 | 68d6 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x0000023411614058: edba 45ff | ffff 4889 

  0x0000023411614060: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614060: 4424 38e8 

  0x0000023411614064: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.AffineBase::updateState2D@6 (line 238)
                      ; - com.sun.javafx.geom.transform.AffineBase::updateState@1 (line 230)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@1 (line 120)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614064: 9805 64ff 

  0x0000023411614068: ;   {other}
  0x0000023411614068: 0f1f 8400 | d832 006d 

  0x0000023411614070: ;   {section_word}
  0x0000023411614070: c5f9 2e15 | 30d6 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x0000023411614090: edba 45ff | ffff 4889 

  0x0000023411614098: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614098: 4424 38e8 

  0x000002341161409c: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.AffineBase::updateState2D@15 (line 238)
                      ; - com.sun.javafx.geom.transform.AffineBase::updateState@1 (line 230)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@1 (line 120)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000002341161409c: 6005 64ff 

  0x00000234116140a0: ;   {other}
  0x00000234116140a0: 0f1f 8400 | 1033 006e | c5f9 2ec8 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x00000234116140c0: c540 0fb6 | edf7 ddba | 45ff ffff | 4889 4424 

  0x00000234116140d0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116140d0: 3866 90e8 

  0x00000234116140d4: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@5 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@8 (line 121)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x00000234116140d4: 2805 64ff 

  0x00000234116140d8: ;   {other}
  0x00000234116140d8: 0f1f 8400 | 4833 006f 

  0x00000234116140e0: ;   {section_word}
  0x00000234116140e0: c5f9 2e05 | b8d5 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x0000023411614100: edba 45ff | ffff 4889 

  0x0000023411614108: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614108: 4424 38e8 

  0x000002341161410c: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@13 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@8 (line 121)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000002341161410c: f004 64ff 

  0x0000023411614110: ;   {other}
  0x0000023411614110: 0f1f 8400 | 8033 0070 | c5f9 2ec8 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x0000023411614130: c540 0fb6 | edf7 ddba | 45ff ffff | 4889 4424 

  0x0000023411614140: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614140: 3866 90e8 

  0x0000023411614144: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@5 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@18 (line 122)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614144: b804 64ff 

  0x0000023411614148: ;   {other}
  0x0000023411614148: 0f1f 8400 | b833 0071 

  0x0000023411614150: ;   {section_word}
  0x0000023411614150: c5f9 2e05 | 48d5 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x0000023411614170: edba 45ff | ffff 4889 

  0x0000023411614178: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614178: 4424 38e8 

  0x000002341161417c: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@13 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@18 (line 122)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000002341161417c: 8004 64ff 

  0x0000023411614180: ;   {other}
  0x0000023411614180: 0f1f 8400 | f033 0072 | c5f9 2ec8 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x00000234116141a0: c540 0fb6 | edf7 ddba | 45ff ffff | 4889 4424 

  0x00000234116141b0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116141b0: 3866 90e8 

  0x00000234116141b4: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@5 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@28 (line 123)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x00000234116141b4: 4804 64ff 

  0x00000234116141b8: ;   {other}
  0x00000234116141b8: 0f1f 8400 | 2834 0073 

  0x00000234116141c0: ;   {section_word}
  0x00000234116141c0: c5f9 2e05 | d8d4 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x00000234116141e0: edba 45ff | ffff 4889 

  0x00000234116141e8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116141e8: 4424 38e8 

  0x00000234116141ec: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@13 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@28 (line 123)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x00000234116141ec: 1004 64ff 

  0x00000234116141f0: ;   {other}
  0x00000234116141f0: 0f1f 8400 | 6034 0074 | c5f9 2ec8 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x0000023411614210: c540 0fb6 | edf7 ddba | 45ff ffff | 4889 4424 

  0x0000023411614220: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614220: 3866 90e8 

  0x0000023411614224: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@5 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@38 (line 124)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614224: d803 64ff 

  0x0000023411614228: ;   {other}
  0x0000023411614228: 0f1f 8400 | 9834 0075 

  0x0000023411614230: ;   {section_word}
  0x0000023411614230: c5f9 2e05 | 68d4 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x0000023411614250: edba 45ff | ffff 4889 

  0x0000023411614258: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614258: 4424 38e8 

  0x000002341161425c: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@13 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@38 (line 124)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000002341161425c: a003 64ff 

  0x0000023411614260: ;   {other}
  0x0000023411614260: 0f1f 8400 | d034 0076 | c5f9 2ed0 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x0000023411614280: c540 0fb6 | edf7 ddba | 45ff ffff | 4889 4424 

  0x0000023411614290: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614290: 3866 90e8 

  0x0000023411614294: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.Affine3D::almostOne@5 (line 1126)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@48 (line 125)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614294: 6803 64ff 

  0x0000023411614298: ;   {other}
  0x0000023411614298: 0f1f 8400 | 0835 0077 

  0x00000234116142a0: ;   {section_word}
  0x00000234116142a0: c5f9 2e05 | 18d4 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x00000234116142c0: edba 45ff | ffff 4889 

  0x00000234116142c8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116142c8: 4424 38e8 

  0x00000234116142cc: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.Affine3D::almostOne@13 (line 1126)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@48 (line 125)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x00000234116142cc: 3003 64ff 

  0x00000234116142d0: ;   {other}
  0x00000234116142d0: 0f1f 8400 | 4035 0078 | c5f9 2ec8 | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 
  0x00000234116142f0: c540 0fb6 | edf7 ddba | 45ff ffff | 4889 4424 

  0x0000023411614300: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614300: 3866 90e8 

  0x0000023411614304: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@5 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@58 (line 126)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614304: f802 64ff 

  0x0000023411614308: ;   {other}
  0x0000023411614308: 0f1f 8400 | 7835 0079 

  0x0000023411614310: ;   {section_word}
  0x0000023411614310: c5f9 2e05 | 88d3 ffff | bdff ffff | ff0f 8a0e | 0000 000f | 8208 0000 | 0040 0f95 | c540 0fb6 
  0x0000023411614330: edba 45ff | ffff 4889 

  0x0000023411614338: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614338: 4424 38e8 

  0x000002341161433c: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [56]=Oop }
                      ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.BaseTransform::almostZero@13 (line 531)
                      ; - com.sun.javafx.geom.transform.Affine3D::updateState@58 (line 126)
                      ; - com.sun.javafx.geom.transform.AffineBase::getType@9 (line 276)
                      ; - com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@9 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x000002341161433c: c002 64ff 

  0x0000023411614340: ;   {other}
  0x0000023411614340: 0f1f 8400 | b035 007a | ba45 ffff | ff48 8b6c | 2428 4c8b | 5424 404c | 8954 2430 | 8944 2424 
  0x0000023411614360: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614360: 6666 90e8 

  0x0000023411614364: ; ImmutableOopMap {rbp=Oop [48]=Oop [64]=Oop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.geom.transform.AffineBase::isTranslateOrIdentity@13 (line 488)
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@4 (line 249)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614364: 9802 64ff 

  0x0000023411614368: ;   {other}
  0x0000023411614368: 0f1f 8400 | d835 007b 

  0x0000023411614370: ;   {metadata('com/sun/prism/impl/Disposer$Record')}
  0x0000023411614370: 48b8 c808 | 2523 3402 | 0000 488b | 7e28 8b0f | 4883 c708 | 4885 c0f2 | 48af 0f85 | 0400 0000 
  0x0000023411614390: 4889 4620 | 0f84 59f4 | ffff bade | ffff ff4c | 895c 2430 

  0x00000234116143a4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116143a4: 6666 90e8 

  0x00000234116143a8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@27 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116143a8: 5402 64ff 

  0x00000234116143ac: ;   {other}
  0x00000234116143ac: 0f1f 8400 | 1c36 007c | ba45 ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b5c 2448 | 4489 5c24 
  0x00000234116143cc: 3844 8b54 | 244c 4489 | 5424 3c44 | 8b5c 2460 | 4489 5c24 | 4044 8b54 | 2450 4489 

  0x00000234116143e8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116143e8: 5424 4ce8 

  0x00000234116143ec: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [64]=NarrowOop [84]=NarrowOop [100]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@4 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x00000234116143ec: 1002 64ff 

  0x00000234116143f0: ;   {other}
  0x00000234116143f0: 0f1f 8400 | 6036 007d | ba45 ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b5c 2448 | 4489 5c24 
  0x0000023411614410: 3844 8b54 | 2454 4489 | 5424 3c44 | 8b5c 244c | 4489 5c24 

  0x0000023411614424: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614424: 4866 90e8 

  0x0000023411614428: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [80]=NarrowOop [88]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseContext::flushMask@4 (line 111)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614428: d401 64ff 

  0x000002341161442c: ;   {other}
  0x000002341161442c: 0f1f 8400 | 9c36 007e 

  0x0000023411614434: ;   {metadata('com/sun/prism/impl/Disposer$Record')}
  0x0000023411614434: 48b8 c808 | 2523 3402 | 0000 488b | 7e28 8b0f | 4883 c708 | 4885 c0f2 | 48af 0f85 | 0400 0000 
  0x0000023411614454: 4889 4620 | 0f84 95f7 | ffff bade | ffff ff4c | 895c 2428 

  0x0000023411614468: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614468: 6666 90e8 

  0x000002341161446c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@27 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000002341161446c: 9001 64ff 

  0x0000023411614470: ;   {other}
  0x0000023411614470: 0f1f 8400 | e036 007f | ba45 ffff 

  0x000002341161447c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161447c: ff66 90e8 

  0x0000023411614480: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x0000023411614480: 7c01 64ff 

  0x0000023411614484: ;   {other}
  0x0000023411614484: 0f1f 8400 | f436 0080 | ba45 ffff 

  0x0000023411614490: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614490: ff66 90e8 

  0x0000023411614494: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x0000023411614494: 6801 64ff 

  0x0000023411614498: ;   {other}
  0x0000023411614498: 0f1f 8400 | 0837 0081 | ba45 ffff | ff44 8944 

  0x00000234116144a8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116144a8: 2428 90e8 

  0x00000234116144ac: ; ImmutableOopMap {[40]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x00000234116144ac: 5001 64ff 

  0x00000234116144b0: ;   {other}
  0x00000234116144b0: 0f1f 8400 | 2037 0082 

  0x00000234116144b8: ;   {metadata('java/lang/Error')}
  0x00000234116144b8: 48ba b009 | 0122 3402 | 0000 488b 

  0x00000234116144c4: ;   {runtime_call _new_instance_Java}
  0x00000234116144c4: 6c24 28e8 

  0x00000234116144c8: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock@39 (line 231)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@1 (line 152)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@3 (line 45)
  0x00000234116144c8: 34df 70ff 

  0x00000234116144cc: ;   {other}
  0x00000234116144cc: 0f1f 8400 | 3c37 0083 | e9dc eeff | ffba 45ff | ffff 4489 

  0x00000234116144e0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116144e0: 4424 28e8 

  0x00000234116144e4: ; ImmutableOopMap {[40]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1060)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x00000234116144e4: 1801 64ff 

  0x00000234116144e8: ;   {other}
  0x00000234116144e8: 0f1f 8400 | 5837 0084 | baf6 ffff | ff48 8b6c 

  0x00000234116144f8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116144f8: 2428 90e8 

  0x00000234116144fc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::lock@4 (line 252)
                      ; - com.sun.prism.impl.BaseContext::flushMask@18 (line 112)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x00000234116144fc: 0001 64ff 

  0x0000023411614500: ;   {other}
  0x0000023411614500: 0f1f 8400 | 7037 0085 | baf6 ffff | ff48 8b6c 

  0x0000023411614510: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614510: 2428 90e8 

  0x0000023411614514: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::lock@4 (line 252)
                      ; - com.sun.prism.impl.BaseContext::flushMask@18 (line 112)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614514: e800 64ff 

  0x0000023411614518: ;   {other}
  0x0000023411614518: 0f1f 8400 | 8837 0086 | bade ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b5c 2448 | 4489 5c24 
  0x0000023411614538: 3844 8b54 | 244c 4489 | 5424 3c44 | 8b5c 2460 | 4489 5c24 | 4044 8b54 | 2450 4489 

  0x0000023411614554: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614554: 5424 4ce8 

  0x0000023411614558: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [64]=NarrowOop [84]=NarrowOop [100]=NarrowOop }
                      ;*invokeinterface lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@18 (line 112)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614558: a400 64ff 

  0x000002341161455c: ;   {other}
  0x000002341161455c: 0f1f 8400 | cc37 0087 | bade ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b5c 2448 | 4489 5c24 
  0x000002341161457c: 3844 8b54 | 244c 4489 | 5424 3c44 | 8b5c 2460 | 4489 5c24 | 4044 8b54 | 2450 4489 

  0x0000023411614598: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614598: 5424 4ce8 

  0x000002341161459c: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [64]=NarrowOop [84]=NarrowOop [100]=NarrowOop }
                      ;*invokeinterface unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@71 (line 118)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000002341161459c: 6000 64ff 

  0x00000234116145a0: ;   {other}
  0x00000234116145a0: 0f1f 8400 | 1038 0088 | bade ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b54 2448 | 4489 5424 
  0x00000234116145c0: 3844 8b5c | 2454 4489 | 5c24 3c44 | 8b54 244c | 4489 5424 

  0x00000234116145d4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116145d4: 4866 90e8 

  0x00000234116145d8: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [80]=NarrowOop [88]=NarrowOop }
                      ;*invokeinterface lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@18 (line 112)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x00000234116145d8: 2400 64ff 

  0x00000234116145dc: ;   {other}
  0x00000234116145dc: 0f1f 8400 | 4c38 0089 | bade ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b5c 2448 | 4489 5c24 
  0x00000234116145fc: 3844 8b54 | 2454 4489 | 5424 3c44 | 8b5c 244c | 4489 5c24 

  0x0000023411614610: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614610: 4866 90e8 

  0x0000023411614614: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [80]=NarrowOop [88]=NarrowOop }
                      ;*invokeinterface unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@71 (line 118)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614614: e8ff 63ff 

  0x0000023411614618: ;   {other}
  0x0000023411614618: 0f1f 8400 | 8838 008a | ba45 ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b54 2448 | 4489 5424 
  0x0000023411614638: 3844 8b44 | 244c 4489 | 4424 3c44 | 8b54 2460 | 4489 5424 | 4044 8b54 | 2454 4489 | 5424 4844 
  0x0000023411614658: 8b54 2450 | 4489 5424 | 4c44 895c 

  0x0000023411614664: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614664: 2454 90e8 

  0x0000023411614668: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [64]=NarrowOop [72]=NarrowOop [84]=NarrowOop [100]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::assertLocked@4 (line 95)
                      ; - com.sun.prism.impl.ManagedResource::unlock@1 (line 156)
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.impl.BaseContext::flushMask@71 (line 118)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614668: 94ff 63ff 

  0x000002341161466c: ;   {other}
  0x000002341161466c: 0f1f 8400 | dc38 008b | ba45 ffff | ff4c 8b5c | 2440 4c89 | 5c24 3044 | 8b44 2448 | 4489 4424 
  0x000002341161468c: 3844 8b5c | 2454 4489 | 5c24 3c44 | 8b5c 2450 | 4489 5c24 | 4444 8b44 | 244c 4489 | 4424 4844 
  0x00000234116146ac: 8954 2450 

  0x00000234116146b0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116146b0: 6666 90e8 

  0x00000234116146b4: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [68]=NarrowOop [80]=NarrowOop [88]=NarrowOop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.ManagedResource::assertLocked@4 (line 95)
                      ; - com.sun.prism.impl.ManagedResource::unlock@1 (line 156)
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.impl.BaseContext::flushMask@71 (line 118)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x00000234116146b4: 48ff 63ff 

  0x00000234116146b8: ;   {other}
  0x00000234116146b8: 0f1f 8400 | 2839 008c | baf6 ffff | ff48 8b6c | 2428 4489 | 5424 284c | 894c 2430 

  0x00000234116146d4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116146d4: 6666 90e8 

  0x00000234116146d8: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop [48]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116146d8: 24ff 63ff 

  0x00000234116146dc: ;   {other}
  0x00000234116146dc: 0f1f 8400 | 4c39 008d | baf6 ffff | ff48 8b6c 

  0x00000234116146ec: ;   {runtime_call UncommonTrapBlob}
  0x00000234116146ec: 2428 90e8 

  0x00000234116146f0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116146f0: 0cff 63ff 

  0x00000234116146f4: ;   {other}
  0x00000234116146f4: 0f1f 8400 | 6439 008e | 458b 5a18 | 4585 db0f | 848f 0100 | 0049 8bea | 4b8d 14dc 

  0x0000023411614710: ;   {optimized virtual_call}
  0x0000023411614710: 6666 90e8 

  0x0000023411614714: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614714: c842 e5ff 

  0x0000023411614718: ;   {other}
  0x0000023411614718: 0f1f 8400 | 8839 008f 

  0x0000023411614720: ;   {optimized virtual_call}
  0x0000023411614720: 488b d5e8 

  0x0000023411614724: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.ref.ReferenceQueue::poll@17 (line 184)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614724: 5810 30f8 

  0x0000023411614728: ;   {other}
  0x0000023411614728: 0f1f 8400 | 9839 0090 | 4889 4424 | 404c 8bd5 | 458b 5218 | 4585 d20f | 846f 0100 | 004b 8d14 
  0x0000023411614748: d448 8b6c 

  0x000002341161474c: ;   {optimized virtual_call}
  0x000002341161474c: 2428 90e8 

  0x0000023411614750: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614750: 8c3d e5ff 

  0x0000023411614754: ;   {other}
  0x0000023411614754: 0f1f 8400 | c439 0091 | 4c8b 5424 | 404d 85d2 | 0f84 d0f0 | ffff 498b | eae9 edef | ffff baf6 
  0x0000023411614774: ffff ff48 | 8b6c 2428 | 4489 5c24 | 284c 894c 

  0x0000023411614784: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614784: 2430 90e8 

  0x0000023411614788: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop [48]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411614788: 74fe 63ff 

  0x000002341161478c: ;   {other}
  0x000002341161478c: 0f1f 8400 | fc39 0092 | baf6 ffff | ff48 8b6c 

  0x000002341161479c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161479c: 2428 90e8 

  0x00000234116147a0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116147a0: 5cfe 63ff 

  0x00000234116147a4: ;   {other}
  0x00000234116147a4: 0f1f 8400 | 143a 0093 | 458b 5a18 | 4585 db0f | 8413 0100 | 0049 8bea | 4b8d 14dc 

  0x00000234116147c0: ;   {optimized virtual_call}
  0x00000234116147c0: 6666 90e8 

  0x00000234116147c4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116147c4: b8a2 63ff 

  0x00000234116147c8: ;   {other}
  0x00000234116147c8: 0f1f 8400 | 383a 0094 

  0x00000234116147d0: ;   {optimized virtual_call}
  0x00000234116147d0: 488b d5e8 

  0x00000234116147d4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual poll0 {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.lang.ref.ReferenceQueue::poll@17 (line 184)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116147d4: a8a2 63ff 

  0x00000234116147d8: ;   {other}
  0x00000234116147d8: 0f1f 8400 | 483a 0095 | 4889 4424 | 404c 8bd5 | 458b 5218 | 4585 d20f | 84f3 0000 | 004b 8d14 
  0x00000234116147f8: d448 8b6c 

  0x00000234116147fc: ;   {optimized virtual_call}
  0x00000234116147fc: 2428 90e8 

  0x0000023411614800: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop [64]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411614800: 7ca2 63ff 

  0x0000023411614804: ;   {other}
  0x0000023411614804: 0f1f 8400 | 743a 0096 | 4c8b 5424 | 404d 85d2 | 0f84 20f4 | ffff 498b | eae9 3df3 | ffff ba66 
  0x0000023411614824: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614824: ffff ffe8 

  0x0000023411614828: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop }
                      ;*invokevirtual clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@16 (line 175)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614828: d4fd 63ff 

  0x000002341161482c: ;   {other}
  0x000002341161482c: 0f1f 8400 | 9c3a 0097 | bade ffff 

  0x0000023411614838: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614838: ff66 90e8 

  0x000002341161483c: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [64]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000002341161483c: c0fd 63ff 

  0x0000023411614840: ;   {other}
  0x0000023411614840: 0f1f 8400 | b03a 0098 | bade ffff 

  0x000002341161484c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161484c: ff66 90e8 

  0x0000023411614850: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614850: acfd 63ff 

  0x0000023411614854: ;   {other}
  0x0000023411614854: 0f1f 8400 | c43a 0099 | ba66 ffff 

  0x0000023411614860: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614860: ff66 90e8 

  0x0000023411614864: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop }
                      ;*invokevirtual clear {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@16 (line 175)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411614864: 98fd 63ff 

  0x0000023411614868: ;   {other}
  0x0000023411614868: 0f1f 8400 | d83a 009a | bade ffff 

  0x0000023411614874: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614874: ff66 90e8 

  0x0000023411614878: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [64]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411614878: 84fd 63ff 

  0x000002341161487c: ;   {other}
  0x000002341161487c: 0f1f 8400 | ec3a 009b | bade ffff 

  0x0000023411614888: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614888: ff66 90e8 

  0x000002341161488c: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000002341161488c: 70fd 63ff 

  0x0000023411614890: ;   {other}
  0x0000023411614890: 0f1f 8400 | 003b 009c | baf6 ffff | ff48 8b6c | 2428 4c89 

  0x00000234116148a4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116148a4: 5424 30e8 

  0x00000234116148a8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116148a8: 54fd 63ff 

  0x00000234116148ac: ;   {other}
  0x00000234116148ac: 0f1f 8400 | 1c3b 009d | baf6 ffff | ff48 8b6c 

  0x00000234116148bc: ;   {runtime_call UncommonTrapBlob}
  0x00000234116148bc: 2428 90e8 

  0x00000234116148c0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116148c0: 3cfd 63ff 

  0x00000234116148c4: ;   {other}
  0x00000234116148c4: 0f1f 8400 | 343b 009e | baf6 ffff | ff48 8b6c | 2428 4c89 

  0x00000234116148d8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116148d8: 5424 30e8 

  0x00000234116148dc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@13 (line 182)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116148dc: 20fd 63ff 

  0x00000234116148e0: ;   {other}
  0x00000234116148e0: 0f1f 8400 | 503b 009f | baf6 ffff | ff48 8b6c 

  0x00000234116148f0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116148f0: 2428 90e8 

  0x00000234116148f4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@25 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116148f4: 08fd 63ff 

  0x00000234116148f8: ;   {other}
  0x00000234116148f8: 0f1f 8400 | 683b 00a0 | bade ffff 

  0x0000023411614904: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614904: ff66 90e8 

  0x0000023411614908: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411614908: f4fc 63ff 

  0x000002341161490c: ;   {other}
  0x000002341161490c: 0f1f 8400 | 7c3b 00a1 | bade ffff | ff48 8b6c | 2428 4889 

  0x0000023411614920: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614920: 4424 38e8 

  0x0000023411614924: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [56]=Oop [64]=Oop [72]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@14 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614924: d8fc 63ff 

  0x0000023411614928: ;   {other}
  0x0000023411614928: 0f1f 8400 | 983b 00a2 | bade ffff | ff4c 8b54 | 2440 4c89 | 5424 3044 | 8b5c 2448 | 4489 5c24 
  0x0000023411614948: 384c 8b54 | 2450 4c89 | 5424 4044 | 8b54 244c | 4489 5424 | 3c89 4424 

  0x0000023411614960: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614960: 5066 90e8 

  0x0000023411614964: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [48]=Oop [56]=NarrowOop [64]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@10 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614964: 98fc 63ff 

  0x0000023411614968: ;   {other}
  0x0000023411614968: 0f1f 8400 | d83b 00a3 | bade ffff | ff48 8bef | 4889 7424 | 2889 5c24 

  0x0000023411614980: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614980: 2466 90e8 

  0x0000023411614984: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x0000023411614984: 78fc 63ff 

  0x0000023411614988: ;   {other}
  0x0000023411614988: 0f1f 8400 | f83b 00a4 | bade ffff | ff48 8beb | 4889 7424 | 2889 7c24 

  0x00000234116149a0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116149a0: 2466 90e8 

  0x00000234116149a4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x00000234116149a4: 58fc 63ff 

  0x00000234116149a8: ;   {other}
  0x00000234116149a8: 0f1f 8400 | 183c 00a5 | bade ffff | ff48 8bef | 4889 7424 | 284c 895c | 2430 4489 

  0x00000234116149c4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116149c4: 4424 24e8 

  0x00000234116149c8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x00000234116149c8: 34fc 63ff 

  0x00000234116149cc: ;   {other}
  0x00000234116149cc: 0f1f 8400 | 3c3c 00a6 | bade ffff | ff48 8beb | 4889 7424 | 284c 8954 | 2430 4489 

  0x00000234116149e8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116149e8: 4424 24e8 

  0x00000234116149ec: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DTextureResource::isValid@11 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x00000234116149ec: 10fc 63ff 

  0x00000234116149f0: ;   {other}
  0x00000234116149f0: 0f1f 8400 | 603c 00a7 | baf6 ffff 

  0x00000234116149fc: ;   {runtime_call UncommonTrapBlob}
  0x00000234116149fc: ff66 90e8 

  0x0000023411614a00: ; ImmutableOopMap {}
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@4 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x0000023411614a00: fcfb 63ff 

  0x0000023411614a04: ;   {other}
  0x0000023411614a04: 0f1f 8400 | 743c 00a8 | baf4 ffff | ff48 8bef | 4889 7424 

  0x0000023411614a18: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614a18: 2866 90e8 

  0x0000023411614a1c: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x0000023411614a1c: e0fb 63ff 

  0x0000023411614a20: ;   {other}
  0x0000023411614a20: 0f1f 8400 | 903c 00a9 | baf6 ffff 

  0x0000023411614a2c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614a2c: ff66 90e8 

  0x0000023411614a30: ; ImmutableOopMap {}
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@4 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x0000023411614a30: ccfb 63ff 

  0x0000023411614a34: ;   {other}
  0x0000023411614a34: 0f1f 8400 | a43c 00aa | baf4 ffff | ff48 8beb | 4889 7424 

  0x0000023411614a48: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614a48: 2866 90e8 

  0x0000023411614a4c: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseResourcePool$WeakLinkedList::getResource@7 (line 504)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@20 (line 282)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x0000023411614a4c: b0fb 63ff 

  0x0000023411614a50: ;   {other}
  0x0000023411614a50: 0f1f 8400 | c03c 00ab | ba45 ffff | ff48 8bef | 4889 7424 | 284c 895c | 2430 4489 

  0x0000023411614a6c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614a6c: 4424 24e8 

  0x0000023411614a70: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x0000023411614a70: 8cfb 63ff 

  0x0000023411614a74: ;   {other}
  0x0000023411614a74: 0f1f 8400 | e43c 00ac | ba45 ffff | ff48 8beb | 4889 7424 | 284c 8954 | 2430 4489 

  0x0000023411614a90: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614a90: 4424 24e8 

  0x0000023411614a94: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.ManagedResource::_isgone@30 (line 42)
                      ; - com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@27 (line 283)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x0000023411614a94: 68fb 63ff 

  0x0000023411614a98: ;   {other}
  0x0000023411614a98: 0f1f 8400 | 083d 00ad | baf6 ffff | ff49 8be8 

  0x0000023411614aa8: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614aa8: 6666 90e8 

  0x0000023411614aac: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual isValid {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 430)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x0000023411614aac: 50fb 63ff 

  0x0000023411614ab0: ;   {other}
  0x0000023411614ab0: 0f1f 8400 | 203d 00ae | baf6 ffff | ff48 8b6c 

  0x0000023411614ac0: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614ac0: 2428 90e8 

  0x0000023411614ac4: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614ac4: 38fb 63ff 

  0x0000023411614ac8: ;   {other}
  0x0000023411614ac8: 0f1f 8400 | 383d 00af | baf6 ffff | ff48 8b6c 

  0x0000023411614ad8: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614ad8: 2428 90e8 

  0x0000023411614adc: ; ImmutableOopMap {rbp=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.String::length@4 (line 1519)
                      ; - java.lang.String::startsWith@6 (line 2285)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614adc: 20fb 63ff 

  0x0000023411614ae0: ;   {other}
  0x0000023411614ae0: 0f1f 8400 | 503d 00b0 | baf6 ffff | ff48 8b6c | 2428 4489 

  0x0000023411614af4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614af4: 5424 28e8 

  0x0000023411614af8: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614af8: 04fb 63ff 

  0x0000023411614afc: ;   {other}
  0x0000023411614afc: 0f1f 8400 | 6c3d 00b1 | baf6 ffff | ff48 8b6c | 2428 4489 

  0x0000023411614b10: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614b10: 4424 24e8 

  0x0000023411614b14: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411614b14: e8fa 63ff 

  0x0000023411614b18: ;   {other}
  0x0000023411614b18: 0f1f 8400 | 883d 00b2 | baf6 ffff | ff49 8be8 

  0x0000023411614b28: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614b28: 6666 90e8 

  0x0000023411614b2c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@58 (line 123)
  0x0000023411614b2c: d0fa 63ff 

  0x0000023411614b30: ;   {other}
  0x0000023411614b30: 0f1f 8400 | a03d 00b3 | ba5e ffff | ff49 8be8 

  0x0000023411614b40: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614b40: 6666 90e8 

  0x0000023411614b44: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@69 (line 124)
  0x0000023411614b44: b8fa 63ff 

  0x0000023411614b48: ;   {other}
  0x0000023411614b48: 0f1f 8400 | b83d 00b4 | baf6 ffff 

  0x0000023411614b54: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614b54: ff66 90e8 

  0x0000023411614b58: ; ImmutableOopMap {}
                      ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@8 (line 280)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@90 (line 127)
  0x0000023411614b58: a4fa 63ff 

  0x0000023411614b5c: ;   {other}
  0x0000023411614b5c: 0f1f 8400 | cc3d 00b5 | baf6 ffff 

  0x0000023411614b68: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614b68: ff66 90e8 

  0x0000023411614b6c: ; ImmutableOopMap {}
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@98 (line 130)
  0x0000023411614b6c: 90fa 63ff 

  0x0000023411614b70: ;   {other}
  0x0000023411614b70: 0f1f 8400 | e03d 00b6 | ba45 ffff | ff49 8be8 | 4489 5424 

  0x0000023411614b84: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614b84: 2466 90e8 

  0x0000023411614b88: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.SceneState::isValid@11 (line 86)
                      ; - com.sun.javafx.tk.quantum.ViewPainter::validateStageGraphics@4 (line 430)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@13 (line 52)
  0x0000023411614b88: 74fa 63ff 

  0x0000023411614b8c: ;   {other}
  0x0000023411614b8c: 0f1f 8400 | fc3d 00b7 | baf6 ffff | ff48 8b6c 

  0x0000023411614b9c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614b9c: 2428 90e8 

  0x0000023411614ba0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual testLostStateAndReset {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DResourceFactory::isDeviceReady@17 (line 120)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@136 (line 71)
  0x0000023411614ba0: 5cfa 63ff 

  0x0000023411614ba4: ;   {other}
  0x0000023411614ba4: 0f1f 8400 | 143e 00b8 | baf6 ffff | ff48 8b6c 

  0x0000023411614bb4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614bb4: 2428 90e8 

  0x0000023411614bb8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getRenderWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@1 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411614bb8: 44fa 63ff 

  0x0000023411614bbc: ;   {other}
  0x0000023411614bbc: 0f1f 8400 | 2c3e 00b9 | baf6 ffff | ff48 8b6c 

  0x0000023411614bcc: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614bcc: 2428 90e8 

  0x0000023411614bd0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContentWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@8 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411614bd0: 2cfa 63ff 

  0x0000023411614bd4: ;   {other}
  0x0000023411614bd4: 0f1f 8400 | 443e 00ba | baf6 ffff | ff48 8b6c 

  0x0000023411614be4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614be4: 2428 90e8 

  0x0000023411614be8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::lock@4 (line 252)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@58 (line 142)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411614be8: 14fa 63ff 

  0x0000023411614bec: ;   {other}
  0x0000023411614bec: 0f1f 8400 | 5c3e 00bb | baf6 ffff | ff48 8b6c 

  0x0000023411614bfc: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614bfc: 2428 90e8 

  0x0000023411614c00: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@5 (line 148)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614c00: fcf9 63ff 

  0x0000023411614c04: ;   {other}
  0x0000023411614c04: 0f1f 8400 | 743e 00bc | baf6 ffff | ff48 8b6c | 2428 c5fa | 114c 2424 | c5fa 1144 

  0x0000023411614c20: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614c20: 2428 90e8 

  0x0000023411614c24: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface scale {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614c24: d8f9 63ff 

  0x0000023411614c28: ;   {other}
  0x0000023411614c28: 0f1f 8400 | 983e 00bd | baf6 ffff | ff48 8b6c | 2428 c5fb | 114c 2428 | c5fb 1144 

  0x0000023411614c44: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614c44: 2430 90e8 

  0x0000023411614c48: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual scale {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseGraphics::scale@20 (line 205)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614c48: b4f9 63ff 

  0x0000023411614c4c: ;   {other}
  0x0000023411614c4c: 0f1f 8400 | bc3e 00be | baf6 ffff | ff49 8bea 

  0x0000023411614c5c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614c5c: 6666 90e8 

  0x0000023411614c60: ; ImmutableOopMap {rbp=Oop [64]=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@315 (line 90)
  0x0000023411614c60: 9cf9 63ff 

  0x0000023411614c64: ;   {other}
  0x0000023411614c64: 0f1f 8400 | d43e 00bf | baf6 ffff | ff48 8b6c 

  0x0000023411614c74: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614c74: 2428 90e8 

  0x0000023411614c78: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokeinterface prepare {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614c78: 84f9 63ff 

  0x0000023411614c7c: ;   {other}
  0x0000023411614c7c: 0f1f 8400 | ec3e 00c0 | baf6 ffff | ff48 8b6c 

  0x0000023411614c8c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614c8c: 2428 90e8 

  0x0000023411614c90: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@1 (line 59)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614c90: 6cf9 63ff 

  0x0000023411614c94: ;   {other}
  0x0000023411614c94: 0f1f 8400 | 043f 00c1 | baf6 ffff | ff48 8b6c 

  0x0000023411614ca4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614ca4: 2428 90e8 

  0x0000023411614ca8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual flushVertexBuffer {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614ca8: 54f9 63ff 

  0x0000023411614cac: ;   {other}
  0x0000023411614cac: 0f1f 8400 | 1c3f 00c2 | baf6 ffff | ff48 8b6c 

  0x0000023411614cbc: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614cbc: 2428 90e8 

  0x0000023411614cc0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614cc0: 3cf9 63ff 

  0x0000023411614cc4: ;   {other}
  0x0000023411614cc4: 0f1f 8400 | 343f 00c3 | baf4 ffff | ff48 8b6c 

  0x0000023411614cd4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614cd4: 2428 90e8 

  0x0000023411614cd8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=Oop [72]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@14 (line 61)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614cd8: 24f9 63ff 

  0x0000023411614cdc: ;   {other}
  0x0000023411614cdc: 0f1f 8400 | 4c3f 00c4 | baf6 ffff | ff48 8b6c 

  0x0000023411614cec: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614cec: 2428 90e8 

  0x0000023411614cf0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual getContentWidth {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@28 (line 65)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614cf0: 0cf9 63ff 

  0x0000023411614cf4: ;   {other}
  0x0000023411614cf4: 0f1f 8400 | 643f 00c5 | baf6 ffff | ff48 8b6c 

  0x0000023411614d04: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614d04: 2428 90e8 

  0x0000023411614d08: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalWidth@4 (line 98)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentWidth@1 (line 108)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@43 (line 67)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614d08: f4f8 63ff 

  0x0000023411614d0c: ;   {other}
  0x0000023411614d0c: 0f1f 8400 | 7c3f 00c6 | baf6 ffff | ff48 8b6c 

  0x0000023411614d1c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614d1c: 2428 90e8 

  0x0000023411614d20: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getPhysicalHeight@4 (line 103)
                      ; - com.sun.prism.d3d.D3DSwapChain::getContentHeight@1 (line 113)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@49 (line 68)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614d20: dcf8 63ff 

  0x0000023411614d24: ;   {other}
  0x0000023411614d24: 0f1f 8400 | 943f 00c7 | ba5e ffff | ff48 8b6c 

  0x0000023411614d34: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614d34: 2428 90e8 

  0x0000023411614d38: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual getResource {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@7 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614d38: c4f8 63ff 

  0x0000023411614d3c: ;   {other}
  0x0000023411614d3c: 0f1f 8400 | ac3f 00c8 | baf4 ffff | ff48 8b6c | 2428 4c8b | 5424 404c | 8954 2428 | 448b 5c24 
  0x0000023411614d5c: 4844 895c | 2430 8944 

  0x0000023411614d64: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614d64: 2448 90e8 

  0x0000023411614d68: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=NarrowOop [80]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DRTTexture::isMSAA@10 (line 180)
                      ; - com.sun.prism.d3d.D3DSwapChain::isMSAA@11 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614d68: 94f8 63ff 

  0x0000023411614d6c: ;   {other}
  0x0000023411614d6c: 0f1f 8400 | dc3f 00c9 | baf6 ffff | ff48 8b6c 

  0x0000023411614d7c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614d7c: 2428 90e8 

  0x0000023411614d80: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual flush {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614d80: 7cf8 63ff 

  0x0000023411614d84: ;   {other}
  0x0000023411614d84: 0f1f 8400 | f43f 00ca | baf6 ffff | ff48 8b6c 

  0x0000023411614d94: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614d94: 2428 90e8 

  0x0000023411614d98: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614d98: 64f8 63ff 

  0x0000023411614d9c: ;   {other}
  0x0000023411614d9c: 0f1f 8400 | 0c40 00cb | baf6 ffff | ff48 8b6c 

  0x0000023411614dac: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614dac: 2428 90e8 

  0x0000023411614db0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@128 (line 77)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614db0: 4cf8 63ff 

  0x0000023411614db4: ;   {other}
  0x0000023411614db4: 0f1f 8400 | 2440 00cc | baf6 ffff | ff48 8b6c 

  0x0000023411614dc4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614dc4: 2428 90e8 

  0x0000023411614dc8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokeinterface present {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x0000023411614dc8: 34f8 63ff 

  0x0000023411614dcc: ;   {other}
  0x0000023411614dcc: 0f1f 8400 | 3c40 00cd | baf6 ffff | ff48 8b6c 

  0x0000023411614ddc: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614ddc: 2428 90e8 

  0x0000023411614de0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getContext {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::getContext@4 (line 130)
                      ; - com.sun.prism.d3d.D3DSwapChain::present@1 (line 83)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x0000023411614de0: 1cf8 63ff 

  0x0000023411614de4: ;   {other}
  0x0000023411614de4: 0f1f 8400 | 5440 00ce | baf6 ffff | ff48 8b6c 

  0x0000023411614df4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614df4: 2428 90e8 

  0x0000023411614df8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual isDisposed {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.d3d.D3DSwapChain::present@6 (line 84)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@451 (line 107)
  0x0000023411614df8: 04f8 63ff 

  0x0000023411614dfc: ;   {other}
  0x0000023411614dfc: 0f1f 8400 | 6c40 00cf | baf6 ffff | ff48 8b6c 

  0x0000023411614e0c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614e0c: 2428 90e8 

  0x0000023411614e10: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual startsWith {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411614e10: ecf7 63ff 

  0x0000023411614e14: ;   {other}
  0x0000023411614e14: 0f1f 8400 | 8440 00d0 | baf6 ffff | ff48 8b6c 

  0x0000023411614e24: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614e24: 2428 90e8 

  0x0000023411614e28: ; ImmutableOopMap {rbp=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.String::length@4 (line 1519)
                      ; - java.lang.String::startsWith@6 (line 2285)
                      ; - java.lang.String::startsWith@3 (line 2327)
                      ; - com.sun.prism.impl.Disposer::cleanUp@8 (line 131)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411614e28: d4f7 63ff 

  0x0000023411614e2c: ;   {other}
  0x0000023411614e2c: 0f1f 8400 | 9c40 00d1 | baf6 ffff | ff48 8b6c | 2428 4489 

  0x0000023411614e40: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614e40: 5c24 28e8 

  0x0000023411614e44: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411614e44: b8f7 63ff 

  0x0000023411614e48: ;   {other}
  0x0000023411614e48: 0f1f 8400 | b840 00d2 | baf6 ffff | ff48 8b6c | 2428 4489 

  0x0000023411614e5c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614e5c: 4424 24e8 

  0x0000023411614e60: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual isEmpty {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::processDisposalQueue@4 (line 189)
                      ; - com.sun.prism.impl.Disposer::cleanUp@32 (line 136)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411614e60: 9cf7 63ff 

  0x0000023411614e64: ;   {other}
  0x0000023411614e64: 0f1f 8400 | d440 00d3 | baf6 ffff | ff49 8beb 

  0x0000023411614e74: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614e74: 6666 90e8 

  0x0000023411614e78: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x0000023411614e78: 84f7 63ff 

  0x0000023411614e7c: ;   {other}
  0x0000023411614e7c: 0f1f 8400 | ec40 00d4 | baf6 ffff 

  0x0000023411614e88: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614e88: ff66 90e8 

  0x0000023411614e8c: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@491 (line 123)
  0x0000023411614e8c: 70f7 63ff 

  0x0000023411614e90: ;   {other}
  0x0000023411614e90: 0f1f 8400 | 0041 00d5 | ba5e ffff 

  0x0000023411614e9c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614e9c: ff66 90e8 

  0x0000023411614ea0: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@502 (line 124)
  0x0000023411614ea0: 5cf7 63ff 

  0x0000023411614ea4: ;   {other}
  0x0000023411614ea4: 0f1f 8400 | 1441 00d6 | baf6 ffff 

  0x0000023411614eb0: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614eb0: ff66 90e8 

  0x0000023411614eb4: ; ImmutableOopMap {}
                      ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.impl.BaseResourcePool::freeDisposalRequestedAndCheckResources@8 (line 280)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@523 (line 127)
  0x0000023411614eb4: 48f7 63ff 

  0x0000023411614eb8: ;   {other}
  0x0000023411614eb8: 0f1f 8400 | 2841 00d7 | baf6 ffff 

  0x0000023411614ec4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614ec4: ff66 90e8 

  0x0000023411614ec8: ; ImmutableOopMap {}
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@531 (line 130)
  0x0000023411614ec8: 34f7 63ff 

  0x0000023411614ecc: ;   {other}
  0x0000023411614ecc: 0f1f 8400 | 3c41 00d8 | ba45 ffff | ff41 8beb 

  0x0000023411614edc: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614edc: 6666 90e8 

  0x0000023411614ee0: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@77 (line 126)
  0x0000023411614ee0: 1cf7 63ff 

  0x0000023411614ee4: ;   {other}
  0x0000023411614ee4: 0f1f 8400 | 5441 00d9 | baf6 ffff | ff48 8b6c 

  0x0000023411614ef4: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614ef4: 2428 90e8 

  0x0000023411614ef8: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getType {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseGraphics::validateTransformAndPaint@14 (line 250)
                      ; - com.sun.prism.impl.BaseGraphics::scale@24 (line 206)
                      ; - com.sun.prism.d3d.D3DSwapChain::createGraphics@21 (line 149)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@304 (line 88)
  0x0000023411614ef8: 04f7 63ff 

  0x0000023411614efc: ;   {other}
  0x0000023411614efc: 0f1f 8400 | 6c41 00da | ba45 ffff 

  0x0000023411614f08: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614f08: ff66 90e8 

  0x0000023411614f0c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@115 (line 68)
  0x0000023411614f0c: f0f6 63ff 

  0x0000023411614f10: ;   {other}
  0x0000023411614f10: 0f1f 8400 | 8041 00db | ba45 ffff | ff49 8bea | 894c 2424 

  0x0000023411614f24: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614f24: 6666 90e8 

  0x0000023411614f28: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@225 (line 77)
  0x0000023411614f28: d4f6 63ff 

  0x0000023411614f2c: ;   {other}
  0x0000023411614f2c: 0f1f 8400 | 9c41 00dc | ba45 ffff 

  0x0000023411614f38: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614f38: ff66 90e8 

  0x0000023411614f3c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DTextureResource::isValid@4 (line 46)
                      ; - com.sun.prism.impl.BaseTexture::isSurfaceLost@4 (line 292)
                      ; - com.sun.prism.d3d.D3DSwapChain::lockResources@65 (line 143)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@236 (line 77)
  0x0000023411614f3c: c0f6 63ff 

  0x0000023411614f40: ;   {other}
  0x0000023411614f40: 0f1f 8400 | b041 00dd | ba45 ffff | ff48 8b6c | 2428 4c89 | 5424 2844 | 8b5c 2448 | 4489 5c24 
  0x0000023411614f60: 3044 8b54 | 244c 4489 | 5424 3489 | 4424 4889 

  0x0000023411614f70: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614f70: 7c24 4ce8 

  0x0000023411614f74: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [48]=NarrowOop [76]=NarrowOop [80]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.d3d.D3DSwapChain::isMSAA@4 (line 184)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@55 (line 69)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614f74: 88f6 63ff 

  0x0000023411614f78: ;   {other}
  0x0000023411614f78: 0f1f 8400 | e841 00de | ba45 ffff | ff49 8beb | 4489 4c24 

  0x0000023411614f8c: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614f8c: 2466 90e8 

  0x0000023411614f90: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.prism.PresentableState::unlock@4 (line 296)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@484 (line 120)
  0x0000023411614f90: 6cf6 63ff 

  0x0000023411614f94: ;   {other}
  0x0000023411614f94: 0f1f 8400 | 0442 00df | ba45 ffff 

  0x0000023411614fa0: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614fa0: ff66 90e8 

  0x0000023411614fa4: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PresentingPainter::run@510 (line 126)
  0x0000023411614fa4: 58f6 63ff 

  0x0000023411614fa8: ;   {other}
  0x0000023411614fa8: 0f1f 8400 | 1842 00e0 | baf6 ffff | ff48 8b6c 

  0x0000023411614fb8: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614fb8: 2428 90e8 

  0x0000023411614fbc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [84]=NarrowOop [100]=NarrowOop }
                      ;*invokevirtual drawQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614fbc: 40f6 63ff 

  0x0000023411614fc0: ;   {other}
  0x0000023411614fc0: 0f1f 8400 | 3042 00e1 | baf6 ffff | ff48 8b6c 

  0x0000023411614fd0: ;   {runtime_call UncommonTrapBlob}
  0x0000023411614fd0: 2428 90e8 

  0x0000023411614fd4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [80]=NarrowOop [88]=NarrowOop }
                      ;*invokevirtual drawQuads {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411614fd4: 28f6 63ff 

  0x0000023411614fd8: ;   {other}
  0x0000023411614fd8: 0f1f 8400 | 4842 00e2 | eb44 eb42 | eb40 eb3e | 488b d0bd | 0100 0000 | eb3c 488b | d0bd 0100 
  0x0000023411614ff8: 0000 eb32 | 488b d0bd | 0100 0000 | eb28 488b | d033 edeb | 21eb 0048 | 8bd0 bd01 | 0000 00eb 
  0x0000023411615018: 1548 8bd0 | 33ed eb0e | eb04 eb02 | eb00 488b | d0bd 0100 

  0x000002341161502c: ;   {oop(a 'java/lang/Class'{0x00000007050511e8} = 'java/lang/System')}
  0x000002341161502c: 0000 49ba | e811 0505 | 0700 0000 | 458b 5278 | 4d8b c249 

  0x0000023411615040: ;   {optimized virtual_call}
  0x0000023411615040: c1e0 03e8 

  0x0000023411615044: ; ImmutableOopMap {[40]=Oop }
                      ;*invokevirtual printStackTrace {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@546 (line 115)
  0x0000023411615044: 389a 63ff 

  0x0000023411615048: ;   {other}
  0x0000023411615048: 0f1f 8400 | b842 00e3 

  0x0000023411615050: ;   {static_call}
  0x0000023411615050: 6666 90e8 

  0x0000023411615054: ; ImmutableOopMap {[40]=Oop }
                      ;*invokestatic cleanUp {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@549 (line 117)
  0x0000023411615054: 28a0 63ff 

  0x0000023411615058: ;   {other}
  0x0000023411615058: 0f1f 8400 | c842 00e4 | 4c8b 5c24 | 2845 8b53 | 2885 ed0f | 84ac 0000 | 0045 85d2 | 0f84 da00 
  0x0000023411615078: 0000 498b | eb4b 8d14 

  0x0000023411615080: ;   {optimized virtual_call}
  0x0000023411615080: d466 90e8 

  0x0000023411615084: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@560 (line 120)
  0x0000023411615084: f899 63ff 

  0x0000023411615088: ;   {other}
  0x0000023411615088: 0f1f 8400 | f842 00e5 | 4c8b dd45 | 8b53 2845 | 85d2 0f84 | 8600 0000 | 478b 54d4 | 6c45 85d2 
  0x00000234116150a8: 0f84 8e00 | 0000 498b | eb4b 8d14 | d445 33c0 

  0x00000234116150b8: ;   {optimized virtual_call}
  0x00000234116150b8: 6666 90e8 

  0x00000234116150bc: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@578 (line 124)
  0x00000234116150bc: c099 63ff 

  0x00000234116150c0: ;   {other}
  0x00000234116150c0: 0f1f 8400 | 3043 00e6 | 8b6d 3085 | ed74 3145 | 8b5c ec08 

  0x00000234116150d4: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x00000234116150d4: 4181 fbd8 | 7502 010f | 858b 0000 

  0x00000234116150e0: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x000000070bae0cf0})}
  0x00000234116150e0: 0048 baf0 | 0cae 0b07 | 0000 0041 | b801 0000 

  0x00000234116150f0: ;   {optimized virtual_call}
  0x00000234116150f0: 0066 90e8 

  0x00000234116150f4: ; ImmutableOopMap {}
                      ;*invokeinterface freeDisposalRequestedAndCheckResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@599 (line 127)
  0x00000234116150f4: 8899 63ff 

  0x00000234116150f8: ;   {other}
  0x00000234116150f8: 0f1f 8400 | 6843 00e7 

  0x0000023411615100: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070b87c4f0})}
  0x0000023411615100: 48ba f0c4 | 870b 0700 

  0x0000023411615108: ;   {optimized virtual_call}
  0x0000023411615108: 0000 90e8 

  0x000002341161510c: ; ImmutableOopMap {}
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@607 (line 130)
  0x000002341161510c: 7099 63ff 

  0x0000023411615110: ;   {other}
  0x0000023411615110: 0f1f 8400 | 8043 00e8 | e9a7 d9ff | ff45 85d2 | 0f85 7aff | ffff baf6 | ffff ff49 

  0x000002341161512c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161512c: 8beb 90e8 

  0x0000023411615130: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@567 (line 123)
  0x0000023411615130: ccf4 63ff 

  0x0000023411615134: ;   {other}
  0x0000023411615134: 0f1f 8400 | a443 00e9 | ba5e ffff | ff49 8beb 

  0x0000023411615144: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615144: 6666 90e8 

  0x0000023411615148: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@578 (line 124)
  0x0000023411615148: b4f4 63ff 

  0x000002341161514c: ;   {other}
  0x000002341161514c: 0f1f 8400 | bc43 00ea | baf6 ffff | ff49 8beb 

  0x000002341161515c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161515c: 6666 90e8 

  0x0000023411615160: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@560 (line 120)
  0x0000023411615160: 9cf4 63ff 

  0x0000023411615164: ;   {other}
  0x0000023411615164: 0f1f 8400 | d443 00eb | badf ffff 

  0x0000023411615170: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615170: ff66 90e8 

  0x0000023411615174: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@593 (line 127)
  0x0000023411615174: 88f4 63ff 

  0x0000023411615178: ;   {other}
  0x0000023411615178: 0f1f 8400 | e843 00ec | baf6 ffff | ff48 8b6c 

  0x0000023411615188: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615188: 2428 90e8 

  0x000002341161518c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokeinterface lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@18 (line 112)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x000002341161518c: 70f4 63ff 

  0x0000023411615190: ;   {other}
  0x0000023411615190: 0f1f 8400 | 0044 00ed | baf6 ffff | ff48 8b6c 

  0x00000234116151a0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116151a0: 2428 90e8 

  0x00000234116151a4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokeinterface unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@71 (line 118)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x00000234116151a4: 58f4 63ff 

  0x00000234116151a8: ;   {other}
  0x00000234116151a8: 0f1f 8400 | 1844 00ee | baf6 ffff | ff48 8b6c 

  0x00000234116151b8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116151b8: 2428 90e8 

  0x00000234116151bc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.impl.BaseContext::flushMask@71 (line 118)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@6 (line 60)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x00000234116151bc: 40f4 63ff 

  0x00000234116151c0: ;   {other}
  0x00000234116151c0: 0f1f 8400 | 3044 00ef | baf6 ffff | ff48 8b6c 

  0x00000234116151d0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116151d0: 2428 90e8 

  0x00000234116151d4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokeinterface lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@18 (line 112)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x00000234116151d4: 28f4 63ff 

  0x00000234116151d8: ;   {other}
  0x00000234116151d8: 0f1f 8400 | 4844 00f0 | baf6 ffff | ff48 8b6c 

  0x00000234116151e8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116151e8: 2428 90e8 

  0x00000234116151ec: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokeinterface unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseContext::flushMask@71 (line 118)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x00000234116151ec: 10f4 63ff 

  0x00000234116151f0: ;   {other}
  0x00000234116151f0: 0f1f 8400 | 6044 00f1 | baf6 ffff | ff48 8b6c 

  0x0000023411615200: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615200: 2428 90e8 

  0x0000023411615204: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.BaseTexture::unlock@4 (line 272)
                      ; - com.sun.prism.impl.BaseContext::flushMask@71 (line 118)
                      ; - com.sun.prism.impl.BaseContext::drawQuads@1 (line 124)
                      ; - com.sun.prism.impl.VertexBuffer::flush@23 (line 98)
                      ; - com.sun.prism.impl.BaseContext::flushVertexBuffer@12 (line 107)
                      ; - com.sun.prism.d3d.D3DSwapChain::prepare@121 (line 76)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@355 (line 99)
  0x0000023411615204: f8f3 63ff 

  0x0000023411615208: ;   {other}
  0x0000023411615208: 0f1f 8400 | 7844 00f2 | baf6 ffff | ff48 8b6c 

  0x0000023411615218: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615218: 2428 90e8 

  0x000002341161521c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000002341161521c: e0f3 63ff 

  0x0000023411615220: ;   {other}
  0x0000023411615220: 0f1f 8400 | 9044 00f3 | baf4 ffff 

  0x000002341161522c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161522c: ff66 90e8 

  0x0000023411615230: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@27 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411615230: ccf3 63ff 

  0x0000023411615234: ;   {other}
  0x0000023411615234: 0f1f 8400 | a444 00f4 | baf6 ffff | ff48 8b6c 

  0x0000023411615244: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615244: 2428 90e8 

  0x0000023411615248: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411615248: b4f3 63ff 

  0x000002341161524c: ;   {other}
  0x000002341161524c: 0f1f 8400 | bc44 00f5 | baf6 ffff | ff48 8b6c 

  0x000002341161525c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161525c: 2428 90e8 

  0x0000023411615260: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [64]=Oop }
                      ;*invokevirtual remove {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@24 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411615260: 9cf3 63ff 

  0x0000023411615264: ;   {other}
  0x0000023411615264: 0f1f 8400 | d444 00f6 | baf4 ffff 

  0x0000023411615270: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615270: ff66 90e8 

  0x0000023411615274: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@27 (line 176)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411615274: 88f3 63ff 

  0x0000023411615278: ;   {other}
  0x0000023411615278: 0f1f 8400 | e844 00f7 | baf6 ffff | ff48 8b6c 

  0x0000023411615288: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615288: 2428 90e8 

  0x000002341161528c: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop }
                      ;*invokevirtual poll {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000002341161528c: 70f3 63ff 

  0x0000023411615290: ;   {other}
  0x0000023411615290: 0f1f 8400 | 0045 00f8 | 4c8b d0eb | 544c 8bd0 | e9b8 0000 | 0048 8bd8 | e9cb 0300 | 0048 8bd8 
  0x00000234116152b0: e9d3 0400 | 004c 8bd0 | eb37 4c8b | d0eb 3248 | 8944 2430 | 4c8b d545 | 8b52 1845 | 85d2 0f84 
  0x00000234116152d0: 3406 0000 | 4b8d 14d4 | 488b 6c24 

  0x00000234116152dc: ;   {optimized virtual_call}
  0x00000234116152dc: 2866 90e8 

  0x00000234116152e0: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116152e0: 9c97 63ff 

  0x00000234116152e4: ;   {other}
  0x00000234116152e4: 0f1f 8400 | 5445 00f9 | 4c8b 5424 | 3049 8bda | e97f 0300 | 0048 8bd8 | e955 0500 | 0048 8bd8 
  0x0000023411615304: e94d 0500 | 0048 8bd8 | e945 0500 | 0048 8bd8 | e93d 0500 | 0048 8bd8 | e935 0500 | 004c 8bd0 
  0x0000023411615324: eb37 4c8b | d0eb 3248 | 8944 2430 | 4c8b d545 | 8b52 1845 | 85d2 0f84 | b005 0000 | 4b8d 14d4 
  0x0000023411615344: 488b 6c24 

  0x0000023411615348: ;   {optimized virtual_call}
  0x0000023411615348: 2866 90e8 

  0x000002341161534c: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x000002341161534c: 3097 63ff 

  0x0000023411615350: ;   {other}
  0x0000023411615350: 0f1f 8400 | c045 00fa | 4c8b 5424 | 3049 8bda | e923 0400 | 004c 8bd0 | e908 0300 | 004c 8bd0 
  0x0000023411615370: e910 0400 | 004c 8bd0 | e9c6 0300 | 0048 8bd8 | 448b 5808 | 49ba 0000 | 0022 3402 | 0000 4d03 
  0x0000023411615390: d34d 8b52 

  0x0000023411615394: ;   {metadata('java/lang/Exception')}
  0x0000023411615394: 4049 bbb8 | c000 2234 | 0200 004d | 3bd3 0f85 | d002 0000 | 4889 5c24 | 40eb 6248 | 8bd8 448b 
  0x00000234116153b4: 5008 49bb | 0000 0022 | 3402 0000 | 4d03 da4d 

  0x00000234116153c4: ;   {metadata('java/lang/Exception')}
  0x00000234116153c4: 8b53 4049 | bbb8 c000 | 2234 0200 | 004d 3bd3 | 0f85 9e02 | 0000 4889 | 5c24 40eb | 3048 8bd8 
  0x00000234116153e4: 448b 5808 | 49ba 0000 | 0022 3402 | 0000 4d03 | d34d 8b52 

  0x00000234116153f8: ;   {metadata('java/lang/Exception')}
  0x00000234116153f8: 4049 bbb8 | c000 2234 | 0200 004d | 3bd3 0f85 | 6c02 0000 | 4889 5c24 

  0x0000023411615410: ;   {oop(a 'java/lang/Class'{0x00000007050511e8} = 'java/lang/System')}
  0x0000023411615410: 4049 bae8 | 1105 0507 | 0000 0041 | 8b6a 7448 | 8b54 2440 

  0x0000023411615424: ;   {static_call}
  0x0000023411615424: 6666 90e8 

  0x0000023411615428: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [56]=Oop [64]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@49 (line 181)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411615428: 549c 63ff 

  0x000002341161542c: ;   {other}
  0x000002341161542c: 0f1f 8400 | 9c46 00fb | baad ffff | ff4c 8b5c | 2440 4c89 | 5c24 3048 | 8944 2438 

  0x0000023411615448: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615448: 6666 90e8 

  0x000002341161544c: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [48]=Oop [56]=Oop }
                      ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@52 (line 181)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x000002341161544c: b0f1 63ff 

  0x0000023411615450: ;   {other}
  0x0000023411615450: 0f1f 8400 | c046 00fc | 488b d844 | 8b58 0849 | ba00 0000 | 2234 0200 | 004d 03d3 | 4d8b 5240 
  0x0000023411615470: ;   {metadata('java/lang/Exception')}
  0x0000023411615470: 49bb b8c0 | 0022 3402 | 0000 4d3b | d30f 8505 | 0300 0048 | 895c 2440 | eb62 488b | d844 8b50 
  0x0000023411615490: 0849 bb00 | 0000 2234 | 0200 004d | 03da 4d8b 

  0x00000234116154a0: ;   {metadata('java/lang/Exception')}
  0x00000234116154a0: 5340 49bb | b8c0 0022 | 3402 0000 | 4d3b d30f | 85d3 0200 | 0048 895c | 2440 eb30 | 488b d844 
  0x00000234116154c0: 8b58 0849 | ba00 0000 | 2234 0200 | 004d 03d3 | 4d8b 5240 

  0x00000234116154d4: ;   {metadata('java/lang/Exception')}
  0x00000234116154d4: 49bb b8c0 | 0022 3402 | 0000 4d3b | d30f 85a1 | 0200 0048 | 895c 2440 

  0x00000234116154ec: ;   {oop(a 'java/lang/Class'{0x00000007050511e8} = 'java/lang/System')}
  0x00000234116154ec: 49ba e811 | 0505 0700 | 0000 418b | 6a74 488b 

  0x00000234116154fc: ;   {static_call}
  0x00000234116154fc: 5424 40e8 

  0x0000023411615500: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [56]=Oop [64]=Oop }
                      ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=1}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@49 (line 181)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411615500: 7c9b 63ff 

  0x0000023411615504: ;   {other}
  0x0000023411615504: 0f1f 8400 | 7447 00fd | baad ffff | ff4c 8b5c | 2440 4c89 | 5c24 3848 | 8944 2440 

  0x0000023411615520: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615520: 6666 90e8 

  0x0000023411615524: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [40]=Oop [56]=Oop [64]=Oop }
                      ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@52 (line 181)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411615524: d8f0 63ff 

  0x0000023411615528: ;   {other}
  0x0000023411615528: 0f1f 8400 | 9847 00fe | 488b d8e9 | 1e03 0000 | 488b d8e9 | 1603 0000 | 4889 4424 

  0x0000023411615544: ;   {static_call}
  0x0000023411615544: 3066 90e8 

  0x0000023411615548: ; ImmutableOopMap {[40]=Oop [48]=Oop }
                      ;*invokestatic cleanUp {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@615 (line 117)
  0x0000023411615548: 349b 63ff 

  0x000002341161554c: ;   {other}
  0x000002341161554c: 0f1f 8400 | bc47 00ff | 4c8b 5c24 | 2845 8b53 | 2885 ed0f | 84f9 0200 | 0045 85d2 | 0f84 5603 
  0x000002341161556c: 0000 498b | eb4b 8d14 

  0x0000023411615574: ;   {optimized virtual_call}
  0x0000023411615574: d466 90e8 

  0x0000023411615578: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@626 (line 120)
  0x0000023411615578: 0495 63ff 

  0x000002341161557c: ;   {other}
  0x000002341161557c: 0f1f 8400 | 0000 0000 | 4c8b dd45 | 8b53 2845 | 85d2 0f84 | d302 0000 | 478b 54d4 | 6c45 85d2 
  0x000002341161559c: 0f84 0a03 | 0000 498b | eb4b 8d14 | d445 33c0 

  0x00000234116155ac: ;   {optimized virtual_call}
  0x00000234116155ac: 6666 90e8 

  0x00000234116155b0: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@644 (line 124)
  0x00000234116155b0: cc94 63ff 

  0x00000234116155b4: ;   {other}
  0x00000234116155b4: 0f1f 8400 | 0000 0000 | 8b6d 3085 | ed74 3545 | 8b54 ec08 

  0x00000234116155c8: ;   {metadata('com/sun/prism/d3d/D3DResourceFactory')}
  0x00000234116155c8: 4181 fad8 | 7502 010f | 8507 0300 

  0x00000234116155d4: ;   {oop(a 'com/sun/prism/d3d/D3DVramPool'{0x000000070bae0cf0})}
  0x00000234116155d4: 0048 baf0 | 0cae 0b07 | 0000 0041 | b801 0000 | 0048 8b6c 

  0x00000234116155e8: ;   {optimized virtual_call}
  0x00000234116155e8: 2430 90e8 

  0x00000234116155ec: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokeinterface freeDisposalRequestedAndCheckResources {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@665 (line 127)
  0x00000234116155ec: 9094 63ff 

  0x00000234116155f0: ;   {other}
  0x00000234116155f0: 0f1f 8400 | 0000 0000 

  0x00000234116155f8: ;   {oop(a 'java/util/concurrent/locks/ReentrantLock'{0x000000070b87c4f0})}
  0x00000234116155f8: 48ba f0c4 | 870b 0700 | 0000 488b 

  0x0000023411615604: ;   {optimized virtual_call}
  0x0000023411615604: 6c24 30e8 

  0x0000023411615608: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@673 (line 130)
  0x0000023411615608: 7494 63ff 

  0x000002341161560c: ;   {other}
  0x000002341161560c: 0f1f 8400 | 0000 0000 | 488b dde9 | 3a02 0000 | 488b d8e9 | 3202 0000 | 488b d8e9 | 2a02 0000 
  0x000002341161562c: 488b d8e9 | 2202 0000 | 4c8b d0e9 | 0701 0000 | 4c8b d0eb | 344c 8bd0 | eb2f 4889 | 4424 3044 
  0x000002341161564c: 8b55 1845 | 85d2 0f84 | 3c02 0000 | 4b8d 14d4 | 488b 6c24 

  0x0000023411615660: ;   {optimized virtual_call}
  0x0000023411615660: 2866 90e8 

  0x0000023411615664: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411615664: 1894 63ff 

  0x0000023411615668: ;   {other}
  0x0000023411615668: 0f1f 8400 | 0000 0000 | 4c8b 5424 | 3049 8bda | 4c8b 5c24 | 3848 8d84 | 2480 0000 | 0048 8338 
  0x0000023411615688: 000f 8479 | 0000 004d | 8b13 41f6 | c202 0f84 | 6200 0000 | 4983 ba86 | 0000 0000 | 7409 49ff 
  0x00000234116156a8: 8a86 0000 | 00eb 4b49 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 | c742 3e00 | 0000 00eb 
  0x00000234116156c8: 3d49 83ba | 9e00 0000 | 0074 2248 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 83ba 9e00 
  0x00000234116156e8: 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb0c a800 | eb08 4c8b | 10f0 4d0f | b113 750a 
  0x0000023411615708: 49ff 8f50 | 0500 0045 | 33d2 0f84 | 3e01 0000 | 498b cb48 | 8d94 2480 | 0000 004d | 8bc7 49ba 
  0x0000023411615728: 60f7 e358 | ff7f 0000 

  0x0000023411615730: ;   {other}
  0x0000023411615730: 41ff d20f | 1f84 0000 | 0000 00e9 | 1601 0000 | 4c8b d049 | 8bda e90b | 0100 004c | 8bd0 eb35 
  0x0000023411615750: 4c8b d0eb | 3048 8944 | 2430 448b | 5518 4585 | d20f 8415 | 0100 004b | 8d14 d448 | 8b6c 2428 
  0x0000023411615770: ;   {optimized virtual_call}
  0x0000023411615770: 6666 90e8 

  0x0000023411615774: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411615774: 0893 63ff 

  0x0000023411615778: ;   {other}
  0x0000023411615778: 0f1f 8400 | 0000 0000 | 4c8b 5424 | 3049 8bda | 4c8b 5c24 | 3848 8d84 | 2480 0000 | 0048 8338 
  0x0000023411615798: 000f 8479 | 0000 004d | 8b13 41f6 | c202 0f84 | 6200 0000 | 4983 ba86 | 0000 0000 | 7409 49ff 
  0x00000234116157b8: 8a86 0000 | 00eb 4b49 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 | c742 3e00 | 0000 00eb 
  0x00000234116157d8: 3d49 83ba | 9e00 0000 | 0074 2248 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 83ba 9e00 
  0x00000234116157f8: 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb0c a800 | eb08 4c8b | 10f0 4d0f | b113 750a 
  0x0000023411615818: 49ff 8f50 | 0500 0045 | 33d2 7432 | 498b cb48 | 8d94 2480 | 0000 004d | 8bc7 49ba | 60f7 e358 
  0x0000023411615838: ff7f 0000 

  0x000002341161583c: ;   {other}
  0x000002341161583c: 41ff d20f | 1f84 0000 | 0000 00eb | 0d48 8bd8 | eb08 488b | d8eb 0348 | 8bd8 488b | d3e9 79db 
  0x000002341161585c: ffff 4585 | d20f 852d | fdff ffba | f6ff ffff 

  0x000002341161586c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161586c: 498b ebe8 

  0x0000023411615870: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual getScene {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@633 (line 123)
  0x0000023411615870: 8ced 63ff 

  0x0000023411615874: ;   {other}
  0x0000023411615874: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8b6c 

  0x0000023411615884: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615884: 2428 90e8 

  0x0000023411615888: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x0000023411615888: 74ed 63ff 

  0x000002341161588c: ;   {other}
  0x000002341161588c: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8b6c 

  0x000002341161589c: ;   {runtime_call UncommonTrapBlob}
  0x000002341161589c: 2428 90e8 

  0x00000234116158a0: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x00000234116158a0: 5ced 63ff 

  0x00000234116158a4: ;   {other}
  0x00000234116158a4: 0f1f 8400 | 0000 0000 | ba5e ffff | ff49 8beb 

  0x00000234116158b4: ;   {runtime_call UncommonTrapBlob}
  0x00000234116158b4: 6666 90e8 

  0x00000234116158b8: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual setPainting {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@644 (line 124)
  0x00000234116158b8: 44ed 63ff 

  0x00000234116158bc: ;   {other}
  0x00000234116158bc: 0f1f 8400 | 0000 0000 | baf6 ffff | ff49 8beb 

  0x00000234116158cc: ;   {runtime_call UncommonTrapBlob}
  0x00000234116158cc: 6666 90e8 

  0x00000234116158d0: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@626 (line 120)
  0x00000234116158d0: 2ced 63ff 

  0x00000234116158d4: ;   {other}
  0x00000234116158d4: 0f1f 8400 | 0000 0000 | badf ffff 

  0x00000234116158e0: ;   {runtime_call UncommonTrapBlob}
  0x00000234116158e0: ff66 90e8 

  0x00000234116158e4: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop }
                      ;*invokeinterface getTextureResourcePool {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@659 (line 127)
  0x00000234116158e4: 18ed 63ff 

  0x00000234116158e8: ;   {other}
  0x00000234116158e8: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8b6c 

  0x00000234116158f8: ;   {runtime_call UncommonTrapBlob}
  0x00000234116158f8: 2428 90e8 

  0x00000234116158fc: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@40 (line 117)
  0x00000234116158fc: 00ed 63ff 

  0x0000023411615900: ;   {other}
  0x0000023411615900: 0f1f 8400 | 0000 0000 | baf6 ffff | ff48 8b6c 

  0x0000023411615910: ;   {runtime_call UncommonTrapBlob}
  0x0000023411615910: 2428 90e8 

  0x0000023411615914: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.lang.ref.ReferenceQueue::poll@35 (line 186)
                      ; - com.sun.prism.impl.Disposer::disposeUnreachables@4 (line 173)
                      ; - com.sun.prism.impl.Disposer::cleanUp@26 (line 135)
                      ; - com.sun.javafx.tk.quantum.PresentingPainter::run@473 (line 117)
  0x0000023411615914: e8ec 63ff 

  0x0000023411615918: ;   {other}
  0x0000023411615918: 0f1f 8400 | 0000 0000 

  0x0000023411615920: ;   {internal_word}
  0x0000023411615920: 49ba cc2a | 6111 3402 | 0000 4d89 | 9768 0400 

  0x0000023411615930: ;   {runtime_call SafepointBlob}
  0x0000023411615930: 00e9 cafd 

  0x0000023411615934: ;   {runtime_call StubRoutines (final stubs)}
  0x0000023411615934: 63ff e825 | f461 ffe9 | debd ffff 
[Stub Code]
  0x0000023411615940: ;   {no_reloc}
  0x0000023411615940: 48bb 0000 | 0000 0000 

  0x0000023411615948: ;   {runtime_call}
  0x0000023411615948: 0000 e9fb 

  0x000002341161594c: ;   {static_stub}
  0x000002341161594c: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615958: ;   {runtime_call}
  0x0000023411615958: 00e9 fbff 

  0x000002341161595c: ;   {static_stub}
  0x000002341161595c: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615968: ;   {runtime_call}
  0x0000023411615968: e9fb ffff 

  0x000002341161596c: ;   {static_stub}
  0x000002341161596c: ff48 bb00 | 0000 0000 

  0x0000023411615974: ;   {runtime_call}
  0x0000023411615974: 0000 00e9 | fbff ffff 

  0x000002341161597c: ;   {static_stub}
  0x000002341161597c: 48bb 0000 | 0000 0000 

  0x0000023411615984: ;   {runtime_call}
  0x0000023411615984: 0000 e9fb 

  0x0000023411615988: ;   {static_stub}
  0x0000023411615988: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615994: ;   {runtime_call}
  0x0000023411615994: 00e9 fbff 

  0x0000023411615998: ;   {static_stub}
  0x0000023411615998: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000234116159a4: ;   {runtime_call}
  0x00000234116159a4: e9fb ffff 

  0x00000234116159a8: ;   {static_stub}
  0x00000234116159a8: ff48 bb00 | 0000 0000 

  0x00000234116159b0: ;   {runtime_call}
  0x00000234116159b0: 0000 00e9 | fbff ffff 

  0x00000234116159b8: ;   {static_stub}
  0x00000234116159b8: 48bb 0000 | 0000 0000 

  0x00000234116159c0: ;   {runtime_call}
  0x00000234116159c0: 0000 e9fb 

  0x00000234116159c4: ;   {static_stub}
  0x00000234116159c4: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000234116159d0: ;   {runtime_call}
  0x00000234116159d0: 00e9 fbff 

  0x00000234116159d4: ;   {static_stub}
  0x00000234116159d4: ffff 48bb | e036 4622 | 3402 0000 

  0x00000234116159e0: ;   {runtime_call I2C/C2I adapters}
  0x00000234116159e0: e902 e863 

  0x00000234116159e4: ;   {static_stub}
  0x00000234116159e4: ff48 bb00 | 0000 0000 

  0x00000234116159ec: ;   {runtime_call}
  0x00000234116159ec: 0000 00e9 | fbff ffff 

  0x00000234116159f4: ;   {static_stub}
  0x00000234116159f4: 48bb 0000 | 0000 0000 

  0x00000234116159fc: ;   {runtime_call}
  0x00000234116159fc: 0000 e9fb 

  0x0000023411615a00: ;   {static_stub}
  0x0000023411615a00: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615a0c: ;   {runtime_call}
  0x0000023411615a0c: 00e9 fbff 

  0x0000023411615a10: ;   {static_stub}
  0x0000023411615a10: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615a1c: ;   {runtime_call}
  0x0000023411615a1c: e9fb ffff 

  0x0000023411615a20: ;   {static_stub}
  0x0000023411615a20: ff48 bb00 | 0000 0000 

  0x0000023411615a28: ;   {runtime_call}
  0x0000023411615a28: 0000 00e9 | fbff ffff 

  0x0000023411615a30: ;   {static_stub}
  0x0000023411615a30: 48bb 0000 | 0000 0000 

  0x0000023411615a38: ;   {runtime_call}
  0x0000023411615a38: 0000 e9fb 

  0x0000023411615a3c: ;   {static_stub}
  0x0000023411615a3c: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615a48: ;   {runtime_call}
  0x0000023411615a48: 00e9 fbff 

  0x0000023411615a4c: ;   {static_stub}
  0x0000023411615a4c: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615a58: ;   {runtime_call}
  0x0000023411615a58: e9fb ffff 

  0x0000023411615a5c: ;   {static_stub}
  0x0000023411615a5c: ff48 bb00 | 0000 0000 

  0x0000023411615a64: ;   {runtime_call}
  0x0000023411615a64: 0000 00e9 | fbff ffff 

  0x0000023411615a6c: ;   {static_stub}
  0x0000023411615a6c: 48bb 0000 | 0000 0000 

  0x0000023411615a74: ;   {runtime_call}
  0x0000023411615a74: 0000 e9fb 

  0x0000023411615a78: ;   {static_stub}
  0x0000023411615a78: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615a84: ;   {runtime_call}
  0x0000023411615a84: 00e9 fbff 

  0x0000023411615a88: ;   {static_stub}
  0x0000023411615a88: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615a94: ;   {runtime_call}
  0x0000023411615a94: e9fb ffff 

  0x0000023411615a98: ;   {static_stub}
  0x0000023411615a98: ff48 bb00 | 0000 0000 

  0x0000023411615aa0: ;   {runtime_call}
  0x0000023411615aa0: 0000 00e9 | fbff ffff 

  0x0000023411615aa8: ;   {static_stub}
  0x0000023411615aa8: 48bb 0000 | 0000 0000 

  0x0000023411615ab0: ;   {runtime_call}
  0x0000023411615ab0: 0000 e9fb 

  0x0000023411615ab4: ;   {static_stub}
  0x0000023411615ab4: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615ac0: ;   {runtime_call}
  0x0000023411615ac0: 00e9 fbff 

  0x0000023411615ac4: ;   {static_stub}
  0x0000023411615ac4: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615ad0: ;   {runtime_call}
  0x0000023411615ad0: e9fb ffff 

  0x0000023411615ad4: ;   {static_stub}
  0x0000023411615ad4: ff48 bb00 | 0000 0000 

  0x0000023411615adc: ;   {runtime_call}
  0x0000023411615adc: 0000 00e9 | fbff ffff 

  0x0000023411615ae4: ;   {static_stub}
  0x0000023411615ae4: 48bb 0000 | 0000 0000 

  0x0000023411615aec: ;   {runtime_call}
  0x0000023411615aec: 0000 e9fb 

  0x0000023411615af0: ;   {static_stub}
  0x0000023411615af0: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615afc: ;   {runtime_call}
  0x0000023411615afc: 00e9 fbff 

  0x0000023411615b00: ;   {static_stub}
  0x0000023411615b00: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615b0c: ;   {runtime_call}
  0x0000023411615b0c: e9fb ffff 

  0x0000023411615b10: ;   {static_stub}
  0x0000023411615b10: ff48 bb00 | 0000 0000 

  0x0000023411615b18: ;   {runtime_call}
  0x0000023411615b18: 0000 00e9 | fbff ffff 

  0x0000023411615b20: ;   {static_stub}
  0x0000023411615b20: 48bb 0000 | 0000 0000 

  0x0000023411615b28: ;   {runtime_call}
  0x0000023411615b28: 0000 e9fb 

  0x0000023411615b2c: ;   {static_stub}
  0x0000023411615b2c: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615b38: ;   {runtime_call}
  0x0000023411615b38: 00e9 fbff 

  0x0000023411615b3c: ;   {static_stub}
  0x0000023411615b3c: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615b48: ;   {runtime_call}
  0x0000023411615b48: e9fb ffff 

  0x0000023411615b4c: ;   {static_stub}
  0x0000023411615b4c: ff48 bb00 | 0000 0000 

  0x0000023411615b54: ;   {runtime_call}
  0x0000023411615b54: 0000 00e9 | fbff ffff 

  0x0000023411615b5c: ;   {static_stub}
  0x0000023411615b5c: 48bb 0000 | 0000 0000 

  0x0000023411615b64: ;   {runtime_call}
  0x0000023411615b64: 0000 e9fb 

  0x0000023411615b68: ;   {static_stub}
  0x0000023411615b68: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615b74: ;   {runtime_call}
  0x0000023411615b74: 00e9 fbff 

  0x0000023411615b78: ;   {static_stub}
  0x0000023411615b78: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615b84: ;   {runtime_call}
  0x0000023411615b84: e9fb ffff 

  0x0000023411615b88: ;   {static_stub}
  0x0000023411615b88: ff48 bb00 | 0000 0000 

  0x0000023411615b90: ;   {runtime_call}
  0x0000023411615b90: 0000 00e9 | fbff ffff 

  0x0000023411615b98: ;   {static_stub}
  0x0000023411615b98: 48bb 0000 | 0000 0000 

  0x0000023411615ba0: ;   {runtime_call}
  0x0000023411615ba0: 0000 e9fb 

  0x0000023411615ba4: ;   {static_stub}
  0x0000023411615ba4: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000023411615bb0: ;   {runtime_call}
  0x0000023411615bb0: 00e9 fbff 

  0x0000023411615bb4: ;   {static_stub}
  0x0000023411615bb4: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000023411615bc0: ;   {runtime_call}
  0x0000023411615bc0: e9fb ffff 

  0x0000023411615bc4: ;   {static_stub}
  0x0000023411615bc4: ff48 bb00 | 0000 0000 

  0x0000023411615bcc: ;   {runtime_call}
  0x0000023411615bcc: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x0000023411615bd4: ;   {runtime_call ExceptionBlob}
  0x0000023411615bd4: e927 8a70 | ffe8 0000 | 0000 4883 

  0x0000023411615be0: ;   {runtime_call DeoptimizationBlob}
  0x0000023411615be0: 2c24 05e9 | b8ed 63ff 
[/MachCode]


Compiled method (c2)  337110 4021   !   4       com.sun.javafx.tk.RenderJob::run (95 bytes)
 total in heap  [0x00000234115a7c10,0x00000234115a97e0] = 7120
 relocation     [0x00000234115a7d70,0x00000234115a7ee8] = 376
 main code      [0x00000234115a7f00,0x00000234115a8c88] = 3464
 stub code      [0x00000234115a8c88,0x00000234115a8cf8] = 112
 oops           [0x00000234115a8cf8,0x00000234115a8d10] = 24
 metadata       [0x00000234115a8d10,0x00000234115a8ea0] = 400
 scopes data    [0x00000234115a8ea0,0x00000234115a92c0] = 1056
 scopes pcs     [0x00000234115a92c0,0x00000234115a9680] = 960
 dependencies   [0x00000234115a9680,0x00000234115a96c0] = 64
 handler table  [0x00000234115a96c0,0x00000234115a9750] = 144
 nul chk table  [0x00000234115a9750,0x00000234115a97e0] = 144

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000023463530be0} 'run' '()V' in 'com/sun/javafx/tk/RenderJob'
  #           [sp+0x70]  (sp of caller)
  0x00000234115a7f00: 448b 5208 | 49bb 0000 | 0022 3402 | 0000 4d03 | d349 3bc2 

  0x00000234115a7f14: ;   {runtime_call ic_miss_stub}
  0x00000234115a7f14: 0f85 6668 | 6aff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x00000234115a7f20: 8984 2400 | 80ff ff55 | 4883 ec60 | 4181 7f20 | 0100 0000 | 0f85 430d | 0000 488b | da44 8b5a 
  0x00000234115a7f40: 0c4d 8b97 | 8003 0000 | 4d8b 1245 | 85db 0f85 | e807 0000 | 488b fa48 | 83c7 184d | 8bc2 49c1 
  0x00000234115a7f60: e803 4833 | c0f0 440f | b107 400f | 94c5 400f | b6ed 85ed | 7429 4c8b | df4d 33d3 | 49c1 ea15 
  0x00000234115a7f80: 4d85 d274 | 1a49 c1eb | 0948 b900 | a0ed 1534 | 0200 0049 | 03cb 8039 | 020f 85bd | 0500 0085 
  0x00000234115a7fa0: ed0f 8465 | 0800 0044 | 8b5b 0c8b | 6b10 458b | 54ec 0845 | 85db 0f85 | 9c07 0000 

  0x00000234115a7fbc: ;   {metadata('java/util/concurrent/Executors$RunnableAdapter')}
  0x00000234115a7fbc: 4181 fa48 | 0706 010f | 851b 0600 | 004d 8d1c | ec41 8b6b | 0c45 8b54 

  0x00000234115a7fd4: ;   {metadata('com/sun/javafx/tk/quantum/PresentingPainter')}
  0x00000234115a7fd4: ec08 4181 | fa60 b819 | 010f 8519 | 0600 0048 | 897c 2428 | 4889 5c24 | 2049 8d14 | ec49 8beb 
  0x00000234115a7ff4: ;   {optimized virtual_call}
  0x00000234115a7ff4: 6666 90e8 

  0x00000234115a7ff8: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Derived_oop_[32] }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a7ff8: 0497 0600 

  0x00000234115a7ffc: ;   {other}
  0x00000234115a7ffc: 0f1f 8400 | ec03 0000 | bb01 0000 | 0048 8b7c | 2420 4180 | 7f40 000f | 850c 0500 | 0044 8967 
  0x00000234115a801c: 18f0 8344 | 24c0 008b | 6f0c 83fd | 050f 8df5 | 0700 0085 | db0f 8409 | 0800 0085 | ed0f 8535 
  0x00000234115a803c: 0700 004c | 8b54 2420 | 418b 6a20 

  0x00000234115a8048: ; implicit exception: dispatches to 0x00000234115a8b28
  0x00000234115a8048: 458b 5cec 

  0x00000234115a804c: ;   {metadata('com/sun/javafx/tk/quantum/PaintCollector')}
  0x00000234115a804c: 0841 81fb | 80d8 0201 | 0f85 be05 | 0000 458b | 5a08 498d 

  0x00000234115a8060: ;   {metadata('com/sun/javafx/tk/quantum/PaintRenderJob')}
  0x00000234115a8060: 34ec 4181 | fb80 b019 | 010f 8571 | 0900 0045 | 8b52 2845 | 85d2 0f84 | e007 0000 | 4b8d 3cd4 
  0x00000234115a8080: 488d 5c24 | 4048 8b07 | a802 0f85 | 2300 0000 | 4883 c801 | 4889 03f0 | 480f b11f | 0f84 3700 
  0x00000234115a80a0: 0000 482b | c448 2507 | f0ff ff48 | 8903 e924 | 0000 004c | 8bd8 4833 | c0f0 4d0f | b17b 3e48 
  0x00000234115a80c0: c703 0300 | 0000 7411 | 4c3b f875 | 1549 ff83 | 8600 0000 | 4833 c075 | 0949 ff87 | 5005 0000 
  0x00000234115a80e0: 33c0 0f85 | 4405 0000 | 438b 6cd4 | 2845 8b44 

  0x00000234115a80f0: ;   {metadata('javafx/scene/Scene$ScenePeerPaintListener')}
  0x00000234115a80f0: ec08 4181 | f868 091a | 010f 8563 | 0500 004d 

  0x00000234115a8100: ;   {oop(a 'java/lang/Object'{0x0000000704cf9a00})}
  0x00000234115a8100: 8d0c ec49 | b800 9acf | 0407 0000 | 0048 8d5c | 2448 498b | 00a8 020f | 8523 0000 | 0048 83c8 
  0x00000234115a8120: 0148 8903 | f049 0fb1 | 180f 8437 | 0000 0048 | 2bc4 4825 | 07f0 ffff | 4889 03e9 | 2400 0000 
  0x00000234115a8140: 4c8b d848 | 33c0 f04d | 0fb1 7b3e | 48c7 0303 | 0000 0074 | 114c 3bf8 | 7515 49ff | 8386 0000 
  0x00000234115a8160: 0048 33c0 | 7509 49ff | 8750 0500 | 0033 c00f | 850b 0500 | 0045 8b41 | 0c43 8bac | c490 0000 
  0x00000234115a8180: 0085 ed0f | 85eb 0600 

  0x00000234115a8188: ;   {oop(a 'java/lang/Object'{0x0000000704cf9a00})}
  0x00000234115a8188: 0049 bb00 | 9acf 0407 | 0000 0048 | 8d44 2448 | 4883 3800 | 0f84 7900 | 0000 4d8b | 1341 f6c2 
  0x00000234115a81a8: 020f 8462 | 0000 0049 | 83ba 8600 | 0000 0074 | 0949 ff8a | 8600 0000 | eb4b 498b | 8296 0000 
  0x00000234115a81c8: 0049 0b82 | 8e00 0000 | 750a 49c7 | 423e 0000 | 0000 eb3d | 4983 ba9e | 0000 0000 | 7422 4833 
  0x00000234115a81e8: c049 c742 | 3e00 0000 | 00f0 8304 | 2400 4983 | ba9e 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 
  0x00000234115a8208: 83c8 01eb | 0ca8 00eb | 084c 8b10 | f04d 0fb1 | 1375 0a49 | ff8f 5005 | 0000 4533 | d20f 859c 
  0x00000234115a8228: 0400 0048 | 8d44 2440 | 4883 3800 | 0f84 7900 | 0000 4c8b | 1741 f6c2 | 020f 8462 | 0000 0049 
  0x00000234115a8248: 83ba 8600 | 0000 0074 | 0949 ff8a | 8600 0000 | eb4b 498b | 8296 0000 | 0049 0b82 | 8e00 0000 
  0x00000234115a8268: 750a 49c7 | 423e 0000 | 0000 eb3d | 4983 ba9e | 0000 0000 | 7422 4833 | c049 c742 | 3e00 0000 
  0x00000234115a8288: ;   {no_reloc}
  0x00000234115a8288: 00f0 8304 | 2400 4983 | ba9e 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 0ca8 00eb 
  0x00000234115a82a8: 084c 8b10 | f04c 0fb1 | 1775 0a49 | ff8f 5005 | 0000 4533 | d20f 8530 | 0400 0044 | 8b5e 1447 
  0x00000234115a82c8: 8b54 dc0c 

  0x00000234115a82cc: ; implicit exception: dispatches to 0x00000234115a8a68
  0x00000234115a82cc: 478b 5cd4 | 1041 83fb | 010f 85ad | 0400 000f | b66e 0d85 | ed0f 84b1 | 0500 0044 | 8b56 1843 
  0x00000234115a82ec: 0fb6 6cd4 | 4485 ed0f | 85c3 0400 | 0047 3b64 | d478 0f84 | a602 0000 

  0x00000234115a8304: ;   {oop(a 'java/lang/Class'{0x0000000704d0b220} = 'com/sun/javafx/tk/quantum/QuantumToolkit')}
  0x00000234115a8304: 49bb 20b2 | d004 0700 | 0000 410f | b6ab 8b00 | 0000 85ed | 0f85 9205 | 0000 478b | 44d4 4847 
  0x00000234115a8324: 8b5c c40c | 4585 db0f | 849b 0500 | 0047 8b5c | d44c 430f | b66c dc0c | 85ed 0f84 | b405 0000 
  0x00000234115a8344: 478b 5cd4 | 5445 85db | 0f84 6a02 | 0000 41b9 | 0100 0000 | 4787 4cdc | 0c45 85c9 | 744a 478b 
  0x00000234115a8364: 5cd4 4c43 | 0fb6 6cdc | 0c85 ed0f | 8423 0600 

  0x00000234115a8374: ;   {oop(a 'java/lang/Class'{0x0000000704d0b220} = 'com/sun/javafx/tk/quantum/QuantumToolkit')}
  0x00000234115a8374: 0049 bb20 | b2d0 0407 | 0000 0041 | 0fb6 ab8b | 0000 0085 | ed0f 84a0 | 0000 00ba | 45ff ffff 
  0x00000234115a8394: 4889 7424 | 2044 8954 

  0x00000234115a839c: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a839c: 2428 90e8 

  0x00000234115a83a0: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@111 (line 525)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a83a0: 5cc2 6aff 

  0x00000234115a83a4: ;   {other}
  0x00000234115a83a4: 0f1f 8400 | 9407 0001 | 478b 44d4 | 5c45 85c0 | 0f84 8e05 

  0x00000234115a83b8: ;   {oop(a 'java/lang/Class'{0x0000000705070270} = 'com/sun/glass/ui/Application')}
  0x00000234115a83b8: 0000 49bb | 7002 0705 | 0700 0000 | 458b 4b74 

  0x00000234115a83c8: ; implicit exception: dispatches to 0x00000234115a8ae0
  0x00000234115a83c8: 478b 5ccc | 1c43 8b5c | dc78 458b 

  0x00000234115a83d4: ;   {metadata('java/util/concurrent/LinkedBlockingDeque')}
  0x00000234115a83d4: 5cdc 0841 | 81fb f8ee | 0501 0f85 | 3403 0000 | 4889 7424 | 2049 c1e0 | 034b 8d2c | d444 8954 
  0x00000234115a83f4: 2428 498d 

  0x00000234115a83f8: ;   {optimized virtual_call}
  0x00000234115a83f8: 14dc 90e8 

  0x00000234115a83fc: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop }
                      ;*invokevirtual offerLast {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.LinkedBlockingDeque::addLast@2 (line 327)
                      ; - com.sun.glass.ui.InvokeLaterDispatcher::invokeLater@5 (line 160)
                      ; - com.sun.glass.ui.win.WinApplication::_invokeLater@12 (line 337)
                      ; - com.sun.glass.ui.Application::invokeLater@9 (line 483)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@41 (line 518)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a83fc: 0055 fbff 

  0x00000234115a8400: ;   {other}
  0x00000234115a8400: 0f1f 8400 | f007 0002 | 85c0 0f84 | 5805 0000 

  0x00000234115a8410: ;   {oop(a 'java/lang/Class'{0x0000000704d0b220} = 'com/sun/javafx/tk/quantum/QuantumToolkit')}
  0x00000234115a8410: 49ba 20b2 | d004 0700 | 0000 410f | b6aa 8b00 | 0000 85ed | 0f85 5a05 | 0000 488b 

  0x00000234115a842c: ;   {oop(a 'java/lang/Class'{0x0000000705070270} = 'com/sun/glass/ui/Application')}
  0x00000234115a842c: 7424 2049 | ba70 0207 | 0507 0000 | 0045 3b62 | 740f 848d | 0100 0044 | 8b56 1447 | 8b54 d40c 
  0x00000234115a844c: ; implicit exception: dispatches to 0x00000234115a8acc
  0x00000234115a844c: 478b 4cd4 | 1045 85c9 | 0f84 ba04 | 0000 458d | 59ff 418b | c1f0 470f | b15c d410 | 400f 94c5 
  0x00000234115a846c: 400f b6ed | 85ed 0f84 | b804 0000 | 4183 f901 | 0f85 6f03 | 0000 478b | 5cd4 1445 | 85db 7513 
  0x00000234115a848c: 4883 c460 

  0x00000234115a8490: ;   {poll_return}
  0x00000234115a8490: 5d49 3ba7 | 5004 0000 | 0f87 c907 | 0000 c347 | 8b4c dc14 | 4585 c974 | e347 8b54 | cc0c 4585 
  0x00000234115a84b0: d274 d943 | 8b44 cc0c | 448b d841 | 83e3 fef0 | 470f b15c | cc0c 400f | 94c5 400f | b6ed 85ed 
  0x00000234115a84d0: 0f84 f204 | 0000 438b | 6ccc 1845 | 8b5c ec08 

  0x00000234115a84e0: ;   {metadata('java/lang/BaseVirtualThread')}
  0x00000234115a84e0: 49ba 989b | 0222 3402 | 0000 49b8 | 0000 0022 | 3402 0000 | 4d03 c34d | 8b58 404d | 3bda 0f84 
  0x00000234115a8500: b004 0000 | 4d8d 04ec 

  0x00000234115a8508: ;   {oop(a 'jdk/internal/misc/Unsafe'{0x0000000704c83e30})}
  0x00000234115a8508: 48ba 303e | c804 0700 

  0x00000234115a8510: ;   {optimized virtual_call}
  0x00000234115a8510: 0000 90e8 

  0x00000234115a8514: ; ImmutableOopMap {}
                      ;*invokevirtual unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.LockSupport::unpark@22 (line 181)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8514: 2876 ecff 

  0x00000234115a8518: ;   {other}
  0x00000234115a8518: 0f1f 8400 | 0809 0003 | e967 ffff | ff44 8b57 | 1845 85d2 | 0f84 e7fa | ffff 4d8b | 5f28 498b 
  0x00000234115a8538: ca48 c1e1 | 034d 85db | 0f84 8e02 | 0000 4d8b | 5738 4b89 | 4c1a f849 | 83c3 f84d | 895f 28e9 
  0x00000234115a8558: bdfa ffff | 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 8039 | 000f 842c | faff ff44 | 8821 4d85 
  0x00000234115a8578: d275 1d49 | 8bd7 49ba | 7026 a358 | ff7f 0000 

  0x00000234115a8588: ;   {other}
  0x00000234115a8588: 41ff d20f | 1f84 0000 | 0000 00e9 | 07fa ffff | 4b89 4c13 | f849 83c2 | f84d 8957 | 48e9 f5f9 
  0x00000234115a85a8: ffff baf6 

  0x00000234115a85ac: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a85ac: ffff ffe8 

  0x00000234115a85b0: ; ImmutableOopMap {}
                      ;*invokevirtual isVsyncSupported {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::isVsyncEnabled@10 (line 477)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@1 (line 609)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a85b0: 4cc0 6aff 

  0x00000234115a85b4: ;   {other}
  0x00000234115a85b4: 0f1f 8400 | a409 0004 | baf6 ffff 

  0x00000234115a85c0: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a85c0: ff66 90e8 

  0x00000234115a85c4: ; ImmutableOopMap {}
                      ;*invokevirtual getAndSet {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::setPulseRunning@5 (line 559)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@31 (line 516)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a85c4: 38c0 6aff 

  0x00000234115a85c8: ;   {other}
  0x00000234115a85c8: 0f1f 8400 | b809 0005 | baf6 ffff 

  0x00000234115a85d4: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a85d4: ff66 90e8 

  0x00000234115a85d8: ; ImmutableOopMap {}
                      ;*invokevirtual notifyRenderingFinished {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@107 (line 307)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a85d8: 24c0 6aff 

  0x00000234115a85dc: ;   {other}
  0x00000234115a85dc: 0f1f 8400 | cc09 0006 | bade ffff | ff48 895c 

  0x00000234115a85ec: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a85ec: 2428 90e8 

  0x00000234115a85f0: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*invokeinterface call {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a85f0: 0cc0 6aff 

  0x00000234115a85f4: ;   {other}
  0x00000234115a85f4: 0f1f 8400 | e409 0007 | bade ffff | ff48 895c | 2428 4c89 

  0x00000234115a8608: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8608: 5c24 30e8 

  0x00000234115a860c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [48]=Oop }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a860c: f0bf 6aff 

  0x00000234115a8610: ;   {other}
  0x00000234115a8610: 0f1f 8400 | 000a 0008 | bade ffff 

  0x00000234115a861c: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a861c: ff66 90e8 

  0x00000234115a8620: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop }
                      ;*invokeinterface done {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8620: dcbf 6aff 

  0x00000234115a8624: ;   {other}
  0x00000234115a8624: 0f1f 8400 | 140a 0009 | 4889 7c24 | 2844 8954 | 2420 488b | ee48 8bd7 | 4c8d 4424 

  0x00000234115a8640: ;   {runtime_call _complete_monitor_locking_Java}
  0x00000234115a8640: 4066 90e8 

  0x00000234115a8644: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [40]=Oop }
                      ;*synchronization entry
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@-1 (line 327)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8644: b8da 77ff 

  0x00000234115a8648: ;   {other}
  0x00000234115a8648: 0f1f 8400 | 380a 000a | 488b f544 | 8b54 2420 | 488b 7c24 | 28e9 86fa | ffff bade | ffff ff48 
  0x00000234115a8668: 8974 2420 | 4489 5424 

  0x00000234115a8670: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8670: 2866 90e8 

  0x00000234115a8674: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=NarrowOop }
                      ;*invokeinterface frameRendered {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8674: 88bf 6aff 

  0x00000234115a8678: ;   {other}
  0x00000234115a8678: 0f1f 8400 | 680a 000b | 4c89 4c24 | 3048 897c | 2428 4489 | 5424 2048 

  0x00000234115a8690: ;   {oop(a 'java/lang/Object'{0x0000000704cf9a00})}
  0x00000234115a8690: 8bee 48ba | 009a cf04 | 0700 0000 | 4c8d 4424 

  0x00000234115a86a0: ;   {runtime_call _complete_monitor_locking_Java}
  0x00000234115a86a0: 4866 90e8 

  0x00000234115a86a4: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [40]=Oop [48]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - javafx.scene.Scene$ScenePeerPaintListener::frameRendered@5 (line 2999)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a86a4: 58da 77ff 

  0x00000234115a86a8: ;   {other}
  0x00000234115a86a8: 0f1f 8400 | 980a 000c | 488b f544 | 8b54 2420 | 488b 7c24 | 284c 8b4c | 2430 e9ae 

  0x00000234115a86c4: ;   {oop(a 'java/lang/Object'{0x0000000704cf9a00})}
  0x00000234115a86c4: faff ff48 | b900 9acf | 0407 0000 | 0048 8d54 | 2448 4d8b | c749 ba60 | f7e3 58ff | 7f00 0041 
  0x00000234115a86e4: ;   {other}
  0x00000234115a86e4: ffd2 0f1f | 8400 0000 | 0000 e938 | fbff ff48 | 8bcf 488d | 5424 404d | 8bc7 49ba | 60f7 e358 
  0x00000234115a8704: ff7f 0000 

  0x00000234115a8708: ;   {other}
  0x00000234115a8708: 41ff d20f | 1f84 0000 | 0000 00e9 | abfb ffff | bade ffff | ff48 8bee | 4489 5424 | 2089 5c24 
  0x00000234115a8728: 2444 8944 

  0x00000234115a872c: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a872c: 2428 90e8 

  0x00000234115a8730: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [40]=NarrowOop }
                      ;*invokeinterface addLast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.InvokeLaterDispatcher::invokeLater@5 (line 160)
                      ; - com.sun.glass.ui.win.WinApplication::_invokeLater@12 (line 337)
                      ; - com.sun.glass.ui.Application::invokeLater@9 (line 483)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@41 (line 518)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8730: ccbe 6aff 

  0x00000234115a8734: ;   {other}
  0x00000234115a8734: 0f1f 8400 | 240b 000d | ba45 ffff | ff48 8beb | 4489 5c24 

  0x00000234115a8748: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8748: 2066 90e8 

  0x00000234115a874c: ; ImmutableOopMap {rbp=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@4 (line 349)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a874c: b0be 6aff 

  0x00000234115a8750: ;   {other}
  0x00000234115a8750: 0f1f 8400 | 400b 000e | ba45 ffff | ff48 895c | 2420 4489 

  0x00000234115a8764: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8764: 5c24 28e8 

  0x00000234115a8768: ; ImmutableOopMap {[32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@40 (line 356)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a8768: 94be 6aff 

  0x00000234115a876c: ;   {other}
  0x00000234115a876c: 0f1f 8400 | 5c0b 000f | ba45 ffff 

  0x00000234115a8778: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8778: ff66 90e8 

  0x00000234115a877c: ; ImmutableOopMap {[32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@116 (line 374)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a877c: 80be 6aff 

  0x00000234115a8780: ;   {other}
  0x00000234115a8780: 0f1f 8400 | 700b 0010 | 4d63 d3ba | 45ff ffff | 41bb 0100 | 0000 4d3b | d3bd ffff | ffff 7c08 
  0x00000234115a87a0: 400f 95c5 | 400f b6ed | 4889 7424 

  0x00000234115a87ac: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a87ac: 2066 90e8 

  0x00000234115a87b0: ; ImmutableOopMap {[32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@77 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a87b0: 4cbe 6aff 

  0x00000234115a87b4: ;   {other}
  0x00000234115a87b4: 0f1f 8400 | a40b 0011 | ba45 ffff | ff48 8974 

  0x00000234115a87c4: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a87c4: 2420 90e8 

  0x00000234115a87c8: ; ImmutableOopMap {[32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@94 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a87c8: 34be 6aff 

  0x00000234115a87cc: ;   {other}
  0x00000234115a87cc: 0f1f 8400 | bc0b 0012 | 498b d749 | ba90 26a3 | 58ff 7f00 | 0041 ffd2 

  0x00000234115a87e4: ;   {other}
  0x00000234115a87e4: 0f1f 8400 | 0000 0000 | e928 f8ff | ffba 45ff | ffff 418b | ea44 895c 

  0x00000234115a87fc: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a87fc: 2420 90e8 

  0x00000234115a8800: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@25 (line 183)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8800: fcbd 6aff 

  0x00000234115a8804: ;   {other}
  0x00000234115a8804: 0f1f 8400 | f40b 0013 | ba45 ffff | ff48 895c 

  0x00000234115a8814: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8814: 2420 90e8 

  0x00000234115a8818: ; ImmutableOopMap {[32]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@18 (line 350)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a8818: e4bd 6aff 

  0x00000234115a881c: ;   {other}
  0x00000234115a881c: 0f1f 8400 | 0c0c 0014 | ba45 ffff | ff48 897c | 2428 895c 

  0x00000234115a8830: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8830: 2430 90e8 

  0x00000234115a8834: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@75 (line 371)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a8834: c8bd 6aff 

  0x00000234115a8838: ;   {other}
  0x00000234115a8838: 0f1f 8400 | 280c 0015 | ba45 ffff | ff48 8b6c | 2420 895c 

  0x00000234115a884c: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a884c: 2420 90e8 

  0x00000234115a8850: ; ImmutableOopMap {rbp=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@112 (line 374)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a8850: acbd 6aff 

  0x00000234115a8854: ;   {other}
  0x00000234115a8854: 0f1f 8400 | 440c 0016 | ba45 ffff | ff44 8954 

  0x00000234115a8864: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8864: 2420 90e8 

  0x00000234115a8868: ; ImmutableOopMap {[32]=NarrowOop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@51 (line 282)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8868: 94bd 6aff 

  0x00000234115a886c: ;   {other}
  0x00000234115a886c: 0f1f 8400 | 5c0c 0017 | ba45 ffff | ff48 8974 | 2420 4489 | 5424 284c | 894c 2430 

  0x00000234115a8888: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8888: 6666 90e8 

  0x00000234115a888c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=NarrowOop [48]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.scene.Scene$ScenePeerPaintListener::frameRendered@13 (line 3000)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a888c: 70bd 6aff 

  0x00000234115a8890: ;   {other}
  0x00000234115a8890: 0f1f 8400 | 800c 0018 | ba45 ffff | ff48 8974 

  0x00000234115a88a0: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a88a0: 2420 90e8 

  0x00000234115a88a4: ; ImmutableOopMap {[32]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.PaintCollector::done@84 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a88a4: 58bd 6aff 

  0x00000234115a88a8: ;   {other}
  0x00000234115a88a8: 0f1f 8400 | 980c 0019 | ba45 ffff | ff48 8974 | 2420 4489 

  0x00000234115a88bc: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a88bc: 5424 28e8 

  0x00000234115a88c0: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@10 (line 610)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a88c0: 3cbd 6aff 

  0x00000234115a88c4: ;   {other}
  0x00000234115a88c4: 0f1f 8400 | b40c 001a | 4533 c945 | 85db 410f | 95c1 ba45 | ffff ff48 | 8bee 4489 | 5424 2044 
  0x00000234115a88e4: 894c 2424 

  0x00000234115a88e8: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a88e8: 6666 90e8 

  0x00000234115a88ec: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@7 (line 514)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a88ec: 10bd 6aff 

  0x00000234115a88f0: ;   {other}
  0x00000234115a88f0: 0f1f 8400 | e00c 001b | ba45 ffff | ff48 8974 | 2420 4489 

  0x00000234115a8904: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8904: 5424 28e8 

  0x00000234115a8908: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@17 (line 515)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8908: f4bc 6aff 

  0x00000234115a890c: ;   {other}
  0x00000234115a890c: 0f1f 8400 | fc0c 001c | ba45 ffff | ff41 8bea | 4489 4c24 

  0x00000234115a8920: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8920: 2066 90e8 

  0x00000234115a8924: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@6 (line 179)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8924: d8bc 6aff 

  0x00000234115a8928: ;   {other}
  0x00000234115a8928: 0f1f 8400 | 180d 001d | ba45 ffff | ff44 8954 

  0x00000234115a8938: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8938: 2424 90e8 

  0x00000234115a893c: ; ImmutableOopMap {[36]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.CountDownLatch$Sync::tryReleaseShared@21 (line 182)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1146)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a893c: c0bc 6aff 

  0x00000234115a8940: ;   {other}
  0x00000234115a8940: 0f1f 8400 | 300d 001e | ba45 ffff | ff48 8bee | 4489 5424 | 2044 8944 

  0x00000234115a8958: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8958: 2428 90e8 

  0x00000234115a895c: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [40]=NarrowOop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.glass.ui.Application::invokeLater@1 (line 480)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@41 (line 518)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a895c: a0bc 6aff 

  0x00000234115a8960: ;   {other}
  0x00000234115a8960: 0f1f 8400 | 500d 001f | ba45 ffff | ff48 8b6c | 2420 8944 

  0x00000234115a8974: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8974: 2424 90e8 

  0x00000234115a8978: ; ImmutableOopMap {rbp=Oop [40]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.LinkedBlockingDeque::addLast@5 (line 327)
                      ; - com.sun.glass.ui.InvokeLaterDispatcher::invokeLater@5 (line 160)
                      ; - com.sun.glass.ui.win.WinApplication::_invokeLater@12 (line 337)
                      ; - com.sun.glass.ui.Application::invokeLater@9 (line 483)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@41 (line 518)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8978: 84bc 6aff 

  0x00000234115a897c: ;   {other}
  0x00000234115a897c: 0f1f 8400 | 6c0d 0020 | ba45 ffff 

  0x00000234115a8988: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8988: ff66 90e8 

  0x00000234115a898c: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@47 (line 520)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a898c: 70bc 6aff 

  0x00000234115a8990: ;   {other}
  0x00000234115a8990: 0f1f 8400 | 800d 0021 | ba45 ffff | ff48 8974 | 2420 4489 

  0x00000234115a89a4: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a89a4: 5424 28e8 

  0x00000234115a89a8: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@78 (line 523)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a89a8: 54bc 6aff 

  0x00000234115a89ac: ;   {other}
  0x00000234115a89ac: 0f1f 8400 | 9c0d 0022 | ba45 ffff 

  0x00000234115a89b8: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a89b8: ff66 90e8 

  0x00000234115a89bc: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@8 (line 178)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a89bc: 40bc 6aff 

  0x00000234115a89c0: ;   {other}
  0x00000234115a89c0: 0f1f 8400 | b00d 0023 | ba45 ffff | ff44 894c 

  0x00000234115a89d0: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a89d0: 2424 90e8 

  0x00000234115a89d4: ; ImmutableOopMap {[36]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) jdk.internal.misc.Unsafe::getAndBitwiseAndInt@21 (line 3233)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::getAndUnsetStatus@10 (line 481)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 644)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a89d4: 28bc 6aff 

  0x00000234115a89d8: ;   {other}
  0x00000234115a89d8: 0f1f 8400 | c80d 0024 | bade ffff | ff49 8bea | 4889 7424 

  0x00000234115a89ec: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a89ec: 2866 90e8 

  0x00000234115a89f0: ; ImmutableOopMap {rbp=Oop [40]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@24 (line 275)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a89f0: 0cbc 6aff 

  0x00000234115a89f4: ;   {other}
  0x00000234115a89f4: 0f1f 8400 | e40d 0025 | 488b 5424 | 204c 8bc0 

  0x00000234115a8a04: ;   {optimized virtual_call}
  0x00000234115a8a04: 488b eae8 

  0x00000234115a8a08: ; ImmutableOopMap {rbp=Oop [40]=Derived_oop_rbp [32]=Oop }
                      ;*invokevirtual setException {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@60 (line 361)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a8a08: 7460 6aff 

  0x00000234115a8a0c: ;   {other}
  0x00000234115a8a0c: 0f1f 8400 | fc0d 0026 | 33db e9ee | f5ff ffba | f6ff ffff | 4889 5c24 

  0x00000234115a8a24: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8a24: 2066 90e8 

  0x00000234115a8a28: ; ImmutableOopMap {[32]=Oop }
                      ;*invokeinterface run {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.Executors$RunnableAdapter::call@4 (line 572)
                      ; - java.util.concurrent.FutureTask::runAndReset@44 (line 358)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a8a28: d4bb 6aff 

  0x00000234115a8a2c: ;   {other}
  0x00000234115a8a2c: 0f1f 8400 | 1c0e 0027 | baf6 ffff | ff48 8bee | 4489 5424 | 204c 894c 

  0x00000234115a8a44: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8a44: 2428 90e8 

  0x00000234115a8a48: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [40]=Oop }
                      ;*getfield tracker {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) javafx.scene.Scene$ScenePeerPaintListener::frameRendered@10 (line 3000)
                      ; - com.sun.javafx.tk.quantum.GlassScene::frameRendered@11 (line 328)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8a48: b4bb 6aff 

  0x00000234115a8a4c: ;   {other}
  0x00000234115a8a4c: 0f1f 8400 | 3c0e 0028 | baf6 ffff 

  0x00000234115a8a58: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8a58: ff66 90e8 

  0x00000234115a8a5c: ; ImmutableOopMap {}
                      ;*invokevirtual getCount {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@72 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8a5c: a0bb 6aff 

  0x00000234115a8a60: ;   {other}
  0x00000234115a8a60: 0f1f 8400 | 500e 0029 | baf6 ffff 

  0x00000234115a8a6c: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8a6c: ff66 90e8 

  0x00000234115a8a70: ; ImmutableOopMap {}
                      ;*invokevirtual getCount {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.CountDownLatch::getCount@4 (line 301)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@72 (line 300)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8a70: 8cbb 6aff 

  0x00000234115a8a74: ;   {other}
  0x00000234115a8a74: 0f1f 8400 | 640e 002a | baf6 ffff 

  0x00000234115a8a80: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8a80: ff66 90e8 

  0x00000234115a8a84: ; ImmutableOopMap {}
                      ;*invokevirtual hasNativeSystemVsync {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@91 (line 303)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8a84: 78bb 6aff 

  0x00000234115a8a88: ;   {other}
  0x00000234115a8a88: 0f1f 8400 | 780e 002b | baf6 ffff 

  0x00000234115a8a94: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8a94: ff66 90e8 

  0x00000234115a8a98: ; ImmutableOopMap {}
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@4 (line 514)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8a98: 64bb 6aff 

  0x00000234115a8a9c: ;   {other}
  0x00000234115a8a9c: 0f1f 8400 | 8c0e 002c | baf6 ffff 

  0x00000234115a8aa8: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8aa8: ff66 90e8 

  0x00000234115a8aac: ; ImmutableOopMap {}
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@14 (line 515)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8aac: 50bb 6aff 

  0x00000234115a8ab0: ;   {other}
  0x00000234115a8ab0: 0f1f 8400 | a00e 002d | baf6 ffff 

  0x00000234115a8abc: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8abc: ff66 90e8 

  0x00000234115a8ac0: ; ImmutableOopMap {}
                      ;*invokevirtual countDown {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8ac0: 3cbb 6aff 

  0x00000234115a8ac4: ;   {other}
  0x00000234115a8ac4: 0f1f 8400 | b40e 002e | baf6 ffff 

  0x00000234115a8ad0: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8ad0: ff66 90e8 

  0x00000234115a8ad4: ; ImmutableOopMap {}
                      ;*invokevirtual releaseShared {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8ad4: 28bb 6aff 

  0x00000234115a8ad8: ;   {other}
  0x00000234115a8ad8: 0f1f 8400 | c80e 002f | baf6 ffff | ff41 8be8 

  0x00000234115a8ae8: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8ae8: 6666 90e8 

  0x00000234115a8aec: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokevirtual _invokeLater {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.Application::invokeLater@9 (line 483)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@41 (line 518)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8aec: 10bb 6aff 

  0x00000234115a8af0: ;   {other}
  0x00000234115a8af0: 0f1f 8400 | e00e 0030 | baf6 ffff | ff41 8be8 

  0x00000234115a8b00: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8b00: 6666 90e8 

  0x00000234115a8b04: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*invokeinterface addLast {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.glass.ui.InvokeLaterDispatcher::invokeLater@5 (line 160)
                      ; - com.sun.glass.ui.win.WinApplication::_invokeLater@12 (line 337)
                      ; - com.sun.glass.ui.Application::invokeLater@9 (line 483)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@41 (line 518)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8b04: f8ba 6aff 

  0x00000234115a8b08: ;   {other}
  0x00000234115a8b08: 0f1f 8400 | f80e 0031 | ba45 ffff | ff48 895c 

  0x00000234115a8b18: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8b18: 2428 90e8 

  0x00000234115a8b1c: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.FutureTask::runAndReset@36 (line 356)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a8b1c: e0ba 6aff 

  0x00000234115a8b20: ;   {other}
  0x00000234115a8b20: 0f1f 8400 | 100f 0032 | ba45 ffff 

  0x00000234115a8b2c: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8b2c: ff66 90e8 

  0x00000234115a8b30: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.RenderJob::run@73 (line 75)
  0x00000234115a8b30: ccba 6aff 

  0x00000234115a8b34: ;   {other}
  0x00000234115a8b34: 0f1f 8400 | 240f 0033 | ba45 ffff | ff48 8974 | 2420 4489 

  0x00000234115a8b48: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8b48: 5424 28e8 

  0x00000234115a8b4c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.javafx.tk.quantum.GlassScene::frameRendered@4 (line 327)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@65 (line 291)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8b4c: b0ba 6aff 

  0x00000234115a8b50: ;   {other}
  0x00000234115a8b50: 0f1f 8400 | 400f 0034 | ba45 ffff | ff48 8bee | 4489 5424 | 2044 894c | 2424 4489 | 4424 2844 
  0x00000234115a8b70: 895c 242c 

  0x00000234115a8b74: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8b74: 6666 90e8 

  0x00000234115a8b78: ; ImmutableOopMap {rbp=Oop [32]=NarrowOop [36]=NarrowOop [40]=NarrowOop [44]=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) com.sun.glass.ui.win.WinApplication::_invokeLater@4 (line 336)
                      ; - com.sun.glass.ui.Application::invokeLater@9 (line 483)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@41 (line 518)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8b78: 84ba 6aff 

  0x00000234115a8b7c: ;   {other}
  0x00000234115a8b7c: 0f1f 8400 | 6c0f 0035 | baf6 ffff 

  0x00000234115a8b88: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8b88: ff66 90e8 

  0x00000234115a8b8c: ; ImmutableOopMap {}
                      ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::postPulse@75 (line 523)
                      ; - com.sun.javafx.tk.quantum.QuantumToolkit::vsyncHint@28 (line 613)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@101 (line 304)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8b8c: 70ba 6aff 

  0x00000234115a8b90: ;   {other}
  0x00000234115a8b90: 0f1f 8400 | 800f 0036 | 488b d0eb | 0348 8bd0 

  0x00000234115a8ba0: ;   {optimized virtual_call}
  0x00000234115a8ba0: 6666 90e8 

  0x00000234115a8ba4: ; ImmutableOopMap {}
                      ;*invokevirtual printStackTrace {reexecute=0 rethrow=0 return_oop=0}
                      ; - com.sun.javafx.tk.RenderJob::run@91 (line 79)
  0x00000234115a8ba4: d85e 6aff 

  0x00000234115a8ba8: ;   {other}
  0x00000234115a8ba8: 0f1f 8400 | 980f 0037 | e9d7 f8ff | ffba 45ff 

  0x00000234115a8bb8: ;   {runtime_call UncommonTrapBlob}
  0x00000234115a8bb8: ffff 90e8 

  0x00000234115a8bbc: ; ImmutableOopMap {rbp=NarrowOop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.LockSupport::unpark@1 (line 177)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 645)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@12 (line 1147)
                      ; - java.util.concurrent.CountDownLatch::countDown@5 (line 290)
                      ; - com.sun.javafx.tk.quantum.PaintCollector::done@123 (line 318)
                      ; - com.sun.javafx.tk.RenderJob::run@81 (line 77)
  0x00000234115a8bbc: 40ba 6aff 

  0x00000234115a8bc0: ;   {other}
  0x00000234115a8bc0: 0f1f 8400 | b00f 0038 | 498b d749 | ba90 26a3 | 58ff 7f00 | 0041 ffd2 

  0x00000234115a8bd8: ;   {other}
  0x00000234115a8bd8: 0f1f 8400 | 0000 0000 | eb13 eb3d | 4889 4424 | 3041 807f | 4000 7543 | 488b 5c24 | 2844 8923 
  0x00000234115a8bf8: f083 4424 | c000 4c8b | d545 8b42 | 0c41 83f8 | 057c 1149 

  0x00000234115a8c0c: ;   {optimized virtual_call}
  0x00000234115a8c0c: 8bd2 90e8 

  0x00000234115a8c10: ; ImmutableOopMap {rbp=Oop [48]=Oop }
                      ;*invokevirtual handlePossibleCancellationInterrupt {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.FutureTask::runAndReset@105 (line 372)
                      ; - com.sun.javafx.tk.RenderJob::run@1 (line 58)
  0x00000234115a8c10: 6c5e 6aff 

  0x00000234115a8c14: ;   {other}
  0x00000234115a8c14: 0f1f 8400 | 0410 0039 | 488b 4424 | 3048 8bd0 | eb03 488b | d048 83c4 

  0x00000234115a8c2c: ;   {runtime_call _rethrow_Java}
  0x00000234115a8c2c: 605d e9cd | dd77 ff48 | 8b5c 2428 | 448b 1b45 | 85db 74b5 | 4d8b 5728 | 498b cb48 | c1e1 034d 
  0x00000234115a8c4c: 85d2 0f84 | 74ff ffff | 4d8b 5f38 | 4b89 4c13 | f849 83c2 | f84d 8957 

  0x00000234115a8c64: ;   {internal_word}
  0x00000234115a8c64: 28eb 8e49 | ba91 845a | 1134 0200 | 004d 8997 | 6804 0000 

  0x00000234115a8c78: ;   {runtime_call SafepointBlob}
  0x00000234115a8c78: e983 ca6a 

  0x00000234115a8c7c: ;   {runtime_call StubRoutines (final stubs)}
  0x00000234115a8c7c: ffe8 dec0 | 68ff e9b3 | f2ff fff4 
[Stub Code]
  0x00000234115a8c88: ;   {no_reloc}
  0x00000234115a8c88: 48bb 0000 | 0000 0000 

  0x00000234115a8c90: ;   {runtime_call}
  0x00000234115a8c90: 0000 e9fb 

  0x00000234115a8c94: ;   {static_stub}
  0x00000234115a8c94: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000234115a8ca0: ;   {runtime_call}
  0x00000234115a8ca0: 00e9 fbff 

  0x00000234115a8ca4: ;   {static_stub}
  0x00000234115a8ca4: ffff 48bb | 0000 0000 | 0000 0000 

  0x00000234115a8cb0: ;   {runtime_call}
  0x00000234115a8cb0: e9fb ffff 

  0x00000234115a8cb4: ;   {static_stub}
  0x00000234115a8cb4: ff48 bb70 | 7f99 6334 

  0x00000234115a8cbc: ;   {runtime_call I2C/C2I adapters}
  0x00000234115a8cbc: 0200 00e9 | 9fa7 6aff 

  0x00000234115a8cc4: ;   {static_stub}
  0x00000234115a8cc4: 48bb 0000 | 0000 0000 

  0x00000234115a8ccc: ;   {runtime_call}
  0x00000234115a8ccc: 0000 e9fb 

  0x00000234115a8cd0: ;   {static_stub}
  0x00000234115a8cd0: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000234115a8cdc: ;   {runtime_call}
  0x00000234115a8cdc: 00e9 fbff 

  0x00000234115a8ce0: ;   {runtime_call ExceptionBlob}
  0x00000234115a8ce0: ffff e919 | 5977 ffe8 | 0000 0000 | 4883 2c24 

  0x00000234115a8cf0: ;   {runtime_call DeoptimizationBlob}
  0x00000234115a8cf0: 05e9 aabc | 6aff f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x0000023472dc8890, length=19, elements={
0x000002347f43b150, 0x000002341e06dff0, 0x000002341e073cd0, 0x000002341e074930,
0x000002341e0773a0, 0x000002341e07b220, 0x000002341e07c5d0, 0x000002341e07fb10,
0x000002341e0889d0, 0x0000023421210830, 0x000002346722ff60, 0x0000023421d88db0,
0x0000023421ca9f40, 0x000002346790c130, 0x000002346790d7d0, 0x0000023467a4af80,
0x00000234676dd8a0, 0x0000023472ec6190, 0x0000023472ec7540
}

Java Threads: ( => current thread )
  0x000002347f43b150 JavaThread "main"                              [_thread_blocked, id=11704, stack(0x000000bc82c00000,0x000000bc82d00000) (1024K)]
  0x000002341e06dff0 JavaThread "Reference Handler"          daemon [_thread_blocked, id=17924, stack(0x000000bc83400000,0x000000bc83500000) (1024K)]
  0x000002341e073cd0 JavaThread "Finalizer"                  daemon [_thread_blocked, id=7188, stack(0x000000bc83500000,0x000000bc83600000) (1024K)]
  0x000002341e074930 JavaThread "Signal Dispatcher"          daemon [_thread_blocked, id=16436, stack(0x000000bc83600000,0x000000bc83700000) (1024K)]
  0x000002341e0773a0 JavaThread "Attach Listener"            daemon [_thread_blocked, id=10880, stack(0x000000bc83700000,0x000000bc83800000) (1024K)]
  0x000002341e07b220 JavaThread "Service Thread"             daemon [_thread_blocked, id=6072, stack(0x000000bc83800000,0x000000bc83900000) (1024K)]
  0x000002341e07c5d0 JavaThread "Monitor Deflation Thread"   daemon [_thread_blocked, id=2536, stack(0x000000bc83900000,0x000000bc83a00000) (1024K)]
  0x000002341e07fb10 JavaThread "C2 CompilerThread0"         daemon [_thread_blocked, id=2612, stack(0x000000bc83a00000,0x000000bc83b00000) (1024K)]
  0x000002341e0889d0 JavaThread "C1 CompilerThread0"         daemon [_thread_blocked, id=15648, stack(0x000000bc83b00000,0x000000bc83c00000) (1024K)]
  0x0000023421210830 JavaThread "Common-Cleaner"             daemon [_thread_blocked, id=19148, stack(0x000000bc83c00000,0x000000bc83d00000) (1024K)]
  0x000002346722ff60 JavaThread "Monitor Ctrl-Break"         daemon [_thread_in_native, id=16880, stack(0x000000bc84500000,0x000000bc84600000) (1024K)]
  0x0000023421d88db0 JavaThread "Notification Thread"        daemon [_thread_blocked, id=1808, stack(0x000000bc84600000,0x000000bc84700000) (1024K)]
=>0x0000023421ca9f40 JavaThread "QuantumRenderer-0"          daemon [_thread_in_native, id=15320, stack(0x000000bc84400000,0x000000bc84500000) (1024K)]
  0x000002346790c130 JavaThread "InvokeLaterDispatcher"      daemon [_thread_blocked, id=4192, stack(0x000000bc84200000,0x000000bc84300000) (1024K)]
  0x000002346790d7d0 JavaThread "JavaFX Application Thread"         [_thread_blocked, id=13452, stack(0x000000bc84100000,0x000000bc84200000) (1024K)]
  0x0000023467a4af80 JavaThread "JavaFX-Launcher"                   [_thread_blocked, id=14344, stack(0x000000bc84c00000,0x000000bc84d00000) (1024K)]
  0x00000234676dd8a0 JavaThread "Thread-2"                   daemon [_thread_in_native, id=2220, stack(0x000000bc84b00000,0x000000bc84c00000) (1024K)]
  0x0000023472ec6190 JavaThread "Prism Font Disposer"        daemon [_thread_blocked, id=4044, stack(0x000000bc85600000,0x000000bc85700000) (1024K)]
  0x0000023472ec7540 JavaThread "Cleaner-0"                  daemon [_thread_blocked, id=9960, stack(0x000000bc85700000,0x000000bc85800000) (1024K)]
Total: 19

Other Threads:
  0x000002341e051560 VMThread "VM Thread"                           [id=2804, stack(0x000000bc83300000,0x000000bc83400000) (1024K)]
  0x00000234211209d0 WatcherThread "VM Periodic Task Thread"        [id=11480, stack(0x000000bc83200000,0x000000bc83300000) (1024K)]
  0x000002347f4a61a0 WorkerThread "GC Thread#0"                     [id=18112, stack(0x000000bc82d00000,0x000000bc82e00000) (1024K)]
  0x00000234676f5430 WorkerThread "GC Thread#1"                     [id=19184, stack(0x000000bc84d00000,0x000000bc84e00000) (1024K)]
  0x00000234676f57d0 WorkerThread "GC Thread#2"                     [id=12024, stack(0x000000bc84e00000,0x000000bc84f00000) (1024K)]
  0x00000234676f5b70 WorkerThread "GC Thread#3"                     [id=18864, stack(0x000000bc84f00000,0x000000bc85000000) (1024K)]
  0x00000234676e2900 WorkerThread "GC Thread#4"                     [id=11888, stack(0x000000bc85000000,0x000000bc85100000) (1024K)]
  0x00000234676e2ca0 WorkerThread "GC Thread#5"                     [id=22244, stack(0x000000bc85100000,0x000000bc85200000) (1024K)]
  0x0000023467fc3800 WorkerThread "GC Thread#6"                     [id=10688, stack(0x000000bc85800000,0x000000bc85900000) (1024K)]
  0x0000023467fc4dc0 WorkerThread "GC Thread#7"                     [id=22960, stack(0x000000bc85900000,0x000000bc85a00000) (1024K)]
  0x0000023467fc3460 WorkerThread "GC Thread#8"                     [id=17388, stack(0x000000bc85a00000,0x000000bc85b00000) (1024K)]
  0x0000023467fc3ba0 WorkerThread "GC Thread#9"                     [id=5372, stack(0x000000bc85b00000,0x000000bc85c00000) (1024K)]
  0x000002347391ee50 WorkerThread "GC Thread#10"                    [id=9932, stack(0x000000bc82900000,0x000000bc82a00000) (1024K)]
  0x0000023473921290 WorkerThread "GC Thread#11"                    [id=18240, stack(0x000000bc82a00000,0x000000bc82b00000) (1024K)]
  0x000002347391fcd0 WorkerThread "GC Thread#12"                    [id=11012, stack(0x000000bc82b00000,0x000000bc82c00000) (1024K)]
  0x0000023473922850 WorkerThread "GC Thread#13"                    [id=14556, stack(0x000000bc83d00000,0x000000bc83e00000) (1024K)]
  0x0000023473921d70 WorkerThread "GC Thread#14"                    [id=1160, stack(0x000000bc83e00000,0x000000bc83f00000) (1024K)]
  0x000002347f4aebe0 ConcurrentGCThread "G1 Main Marker"            [id=7452, stack(0x000000bc82e00000,0x000000bc82f00000) (1024K)]
  0x000002341deb8870 WorkerThread "G1 Conc#0"                       [id=23108, stack(0x000000bc82f00000,0x000000bc83000000) (1024K)]
  0x000002341df88e20 ConcurrentGCThread "G1 Refine#0"               [id=3840, stack(0x000000bc83000000,0x000000bc83100000) (1024K)]
  0x000002347eca20b0 ConcurrentGCThread "G1 Service"                [id=10584, stack(0x000000bc83100000,0x000000bc83200000) (1024K)]
Total: 21

Threads with active compile tasks:
Total: 0

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x0000000704c00000, size: 4020 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x0000023422000000-0x0000023422c90000-0x0000023422c90000), size 13172736, SharedBaseAddress: 0x0000023422000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x0000023423000000-0x0000023463000000, reserved size: 1073741824
Narrow klass base: 0x0000023422000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 4 size 8 Array Of Cards #cards 16 size 48 Howl #buckets 8 coarsen threshold 3686 Howl Bitmap #cards 512 size 80 coarsen threshold 460 Card regions per heap region 1 cards per card region 4096
 CPUs: 20 total, 20 available
 Memory: 16075M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 2M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 252M
 Heap Max Capacity: 4020M
 Pre-touch: Disabled
 Parallel Workers: 15
 Concurrent Workers: 4
 Concurrent Refinement Workers: 15
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 258048K, used 112460K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 52 young (106496K), 5 survivors (10240K)
 Metaspace       used 18998K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TAMS=top-at-mark-start, PB=parsable bottom
|   0|0x0000000704c00000, 0x0000000704e00000, 0x0000000704e00000|100%| O|  |TAMS 0x0000000704c00000| PB 0x0000000704c00000| Untracked 
|   1|0x0000000704e00000, 0x0000000705000000, 0x0000000705000000|100%|HS|  |TAMS 0x0000000704e00000| PB 0x0000000704e00000| Complete 
|   2|0x0000000705000000, 0x0000000705200000, 0x0000000705200000|100%| O|  |TAMS 0x0000000705000000| PB 0x0000000705000000| Untracked 
|   3|0x0000000705200000, 0x0000000705400000, 0x0000000705400000|100%| O|  |TAMS 0x0000000705200000| PB 0x0000000705200000| Untracked 
|   4|0x0000000705400000, 0x00000007054a63c8, 0x0000000705600000| 32%| O|  |TAMS 0x0000000705400000| PB 0x0000000705400000| Untracked 
|   5|0x0000000705600000, 0x0000000705600000, 0x0000000705800000|  0%| F|  |TAMS 0x0000000705600000| PB 0x0000000705600000| Untracked 
|   6|0x0000000705800000, 0x0000000705800000, 0x0000000705a00000|  0%| F|  |TAMS 0x0000000705800000| PB 0x0000000705800000| Untracked 
|   7|0x0000000705a00000, 0x0000000705a00000, 0x0000000705c00000|  0%| F|  |TAMS 0x0000000705a00000| PB 0x0000000705a00000| Untracked 
|   8|0x0000000705c00000, 0x0000000705c00000, 0x0000000705e00000|  0%| F|  |TAMS 0x0000000705c00000| PB 0x0000000705c00000| Untracked 
|   9|0x0000000705e00000, 0x0000000705e00000, 0x0000000706000000|  0%| F|  |TAMS 0x0000000705e00000| PB 0x0000000705e00000| Untracked 
|  10|0x0000000706000000, 0x0000000706000000, 0x0000000706200000|  0%| F|  |TAMS 0x0000000706000000| PB 0x0000000706000000| Untracked 
|  11|0x0000000706200000, 0x0000000706200000, 0x0000000706400000|  0%| F|  |TAMS 0x0000000706200000| PB 0x0000000706200000| Untracked 
|  12|0x0000000706400000, 0x0000000706400000, 0x0000000706600000|  0%| F|  |TAMS 0x0000000706400000| PB 0x0000000706400000| Untracked 
|  13|0x0000000706600000, 0x0000000706600000, 0x0000000706800000|  0%| F|  |TAMS 0x0000000706600000| PB 0x0000000706600000| Untracked 
|  14|0x0000000706800000, 0x0000000706800000, 0x0000000706a00000|  0%| F|  |TAMS 0x0000000706800000| PB 0x0000000706800000| Untracked 
|  15|0x0000000706a00000, 0x0000000706a00000, 0x0000000706c00000|  0%| F|  |TAMS 0x0000000706a00000| PB 0x0000000706a00000| Untracked 
|  16|0x0000000706c00000, 0x0000000706c00000, 0x0000000706e00000|  0%| F|  |TAMS 0x0000000706c00000| PB 0x0000000706c00000| Untracked 
|  17|0x0000000706e00000, 0x0000000706e00000, 0x0000000707000000|  0%| F|  |TAMS 0x0000000706e00000| PB 0x0000000706e00000| Untracked 
|  18|0x0000000707000000, 0x0000000707000000, 0x0000000707200000|  0%| F|  |TAMS 0x0000000707000000| PB 0x0000000707000000| Untracked 
|  19|0x0000000707200000, 0x0000000707200000, 0x0000000707400000|  0%| F|  |TAMS 0x0000000707200000| PB 0x0000000707200000| Untracked 
|  20|0x0000000707400000, 0x0000000707400000, 0x0000000707600000|  0%| F|  |TAMS 0x0000000707400000| PB 0x0000000707400000| Untracked 
|  21|0x0000000707600000, 0x0000000707600000, 0x0000000707800000|  0%| F|  |TAMS 0x0000000707600000| PB 0x0000000707600000| Untracked 
|  22|0x0000000707800000, 0x0000000707800000, 0x0000000707a00000|  0%| F|  |TAMS 0x0000000707800000| PB 0x0000000707800000| Untracked 
|  23|0x0000000707a00000, 0x0000000707a00000, 0x0000000707c00000|  0%| F|  |TAMS 0x0000000707a00000| PB 0x0000000707a00000| Untracked 
|  24|0x0000000707c00000, 0x0000000707c00000, 0x0000000707e00000|  0%| F|  |TAMS 0x0000000707c00000| PB 0x0000000707c00000| Untracked 
|  25|0x0000000707e00000, 0x0000000707e00000, 0x0000000708000000|  0%| F|  |TAMS 0x0000000707e00000| PB 0x0000000707e00000| Untracked 
|  26|0x0000000708000000, 0x0000000708000000, 0x0000000708200000|  0%| F|  |TAMS 0x0000000708000000| PB 0x0000000708000000| Untracked 
|  27|0x0000000708200000, 0x0000000708200000, 0x0000000708400000|  0%| F|  |TAMS 0x0000000708200000| PB 0x0000000708200000| Untracked 
|  28|0x0000000708400000, 0x0000000708400000, 0x0000000708600000|  0%| F|  |TAMS 0x0000000708400000| PB 0x0000000708400000| Untracked 
|  29|0x0000000708600000, 0x0000000708600000, 0x0000000708800000|  0%| F|  |TAMS 0x0000000708600000| PB 0x0000000708600000| Untracked 
|  30|0x0000000708800000, 0x0000000708800000, 0x0000000708a00000|  0%| F|  |TAMS 0x0000000708800000| PB 0x0000000708800000| Untracked 
|  31|0x0000000708a00000, 0x0000000708a00000, 0x0000000708c00000|  0%| F|  |TAMS 0x0000000708a00000| PB 0x0000000708a00000| Untracked 
|  32|0x0000000708c00000, 0x0000000708c00000, 0x0000000708e00000|  0%| F|  |TAMS 0x0000000708c00000| PB 0x0000000708c00000| Untracked 
|  33|0x0000000708e00000, 0x0000000708e00000, 0x0000000709000000|  0%| F|  |TAMS 0x0000000708e00000| PB 0x0000000708e00000| Untracked 
|  34|0x0000000709000000, 0x0000000709000000, 0x0000000709200000|  0%| F|  |TAMS 0x0000000709000000| PB 0x0000000709000000| Untracked 
|  35|0x0000000709200000, 0x0000000709200000, 0x0000000709400000|  0%| F|  |TAMS 0x0000000709200000| PB 0x0000000709200000| Untracked 
|  36|0x0000000709400000, 0x0000000709400000, 0x0000000709600000|  0%| F|  |TAMS 0x0000000709400000| PB 0x0000000709400000| Untracked 
|  37|0x0000000709600000, 0x0000000709600000, 0x0000000709800000|  0%| F|  |TAMS 0x0000000709600000| PB 0x0000000709600000| Untracked 
|  38|0x0000000709800000, 0x0000000709800000, 0x0000000709a00000|  0%| F|  |TAMS 0x0000000709800000| PB 0x0000000709800000| Untracked 
|  39|0x0000000709a00000, 0x0000000709a00000, 0x0000000709c00000|  0%| F|  |TAMS 0x0000000709a00000| PB 0x0000000709a00000| Untracked 
|  40|0x0000000709c00000, 0x0000000709c00000, 0x0000000709e00000|  0%| F|  |TAMS 0x0000000709c00000| PB 0x0000000709c00000| Untracked 
|  41|0x0000000709e00000, 0x0000000709e00000, 0x000000070a000000|  0%| F|  |TAMS 0x0000000709e00000| PB 0x0000000709e00000| Untracked 
|  42|0x000000070a000000, 0x000000070a000000, 0x000000070a200000|  0%| F|  |TAMS 0x000000070a000000| PB 0x000000070a000000| Untracked 
|  43|0x000000070a200000, 0x000000070a200000, 0x000000070a400000|  0%| F|  |TAMS 0x000000070a200000| PB 0x000000070a200000| Untracked 
|  44|0x000000070a400000, 0x000000070a400000, 0x000000070a600000|  0%| F|  |TAMS 0x000000070a400000| PB 0x000000070a400000| Untracked 
|  45|0x000000070a600000, 0x000000070a600000, 0x000000070a800000|  0%| F|  |TAMS 0x000000070a600000| PB 0x000000070a600000| Untracked 
|  46|0x000000070a800000, 0x000000070a800000, 0x000000070aa00000|  0%| F|  |TAMS 0x000000070a800000| PB 0x000000070a800000| Untracked 
|  47|0x000000070aa00000, 0x000000070aa00000, 0x000000070ac00000|  0%| F|  |TAMS 0x000000070aa00000| PB 0x000000070aa00000| Untracked 
|  48|0x000000070ac00000, 0x000000070ac00000, 0x000000070ae00000|  0%| F|  |TAMS 0x000000070ac00000| PB 0x000000070ac00000| Untracked 
|  49|0x000000070ae00000, 0x000000070ae00000, 0x000000070b000000|  0%| F|  |TAMS 0x000000070ae00000| PB 0x000000070ae00000| Untracked 
|  50|0x000000070b000000, 0x000000070b000000, 0x000000070b200000|  0%| F|  |TAMS 0x000000070b000000| PB 0x000000070b000000| Untracked 
|  51|0x000000070b200000, 0x000000070b32cf30, 0x000000070b400000| 58%| S|CS|TAMS 0x000000070b200000| PB 0x000000070b200000| Complete 
|  52|0x000000070b400000, 0x000000070b600000, 0x000000070b600000|100%| S|CS|TAMS 0x000000070b400000| PB 0x000000070b400000| Complete 
|  53|0x000000070b600000, 0x000000070b800000, 0x000000070b800000|100%| S|CS|TAMS 0x000000070b600000| PB 0x000000070b600000| Complete 
|  54|0x000000070b800000, 0x000000070ba00000, 0x000000070ba00000|100%| S|CS|TAMS 0x000000070b800000| PB 0x000000070b800000| Complete 
|  55|0x000000070ba00000, 0x000000070bc00000, 0x000000070bc00000|100%| S|CS|TAMS 0x000000070ba00000| PB 0x000000070ba00000| Complete 
|  56|0x000000070bc00000, 0x000000070bc00000, 0x000000070be00000|  0%| F|  |TAMS 0x000000070bc00000| PB 0x000000070bc00000| Untracked 
|  57|0x000000070be00000, 0x000000070be00000, 0x000000070c000000|  0%| F|  |TAMS 0x000000070be00000| PB 0x000000070be00000| Untracked 
|  58|0x000000070c000000, 0x000000070c000000, 0x000000070c200000|  0%| F|  |TAMS 0x000000070c000000| PB 0x000000070c000000| Untracked 
|  59|0x000000070c200000, 0x000000070c200000, 0x000000070c400000|  0%| F|  |TAMS 0x000000070c200000| PB 0x000000070c200000| Untracked 
|  60|0x000000070c400000, 0x000000070c400000, 0x000000070c600000|  0%| F|  |TAMS 0x000000070c400000| PB 0x000000070c400000| Untracked 
|  61|0x000000070c600000, 0x000000070c600000, 0x000000070c800000|  0%| F|  |TAMS 0x000000070c600000| PB 0x000000070c600000| Untracked 
|  62|0x000000070c800000, 0x000000070c800000, 0x000000070ca00000|  0%| F|  |TAMS 0x000000070c800000| PB 0x000000070c800000| Untracked 
|  63|0x000000070ca00000, 0x000000070ca00000, 0x000000070cc00000|  0%| F|  |TAMS 0x000000070ca00000| PB 0x000000070ca00000| Untracked 
|  64|0x000000070cc00000, 0x000000070cc00000, 0x000000070ce00000|  0%| F|  |TAMS 0x000000070cc00000| PB 0x000000070cc00000| Untracked 
|  65|0x000000070ce00000, 0x000000070ce00000, 0x000000070d000000|  0%| F|  |TAMS 0x000000070ce00000| PB 0x000000070ce00000| Untracked 
|  66|0x000000070d000000, 0x000000070d000000, 0x000000070d200000|  0%| F|  |TAMS 0x000000070d000000| PB 0x000000070d000000| Untracked 
|  67|0x000000070d200000, 0x000000070d200000, 0x000000070d400000|  0%| F|  |TAMS 0x000000070d200000| PB 0x000000070d200000| Untracked 
|  68|0x000000070d400000, 0x000000070d400000, 0x000000070d600000|  0%| F|  |TAMS 0x000000070d400000| PB 0x000000070d400000| Untracked 
|  69|0x000000070d600000, 0x000000070d600000, 0x000000070d800000|  0%| F|  |TAMS 0x000000070d600000| PB 0x000000070d600000| Untracked 
|  70|0x000000070d800000, 0x000000070d800000, 0x000000070da00000|  0%| F|  |TAMS 0x000000070d800000| PB 0x000000070d800000| Untracked 
|  71|0x000000070da00000, 0x000000070da00000, 0x000000070dc00000|  0%| F|  |TAMS 0x000000070da00000| PB 0x000000070da00000| Untracked 
|  72|0x000000070dc00000, 0x000000070dc00000, 0x000000070de00000|  0%| F|  |TAMS 0x000000070dc00000| PB 0x000000070dc00000| Untracked 
|  73|0x000000070de00000, 0x000000070de00000, 0x000000070e000000|  0%| F|  |TAMS 0x000000070de00000| PB 0x000000070de00000| Untracked 
|  74|0x000000070e000000, 0x000000070e000000, 0x000000070e200000|  0%| F|  |TAMS 0x000000070e000000| PB 0x000000070e000000| Untracked 
|  75|0x000000070e200000, 0x000000070e200000, 0x000000070e400000|  0%| F|  |TAMS 0x000000070e200000| PB 0x000000070e200000| Untracked 
|  76|0x000000070e400000, 0x000000070e400000, 0x000000070e600000|  0%| F|  |TAMS 0x000000070e400000| PB 0x000000070e400000| Untracked 
|  77|0x000000070e600000, 0x000000070e600000, 0x000000070e800000|  0%| F|  |TAMS 0x000000070e600000| PB 0x000000070e600000| Untracked 
|  78|0x000000070e800000, 0x000000070e800000, 0x000000070ea00000|  0%| F|  |TAMS 0x000000070e800000| PB 0x000000070e800000| Untracked 
|  79|0x000000070ea00000, 0x000000070ea97f58, 0x000000070ec00000| 29%| E|  |TAMS 0x000000070ea00000| PB 0x000000070ea00000| Complete 
|  80|0x000000070ec00000, 0x000000070ee00000, 0x000000070ee00000|100%| E|CS|TAMS 0x000000070ec00000| PB 0x000000070ec00000| Complete 
|  81|0x000000070ee00000, 0x000000070f000000, 0x000000070f000000|100%| E|CS|TAMS 0x000000070ee00000| PB 0x000000070ee00000| Complete 
|  82|0x000000070f000000, 0x000000070f200000, 0x000000070f200000|100%| E|CS|TAMS 0x000000070f000000| PB 0x000000070f000000| Complete 
|  83|0x000000070f200000, 0x000000070f400000, 0x000000070f400000|100%| E|CS|TAMS 0x000000070f200000| PB 0x000000070f200000| Complete 
|  84|0x000000070f400000, 0x000000070f600000, 0x000000070f600000|100%| E|CS|TAMS 0x000000070f400000| PB 0x000000070f400000| Complete 
|  85|0x000000070f600000, 0x000000070f800000, 0x000000070f800000|100%| E|CS|TAMS 0x000000070f600000| PB 0x000000070f600000| Complete 
|  86|0x000000070f800000, 0x000000070fa00000, 0x000000070fa00000|100%| E|CS|TAMS 0x000000070f800000| PB 0x000000070f800000| Complete 
|  87|0x000000070fa00000, 0x000000070fc00000, 0x000000070fc00000|100%| E|CS|TAMS 0x000000070fa00000| PB 0x000000070fa00000| Complete 
|  88|0x000000070fc00000, 0x000000070fe00000, 0x000000070fe00000|100%| E|CS|TAMS 0x000000070fc00000| PB 0x000000070fc00000| Complete 
|  89|0x000000070fe00000, 0x0000000710000000, 0x0000000710000000|100%| E|CS|TAMS 0x000000070fe00000| PB 0x000000070fe00000| Complete 
|  90|0x0000000710000000, 0x0000000710200000, 0x0000000710200000|100%| E|CS|TAMS 0x0000000710000000| PB 0x0000000710000000| Complete 
|  91|0x0000000710200000, 0x0000000710400000, 0x0000000710400000|100%| E|CS|TAMS 0x0000000710200000| PB 0x0000000710200000| Complete 
|  92|0x0000000710400000, 0x0000000710600000, 0x0000000710600000|100%| E|CS|TAMS 0x0000000710400000| PB 0x0000000710400000| Complete 
|  93|0x0000000710600000, 0x0000000710800000, 0x0000000710800000|100%| E|CS|TAMS 0x0000000710600000| PB 0x0000000710600000| Complete 
|  94|0x0000000710800000, 0x0000000710a00000, 0x0000000710a00000|100%| E|CS|TAMS 0x0000000710800000| PB 0x0000000710800000| Complete 
|  95|0x0000000710a00000, 0x0000000710c00000, 0x0000000710c00000|100%| E|CS|TAMS 0x0000000710a00000| PB 0x0000000710a00000| Complete 
|  96|0x0000000710c00000, 0x0000000710e00000, 0x0000000710e00000|100%| E|CS|TAMS 0x0000000710c00000| PB 0x0000000710c00000| Complete 
|  97|0x0000000710e00000, 0x0000000711000000, 0x0000000711000000|100%| E|CS|TAMS 0x0000000710e00000| PB 0x0000000710e00000| Complete 
|  98|0x0000000711000000, 0x0000000711200000, 0x0000000711200000|100%| E|CS|TAMS 0x0000000711000000| PB 0x0000000711000000| Complete 
|  99|0x0000000711200000, 0x0000000711400000, 0x0000000711400000|100%| E|CS|TAMS 0x0000000711200000| PB 0x0000000711200000| Complete 
| 100|0x0000000711400000, 0x0000000711600000, 0x0000000711600000|100%| E|CS|TAMS 0x0000000711400000| PB 0x0000000711400000| Complete 
| 101|0x0000000711600000, 0x0000000711800000, 0x0000000711800000|100%| E|CS|TAMS 0x0000000711600000| PB 0x0000000711600000| Complete 
| 102|0x0000000711800000, 0x0000000711a00000, 0x0000000711a00000|100%| E|CS|TAMS 0x0000000711800000| PB 0x0000000711800000| Complete 
| 103|0x0000000711a00000, 0x0000000711c00000, 0x0000000711c00000|100%| E|CS|TAMS 0x0000000711a00000| PB 0x0000000711a00000| Complete 
| 104|0x0000000711c00000, 0x0000000711e00000, 0x0000000711e00000|100%| E|CS|TAMS 0x0000000711c00000| PB 0x0000000711c00000| Complete 
| 105|0x0000000711e00000, 0x0000000712000000, 0x0000000712000000|100%| E|CS|TAMS 0x0000000711e00000| PB 0x0000000711e00000| Complete 
| 106|0x0000000712000000, 0x0000000712200000, 0x0000000712200000|100%| E|CS|TAMS 0x0000000712000000| PB 0x0000000712000000| Complete 
| 107|0x0000000712200000, 0x0000000712400000, 0x0000000712400000|100%| E|CS|TAMS 0x0000000712200000| PB 0x0000000712200000| Complete 
| 108|0x0000000712400000, 0x0000000712600000, 0x0000000712600000|100%| E|CS|TAMS 0x0000000712400000| PB 0x0000000712400000| Complete 
| 109|0x0000000712600000, 0x0000000712800000, 0x0000000712800000|100%| E|CS|TAMS 0x0000000712600000| PB 0x0000000712600000| Complete 
| 110|0x0000000712800000, 0x0000000712a00000, 0x0000000712a00000|100%| E|CS|TAMS 0x0000000712800000| PB 0x0000000712800000| Complete 
| 111|0x0000000712a00000, 0x0000000712c00000, 0x0000000712c00000|100%| E|CS|TAMS 0x0000000712a00000| PB 0x0000000712a00000| Complete 
| 112|0x0000000712c00000, 0x0000000712e00000, 0x0000000712e00000|100%| E|CS|TAMS 0x0000000712c00000| PB 0x0000000712c00000| Complete 
| 113|0x0000000712e00000, 0x0000000713000000, 0x0000000713000000|100%| E|CS|TAMS 0x0000000712e00000| PB 0x0000000712e00000| Complete 
| 114|0x0000000713000000, 0x0000000713200000, 0x0000000713200000|100%| E|CS|TAMS 0x0000000713000000| PB 0x0000000713000000| Complete 
| 115|0x0000000713200000, 0x0000000713400000, 0x0000000713400000|100%| E|CS|TAMS 0x0000000713200000| PB 0x0000000713200000| Complete 
| 116|0x0000000713400000, 0x0000000713600000, 0x0000000713600000|100%| E|CS|TAMS 0x0000000713400000| PB 0x0000000713400000| Complete 
| 117|0x0000000713600000, 0x0000000713800000, 0x0000000713800000|100%| E|CS|TAMS 0x0000000713600000| PB 0x0000000713600000| Complete 
| 118|0x0000000713800000, 0x0000000713a00000, 0x0000000713a00000|100%| E|CS|TAMS 0x0000000713800000| PB 0x0000000713800000| Complete 
| 119|0x0000000713a00000, 0x0000000713c00000, 0x0000000713c00000|100%| E|CS|TAMS 0x0000000713a00000| PB 0x0000000713a00000| Complete 
| 120|0x0000000713c00000, 0x0000000713e00000, 0x0000000713e00000|100%| E|CS|TAMS 0x0000000713c00000| PB 0x0000000713c00000| Complete 
| 121|0x0000000713e00000, 0x0000000714000000, 0x0000000714000000|100%| E|CS|TAMS 0x0000000713e00000| PB 0x0000000713e00000| Complete 
| 122|0x0000000714000000, 0x0000000714200000, 0x0000000714200000|100%| E|CS|TAMS 0x0000000714000000| PB 0x0000000714000000| Complete 
| 123|0x0000000714200000, 0x0000000714400000, 0x0000000714400000|100%| E|CS|TAMS 0x0000000714200000| PB 0x0000000714200000| Complete 
| 124|0x0000000714400000, 0x0000000714600000, 0x0000000714600000|100%| E|CS|TAMS 0x0000000714400000| PB 0x0000000714400000| Complete 
| 125|0x0000000714600000, 0x0000000714800000, 0x0000000714800000|100%| E|CS|TAMS 0x0000000714600000| PB 0x0000000714600000| Complete 

Card table byte_map: [0x0000023419700000,0x0000023419ee0000] _byte_map_base: 0x0000023415eda000

Marking Bits: (CMBitMap*) 0x000002347f4a67b0
 Bits: [0x0000023419ee0000, 0x000002341ddb0000)

Polling page: 0x000002347f4b0000

Metaspace:

Usage:
  Non-class:     15.92 MB used.
      Class:      2.64 MB used.
       Both:     18.55 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      16.06 MB ( 25%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       2.75 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      18.81 MB (  2%) committed. 

Chunk freelists:
   Non-Class:  15.75 MB
       Class:  13.19 MB
        Both:  28.94 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 386.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 301.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 1011.
num_chunk_merges: 0.
num_chunk_splits: 692.
num_chunks_enlarged: 509.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=119168Kb used=2927Kb max_used=2927Kb free=116240Kb
 bounds [0x0000023411350000, 0x0000023411630000, 0x00000234187b0000]
CodeHeap 'profiled nmethods': size=119104Kb used=8118Kb max_used=8118Kb free=110985Kb
 bounds [0x00000234097b0000, 0x0000023409fa0000, 0x0000023410c00000]
CodeHeap 'non-nmethods': size=7488Kb used=1830Kb max_used=3573Kb free=5657Kb
 bounds [0x0000023410c00000, 0x0000023410f80000, 0x0000023411350000]
 total_blobs=5014 nmethods=4175 adapters=741
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 112.670 Thread 0x000002341e07fb10 nmethod 4165 0x0000023411624c10 code [0x0000023411624da0, 0x0000023411624e80]
Event: 112.670 Thread 0x000002341e07fb10 4166       4       java.util.concurrent.ThreadPoolExecutor::execute (132 bytes)
Event: 112.686 Thread 0x000002341e07fb10 nmethod 4166 0x0000023411624f10 code [0x0000023411625200, 0x00000234116265a8]
Event: 141.069 Thread 0x000002341e0889d0 4167   !   3       java.util.concurrent.ThreadPoolExecutor::getTask (177 bytes)
Event: 141.070 Thread 0x000002341e0889d0 nmethod 4167 0x0000023409f99890 code [0x0000023409f99b40, 0x0000023409f9a9e8]
Event: 141.605 Thread 0x000002341e07fb10 4168   !   4       java.util.concurrent.ThreadPoolExecutor::getTask (177 bytes)
Event: 141.623 Thread 0x000002341e07fb10 nmethod 4168 0x0000023411627190 code [0x00000234116273e0, 0x0000023411627fc8]
Event: 174.453 Thread 0x000002341e07fb10 4169  s    4       com.sun.javafx.sg.prism.GrowableDataBuffer::getBuffer (94 bytes)
Event: 174.469 Thread 0x000002341e07fb10 nmethod 4169 0x0000023411628790 code [0x0000023411628980, 0x00000234116294c0]
Event: 192.628 Thread 0x000002341e07fb10 4170       4       com.sun.javafx.tk.quantum.PaintCollector::setDirty (19 bytes)
Event: 192.630 Thread 0x000002341e0889d0 4171       3       com.sun.javafx.tk.quantum.PaintCollector::addDirtyScene (95 bytes)
Event: 192.644 Thread 0x000002341e0889d0 nmethod 4171 0x0000023409f9ae90 code [0x0000023409f9b0c0, 0x0000023409f9bad8]
Event: 192.648 Thread 0x000002341e07fb10 nmethod 4170 0x0000023411629790 code [0x0000023411629940, 0x000002341162a070]
Event: 193.148 Thread 0x000002341e07fb10 4172       4       com.sun.javafx.tk.quantum.PaintCollector::addDirtyScene (95 bytes)
Event: 193.175 Thread 0x000002341e07fb10 nmethod 4172 0x000002341162a290 code [0x000002341162a4a0, 0x000002341162b550]
Event: 336.909 Thread 0x000002341e07fb10 4173       4       com.sun.javafx.sg.prism.NGGroup::needsBlending (15 bytes)
Event: 336.910 Thread 0x000002341e0889d0 4174       3       com.sun.javafx.font.CompositeStrike::getStrikeSlot (163 bytes)
Event: 336.911 Thread 0x000002341e07fb10 nmethod 4173 0x000002341162bb90 code [0x000002341162bd20, 0x000002341162bdc8]
Event: 336.916 Thread 0x000002341e0889d0 nmethod 4174 0x0000023409f9be90 code [0x0000023409f9c140, 0x0000023409f9d190]
Event: 336.916 Thread 0x000002341e0889d0 4175       3       com.sun.javafx.text.TextRun::getGlyphCode (46 bytes)

GC Heap History (20 events):
Event: 106.715 GC heap before
{Heap before GC invocations=4 (full 0):
 garbage-first heap   total 258048K, used 162225K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 106.717 GC heap after
{Heap after GC invocations=5 (full 0):
 garbage-first heap   total 258048K, used 18840K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 115.188 GC heap before
{Heap before GC invocations=5 (full 0):
 garbage-first heap   total 258048K, used 162200K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 115.191 GC heap after
{Heap after GC invocations=6 (full 0):
 garbage-first heap   total 258048K, used 18402K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 123.711 GC heap before
{Heap before GC invocations=6 (full 0):
 garbage-first heap   total 258048K, used 161762K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 123.714 GC heap after
{Heap after GC invocations=7 (full 0):
 garbage-first heap   total 258048K, used 18648K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 131.951 GC heap before
{Heap before GC invocations=7 (full 0):
 garbage-first heap   total 258048K, used 162008K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 131.953 GC heap after
{Heap after GC invocations=8 (full 0):
 garbage-first heap   total 258048K, used 18281K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 141.181 GC heap before
{Heap before GC invocations=8 (full 0):
 garbage-first heap   total 258048K, used 161641K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 141.183 GC heap after
{Heap after GC invocations=9 (full 0):
 garbage-first heap   total 258048K, used 18547K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 153.733 GC heap before
{Heap before GC invocations=9 (full 0):
 garbage-first heap   total 258048K, used 161907K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 153.778 GC heap after
{Heap after GC invocations=10 (full 0):
 garbage-first heap   total 258048K, used 18252K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 163.842 GC heap before
{Heap before GC invocations=10 (full 0):
 garbage-first heap   total 258048K, used 161612K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 163.850 GC heap after
{Heap after GC invocations=11 (full 0):
 garbage-first heap   total 258048K, used 18319K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 174.436 GC heap before
{Heap before GC invocations=11 (full 0):
 garbage-first heap   total 258048K, used 161679K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 174.443 GC heap after
{Heap after GC invocations=12 (full 0):
 garbage-first heap   total 258048K, used 18672K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 183.583 GC heap before
{Heap before GC invocations=12 (full 0):
 garbage-first heap   total 258048K, used 162032K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 183.587 GC heap after
{Heap after GC invocations=13 (full 0):
 garbage-first heap   total 258048K, used 18252K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 191.338 GC heap before
{Heap before GC invocations=13 (full 0):
 garbage-first heap   total 258048K, used 161612K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 75 young (153600K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}
Event: 191.344 GC heap after
{Heap after GC invocations=14 (full 0):
 garbage-first heap   total 258048K, used 18252K [0x0000000704c00000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 5 survivors (10240K)
 Metaspace       used 18995K, committed 19264K, reserved 1114112K
  class space    used 2698K, committed 2816K, reserved 1048576K
}

Dll operation events (20 events):
Event: 0.232 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-multibyte-l1-1-0.dll
Event: 0.233 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-private-l1-1-0.dll
Event: 0.235 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-process-l1-1-0.dll
Event: 0.236 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-runtime-l1-1-0.dll
Event: 0.237 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-stdio-l1-1-0.dll
Event: 0.238 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-string-l1-1-0.dll
Event: 0.240 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-time-l1-1-0.dll
Event: 0.241 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-utility-l1-1-0.dll
Event: 0.243 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\ucrtbase.dll
Event: 0.244 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\vcruntime140.dll
Event: 0.245 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\vcruntime140_1.dll
Event: 0.246 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\msvcp140.dll
Event: 0.247 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\msvcp140_1.dll
Event: 0.249 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\msvcp140_2.dll
Event: 0.284 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\prism_d3d.dll
Event: 0.380 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\glass.dll
Event: 0.461 Loaded shared library C:\Program Files\Java\jdk-21\bin\jimage.dll
Event: 0.841 Loaded shared library C:\javasdk\javafx-sdk-23.0.1\bin\javafx_font.dll
Event: 5.348 Loaded shared library C:\Program Files\Java\jdk-21\bin\verify.dll
Event: 5.505 Loaded shared library C:\Users\Lixinze\AppData\Local\Temp\sqlite-3.45.2.0-33159697-537f-4ce6-9df2-7fd735275434-sqlitejdbc.dll

Deoptimization events (20 events):
Event: 336.894 Thread 0x0000023421ca9f40 Uncommon trap: trap_request=0xffffff45 fr.pc=0x000002341154d994 relative=0x00000000000003d4
Event: 336.895 Thread 0x0000023421ca9f40 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000002341154d994 method=com.sun.prism.impl.ps.BaseShaderGraphics.setPaint(Lcom/sun/prism/paint/Paint;)V @ 7 c2
Event: 336.895 Thread 0x0000023421ca9f40 DEOPT PACKING pc=0x000002341154d994 sp=0x000000bc844fe3f0
Event: 336.895 Thread 0x0000023421ca9f40 DEOPT UNPACKING pc=0x0000023410c546a2 sp=0x000000bc844fe3b8 mode 2
Event: 336.896 Thread 0x0000023421ca9f40 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00000234115340f4 relative=0x00000000000008f4
Event: 336.896 Thread 0x0000023421ca9f40 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000234115340f4 method=com.sun.prism.impl.ps.BaseShaderContext.validatePaintOp(Lcom/sun/prism/impl/ps/BaseShaderGraphics;Lcom/sun/javafx/geom/transform/BaseTransform;Lcom/sun/prism/impl/ps/BaseSha
Event: 336.896 Thread 0x0000023421ca9f40 DEOPT PACKING pc=0x00000234115340f4 sp=0x000000bc844fe1e0
Event: 336.896 Thread 0x0000023421ca9f40 DEOPT UNPACKING pc=0x0000023410c546a2 sp=0x000000bc844fe188 mode 2
Event: 336.898 Thread 0x0000023421ca9f40 Uncommon trap: trap_request=0xffffff45 fr.pc=0x0000023411535f50 relative=0x00000000000000b0
Event: 336.898 Thread 0x0000023421ca9f40 Uncommon trap: reason=unstable_if action=reinterpret pc=0x0000023411535f50 method=com.sun.prism.impl.ps.BaseShaderContext.updatePaintShader(Lcom/sun/prism/impl/ps/BaseShaderGraphics;Lcom/sun/prism/ps/Shader;Lcom/sun/prism/impl/ps/BaseShaderContext$MaskTyp
Event: 336.898 Thread 0x0000023421ca9f40 DEOPT PACKING pc=0x0000023411535f50 sp=0x000000bc844fe120
Event: 336.898 Thread 0x0000023421ca9f40 DEOPT UNPACKING pc=0x0000023410c546a2 sp=0x000000bc844fe0b0 mode 2
Event: 336.900 Thread 0x0000023421ca9f40 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00000234115a2ee4 relative=0x00000000000000a4
Event: 336.900 Thread 0x0000023421ca9f40 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000234115a2ee4 method=com.sun.javafx.geom.transform.AffineBase.scale(DD)V @ 8 c2
Event: 336.900 Thread 0x0000023421ca9f40 DEOPT PACKING pc=0x00000234115a2ee4 sp=0x000000bc844fdf10
Event: 336.900 Thread 0x0000023421ca9f40 DEOPT UNPACKING pc=0x0000023410c546a2 sp=0x000000bc844fde38 mode 2
Event: 336.903 Thread 0x0000023421ca9f40 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00000234114f0b8c relative=0x000000000000012c
Event: 336.903 Thread 0x0000023421ca9f40 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000234114f0b8c method=com.sun.prism.impl.ps.BaseShaderContext.updatePerVertexColor(Lcom/sun/prism/paint/Paint;F)V @ 19 c2
Event: 336.903 Thread 0x0000023421ca9f40 DEOPT PACKING pc=0x00000234114f0b8c sp=0x000000bc844fe170
Event: 336.903 Thread 0x0000023421ca9f40 DEOPT UNPACKING pc=0x0000023410c546a2 sp=0x000000bc844fe108 mode 2

Classes loaded (20 events):
Event: 5.444 Loading class sun/nio/fs/WindowsChannelFactory$2
Event: 5.444 Loading class sun/nio/fs/WindowsChannelFactory$2 done
Event: 5.444 Loading class java/nio/file/StandardCopyOption
Event: 5.445 Loading class java/nio/file/StandardCopyOption done
Event: 5.445 Loading class sun/nio/ch/ChannelOutputStream
Event: 5.445 Loading class sun/nio/ch/ChannelOutputStream done
Event: 5.454 Loading class java/io/DeleteOnExitHook
Event: 5.454 Loading class java/io/DeleteOnExitHook done
Event: 5.454 Loading class java/io/DeleteOnExitHook$1
Event: 5.454 Loading class java/io/DeleteOnExitHook$1 done
Event: 5.511 Loading class java/util/regex/Pattern$SliceI
Event: 5.511 Loading class java/util/regex/Pattern$SliceI done
Event: 5.511 Loading class java/io/StringReader
Event: 5.511 Loading class java/io/StringReader done
Event: 5.512 Loading class java/util/regex/Pattern$BnM
Event: 5.512 Loading class java/util/regex/Pattern$BnM done
Event: 5.512 Loading class java/util/regex/Pattern$SliceS
Event: 5.512 Loading class java/util/regex/Pattern$SliceS done
Event: 5.512 Loading class java/lang/invoke/DirectMethodHandle$Special
Event: 5.512 Loading class java/lang/invoke/DirectMethodHandle$Special done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 1.313 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000713493e58}: 'java.lang.Object java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, long, java.lang.Object)'> (0x0000000713493e58) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 2.599 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000713181078}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, int, java.lang.Object, java.lang.Object, java.lang.Object, int)'> (0x0000000713181078) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 2.605 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x00000007131a0608}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeVirtual(java.lang.Object, java.lang.Object)'> (0x00000007131a0608) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.218 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x00000007129ff720}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, int)'> (0x00000007129ff720) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.219 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000712606968}: 'void java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, java.lang.Object, int)'> (0x0000000712606968) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.244 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x00000007126d3470}: 'java.lang.Object java.lang.invoke.DelegatingMethodHandle$Holder.reinvoke_L(java.lang.Object, double, double, double, double)'> (0x00000007126d3470) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.245 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x00000007126de0f8}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, int)'> (0x00000007126de0f8) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.245 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x00000007126e1cd0}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, java.lang.Object, int, java.lang.Object)'> (0x00000007126e1cd0) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.246 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x00000007126e8a50}: 'void java.lang.invoke.DelegatingMethodHandle$Holder.delegate(java.lang.Object, java.lang.Object, int, java.lang.Object)'> (0x00000007126e8a50) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.352 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoClassDefFoundError'{0x00000007123773e0}: org/slf4j/impl/StaticLoggerBinder> (0x00000007123773e0) 
thrown [s\open\src\hotspot\share\classfile\systemDictionary.cpp, line 301]
Event: 5.427 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x0000000711be3b08}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, int, int, int, int)'> (0x0000000711be3b08) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.441 Thread 0x000002346790d7d0 Exception <a 'java/lang/NoSuchMethodError'{0x000000071185c9c8}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object, java.lang.Object, int, int, int, int)'> (0x000000071185c9c8) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 773]
Event: 5.444 Thread 0x000002346790d7d0 Exception <a 'sun/nio/fs/WindowsException'{0x000000071186baa8}> (0x000000071186baa8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 5.445 Thread 0x000002346790d7d0 Exception <a 'sun/nio/fs/WindowsException'{0x000000071186c550}> (0x000000071186c550) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 520]
Event: 86.096 Thread 0x000002346790d7d0 Implicit null exception at 0x000002341157ac81 to 0x000002341157ae74
Event: 90.368 Thread 0x0000023421210830 Implicit null exception at 0x0000023411558c3d to 0x0000023411558cb1
Event: 90.368 Thread 0x0000023421ca9f40 Implicit null exception at 0x00000234115aa59a to 0x00000234115aaf28
Event: 90.380 Thread 0x000002346790d7d0 Implicit null exception at 0x00000234115adc68 to 0x00000234115ae028
Event: 174.443 Thread 0x000002346790d7d0 Implicit null exception at 0x00000234116100c5 to 0x0000023411610908
Event: 336.885 Thread 0x0000023421ca9f40 Implicit null exception at 0x00000234115a5449 to 0x00000234115a5a8b

ZGC Phase Switch (0 events):
No events

VM Operations (20 events):
Event: 123.711 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 123.714 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 131.951 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 131.953 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 141.181 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 141.183 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 153.729 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 153.778 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 163.842 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 163.850 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 174.436 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 174.443 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 180.378 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation)
Event: 180.378 Executing VM operation: HandshakeAllThreads (HandshakeForDeflation) done
Event: 180.378 Executing VM operation: RendezvousGCThreads
Event: 180.378 Executing VM operation: RendezvousGCThreads done
Event: 183.583 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 183.587 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done
Event: 191.338 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause)
Event: 191.344 Executing VM operation: G1CollectForAllocation (G1 Evacuation Pause) done

Events (20 events):
Event: 5.608 Thread 0x000002342139b7c0 Thread exited: 0x000002342139b7c0
Event: 5.608 Thread 0x000002347313d920 Thread exited: 0x000002347313d920
Event: 5.608 Thread 0x000002347313c220 Thread exited: 0x000002347313c220
Event: 8.431 Thread 0x00000234212f6160 Thread exited: 0x00000234212f6160
Event: 8.431 Thread 0x00000234212f5ab0 Thread exited: 0x00000234212f5ab0
Event: 8.431 Thread 0x0000023421219a60 Thread exited: 0x0000023421219a60
Event: 42.979 Thread 0x0000023467e19810 Thread added: 0x0000023467e19810
Event: 43.907 Thread 0x0000023467e19810 Thread exited: 0x0000023467e19810
Event: 44.352 Thread 0x00000234671aca50 Thread added: 0x00000234671aca50
Event: 44.352 Thread 0x0000023467e19810 Thread added: 0x0000023467e19810
Event: 46.786 Thread 0x0000023467e19810 Thread exited: 0x0000023467e19810
Event: 48.978 Thread 0x00000234671aca50 Thread exited: 0x00000234671aca50
Event: 86.329 Thread 0x00000234671a22d0 Thread added: 0x00000234671a22d0
Event: 86.329 Thread 0x0000023421aa4980 Thread added: 0x0000023421aa4980
Event: 86.440 Thread 0x0000023421aa4980 Thread exited: 0x0000023421aa4980
Event: 86.440 Thread 0x00000234671a22d0 Thread exited: 0x00000234671a22d0
Event: 86.536 Thread 0x00000234671a22d0 Thread added: 0x00000234671a22d0
Event: 86.536 Thread 0x0000023421aa4980 Thread added: 0x0000023421aa4980
Event: 90.016 Thread 0x0000023421aa4980 Thread exited: 0x0000023421aa4980
Event: 90.086 Thread 0x00000234671a22d0 Thread exited: 0x00000234671a22d0


Dynamic libraries:
0x00007ff6b9540000 - 0x00007ff6b9550000 	C:\Program Files\Java\jdk-21\bin\java.exe
0x00007ff815890000 - 0x00007ff815aa7000 	C:\Windows\SYSTEM32\ntdll.dll
0x00007ff8139d0000 - 0x00007ff813a94000 	C:\Windows\System32\KERNEL32.DLL
0x00007ff812ba0000 - 0x00007ff812f57000 	C:\Windows\System32\KERNELBASE.dll
0x00007ff813330000 - 0x00007ff813441000 	C:\Windows\System32\ucrtbase.dll
0x00007ff80a280000 - 0x00007ff80a299000 	C:\Program Files\Java\jdk-21\bin\jli.dll
0x00007ff807c50000 - 0x00007ff807c6b000 	C:\Program Files\Java\jdk-21\bin\VCRUNTIME140.dll
0x00007ff814cf0000 - 0x00007ff814da2000 	C:\Windows\System32\ADVAPI32.dll
0x00007ff813aa0000 - 0x00007ff813b47000 	C:\Windows\System32\msvcrt.dll
0x00007ff8151e0000 - 0x00007ff815288000 	C:\Windows\System32\sechost.dll
0x00007ff8130a0000 - 0x00007ff8130c8000 	C:\Windows\System32\bcrypt.dll
0x00007ff813610000 - 0x00007ff813724000 	C:\Windows\System32\RPCRT4.dll
0x00007ff814db0000 - 0x00007ff814f5f000 	C:\Windows\System32\USER32.dll
0x00007ff8131f0000 - 0x00007ff813216000 	C:\Windows\System32\win32u.dll
0x00007ffff4ae0000 - 0x00007ffff4d73000 	C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.3672_none_2713b9d173822955\COMCTL32.dll
0x00007ff813840000 - 0x00007ff813869000 	C:\Windows\System32\GDI32.dll
0x00007ff8130d0000 - 0x00007ff8131e8000 	C:\Windows\System32\gdi32full.dll
0x00007ff813220000 - 0x00007ff8132ba000 	C:\Windows\System32\msvcp_win.dll
0x00007ff807630000 - 0x00007ff80763a000 	C:\Windows\SYSTEM32\VERSION.dll
0x00007ff815320000 - 0x00007ff815351000 	C:\Windows\System32\IMM32.DLL
0x00007fffdd750000 - 0x00007fffdd77d000 	C:\Program Files\MacType\MacType64.dll
0x00007fffdd780000 - 0x00007fffdd7da000 	C:\Program Files\MacType\Easyhk64.dll
0x00007fffdd3d0000 - 0x00007fffdd4db000 	C:\Program Files\MacType\MacType64.Core.dll
0x00007ff80cca0000 - 0x00007ff80ccac000 	C:\Program Files\Java\jdk-21\bin\vcruntime140_1.dll
0x00007ff8015e0000 - 0x00007ff80166e000 	C:\Program Files\Java\jdk-21\bin\msvcp140.dll
0x00007fff58710000 - 0x00007fff59427000 	C:\Program Files\Java\jdk-21\bin\server\jvm.dll
0x00007ff813c60000 - 0x00007ff813cd1000 	C:\Windows\System32\WS2_32.dll
0x00007ff811a20000 - 0x00007ff811a6d000 	C:\Windows\SYSTEM32\POWRPROF.dll
0x00007ff809f90000 - 0x00007ff809fc4000 	C:\Windows\SYSTEM32\WINMM.dll
0x00007ff811a00000 - 0x00007ff811a13000 	C:\Windows\SYSTEM32\UMPDC.dll
0x00007ff811cc0000 - 0x00007ff811cd8000 	C:\Windows\SYSTEM32\kernel.appcore.dll
0x00007ff807c40000 - 0x00007ff807c4a000 	C:\Program Files\Java\jdk-21\bin\jimage.dll
0x00007ff810010000 - 0x00007ff810242000 	C:\Windows\SYSTEM32\DBGHELP.DLL
0x00007ff815380000 - 0x00007ff81570e000 	C:\Windows\System32\combase.dll
0x00007ff815770000 - 0x00007ff815847000 	C:\Windows\System32\OLEAUT32.dll
0x00007ff805660000 - 0x00007ff805692000 	C:\Windows\SYSTEM32\dbgcore.DLL
0x00007ff812f60000 - 0x00007ff812fdb000 	C:\Windows\System32\bcryptPrimitives.dll
0x00007ff807c30000 - 0x00007ff807c3f000 	C:\Program Files\Java\jdk-21\bin\instrument.dll
0x00007ff807b20000 - 0x00007ff807b3f000 	C:\Program Files\Java\jdk-21\bin\java.dll
0x00007ff8143d0000 - 0x00007ff814c39000 	C:\Windows\System32\SHELL32.dll
0x00007ff810ad0000 - 0x00007ff8113cf000 	C:\Windows\SYSTEM32\windows.storage.dll
0x00007ff810990000 - 0x00007ff810acf000 	C:\Windows\SYSTEM32\wintypes.dll
0x0000023421510000 - 0x0000023421609000 	C:\Windows\System32\SHCORE.dll
0x00007ff815710000 - 0x00007ff81576e000 	C:\Windows\System32\shlwapi.dll
0x00007ff812ad0000 - 0x00007ff812af7000 	C:\Windows\SYSTEM32\profapi.dll
0x00007ffff34e0000 - 0x00007ffff35b7000 	C:\Program Files\Java\jdk-21\bin\jsvml.dll
0x00007ff807890000 - 0x00007ff8078a0000 	C:\Program Files\Java\jdk-21\bin\net.dll
0x00007ff80b980000 - 0x00007ff80bab6000 	C:\Windows\SYSTEM32\WINHTTP.dll
0x00007ff812150000 - 0x00007ff8121b9000 	C:\Windows\system32\mswsock.dll
0x00007ff8071a0000 - 0x00007ff8071b6000 	C:\Program Files\Java\jdk-21\bin\nio.dll
0x00007ff802620000 - 0x00007ff802638000 	C:\Program Files\Java\jdk-21\bin\zip.dll
0x00007ff8016e0000 - 0x00007ff8016fa000 	C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin\breakgen64.dll
0x00007ff807190000 - 0x00007ff807199000 	C:\Program Files\Java\jdk-21\bin\extnet.dll
0x0000023421e30000 - 0x0000023421e33000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-console-l1-1-0.dll
0x0000023421f50000 - 0x0000023421f53000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-console-l1-2-0.dll
0x0000023421e40000 - 0x0000023421e43000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-datetime-l1-1-0.dll
0x0000023421e50000 - 0x0000023421e53000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-debug-l1-1-0.dll
0x0000023421e60000 - 0x0000023421e63000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-errorhandling-l1-1-0.dll
0x0000023421e70000 - 0x0000023421e74000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-file-l1-1-0.dll
0x0000023421e80000 - 0x0000023421e83000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-file-l1-2-0.dll
0x0000023421e90000 - 0x0000023421e93000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-file-l2-1-0.dll
0x0000023421ea0000 - 0x0000023421ea3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-handle-l1-1-0.dll
0x0000023421eb0000 - 0x0000023421eb3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-heap-l1-1-0.dll
0x0000023421ec0000 - 0x0000023421ec3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-interlocked-l1-1-0.dll
0x0000023421ed0000 - 0x0000023421ed3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-libraryloader-l1-1-0.dll
0x0000023421ee0000 - 0x0000023421ee3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-localization-l1-2-0.dll
0x0000023421ef0000 - 0x0000023421ef3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-memory-l1-1-0.dll
0x0000023421f00000 - 0x0000023421f03000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-namedpipe-l1-1-0.dll
0x0000023421f10000 - 0x0000023421f13000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-processenvironment-l1-1-0.dll
0x0000023421f20000 - 0x0000023421f23000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-processthreads-l1-1-0.dll
0x0000023421f30000 - 0x0000023421f33000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-processthreads-l1-1-1.dll
0x0000023421f40000 - 0x0000023421f43000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-profile-l1-1-0.dll
0x0000023421f60000 - 0x0000023421f63000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-rtlsupport-l1-1-0.dll
0x0000023421f70000 - 0x0000023421f73000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-string-l1-1-0.dll
0x0000023421f80000 - 0x0000023421f83000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-synch-l1-1-0.dll
0x0000023421f90000 - 0x0000023421f93000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-synch-l1-2-0.dll
0x0000023421fa0000 - 0x0000023421fa3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-sysinfo-l1-1-0.dll
0x0000023421fb0000 - 0x0000023421fb3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-timezone-l1-1-0.dll
0x0000023421fc0000 - 0x0000023421fc3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-core-util-l1-1-0.dll
0x0000023421fd0000 - 0x0000023421fd3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-conio-l1-1-0.dll
0x0000023421fe0000 - 0x0000023421fe4000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-convert-l1-1-0.dll
0x0000023421ff0000 - 0x0000023421ff3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-environment-l1-1-0.dll
0x0000023467fd0000 - 0x0000023467fd3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-filesystem-l1-1-0.dll
0x0000023468320000 - 0x0000023468323000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-heap-l1-1-0.dll
0x0000023468330000 - 0x0000023468333000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-locale-l1-1-0.dll
0x0000023468340000 - 0x0000023468345000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-math-l1-1-0.dll
0x0000023468350000 - 0x0000023468355000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-multibyte-l1-1-0.dll
0x0000023468360000 - 0x0000023468370000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-private-l1-1-0.dll
0x0000023467fe0000 - 0x0000023467fe3000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-process-l1-1-0.dll
0x0000023467ff0000 - 0x0000023467ff4000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-runtime-l1-1-0.dll
0x0000023468000000 - 0x0000023468004000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-stdio-l1-1-0.dll
0x0000023468010000 - 0x0000023468014000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-string-l1-1-0.dll
0x0000023468020000 - 0x0000023468023000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-time-l1-1-0.dll
0x0000023468030000 - 0x0000023468033000 	C:\javasdk\javafx-sdk-23.0.1\bin\api-ms-win-crt-utility-l1-1-0.dll
0x00007ffff2600000 - 0x00007ffff26fc000 	C:\javasdk\javafx-sdk-23.0.1\bin\ucrtbase.dll
0x00007ff8016c0000 - 0x00007ff8016db000 	C:\javasdk\javafx-sdk-23.0.1\bin\vcruntime140.dll
0x00007ff8015d0000 - 0x00007ff8015dc000 	C:\javasdk\javafx-sdk-23.0.1\bin\vcruntime140_1.dll
0x00007ffff39a0000 - 0x00007ffff3a2e000 	C:\javasdk\javafx-sdk-23.0.1\bin\msvcp140.dll
0x00007ff800e90000 - 0x00007ff800e99000 	C:\javasdk\javafx-sdk-23.0.1\bin\msvcp140_1.dll
0x00007ffff3490000 - 0x00007ffff34d1000 	C:\javasdk\javafx-sdk-23.0.1\bin\msvcp140_2.dll
0x00007ffff3460000 - 0x00007ffff3490000 	C:\javasdk\javafx-sdk-23.0.1\bin\prism_d3d.dll
0x00007fffce110000 - 0x00007fffce2b8000 	C:\Windows\system32\d3d9.dll
0x00007ff80d1c0000 - 0x00007ff80d1eb000 	C:\Windows\SYSTEM32\dwmapi.dll
0x00007ff80fee0000 - 0x00007ff80ff17000 	C:\Windows\SYSTEM32\dxcore.dll
0x00007ff80cf30000 - 0x00007ff80cfe1000 	C:\Windows\system32\uxtheme.dll
0x00007ffff2110000 - 0x00007ffff21c0000 	C:\Windows\SYSTEM32\d3d9on12.dll
0x00007ff80d0b0000 - 0x00007ff80d1a7000 	C:\Windows\SYSTEM32\dxgi.dll
0x00007ffff33b0000 - 0x00007ffff33d6000 	C:\Windows\SYSTEM32\d3d12.dll
0x00007ff812890000 - 0x00007ff8128de000 	C:\Windows\SYSTEM32\cfgmgr32.dll
0x00007fffb9860000 - 0x00007fffb9a62000 	C:\Windows\SYSTEM32\D3D12Core.dll
0x00007ffff3380000 - 0x00007ffff33a7000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_a20fccc4824e3254\igd12umd64.dll
0x00007fff578e0000 - 0x00007fff5870b000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_a20fccc4824e3254\igd12um64xel.dll
0x00007ff813450000 - 0x00007ff8135b6000 	C:\Windows\System32\CRYPT32.dll
0x00007ff815030000 - 0x00007ff8151d5000 	C:\Windows\System32\ole32.dll
0x00007ff802ca0000 - 0x00007ff802cdb000 	C:\Windows\SYSTEM32\ControlLib.dll
0x00007ff813d70000 - 0x00007ff8141e4000 	C:\Windows\System32\SETUPAPI.dll
0x00007ff812860000 - 0x00007ff81288c000 	C:\Windows\SYSTEM32\DEVOBJ.dll
0x00007ff802aa0000 - 0x00007ff802b16000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_a20fccc4824e3254\IntelControlLib.dll
0x00007ff8132c0000 - 0x00007ff81332c000 	C:\Windows\System32\WINTRUST.dll
0x00007ff812840000 - 0x00007ff812852000 	C:\Windows\SYSTEM32\MSASN1.dll
0x00007ff807910000 - 0x00007ff807959000 	C:\Windows\SYSTEM32\directxdatabasehelper.dll
0x00007ff8020b0000 - 0x00007ff8024c5000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_a20fccc4824e3254\igdgmm64.dll
0x00007ffffba90000 - 0x00007fffffff0000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_a20fccc4824e3254\igc64.dll
0x00007ffff20e0000 - 0x00007ffff210f000 	C:\Windows\SYSTEM32\D3DSCache.dll
0x00007ff812240000 - 0x00007ff812268000 	C:\Windows\SYSTEM32\USERENV.dll
0x00007fffb2880000 - 0x00007fffb5f35000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_a20fccc4824e3254\igd12dxva64.dll
0x00007fff91f10000 - 0x00007fff91f37000 	C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_a20fccc4824e3254\igdinfo64.dll
0x00007ff805080000 - 0x00007ff805322000 	C:\Windows\SYSTEM32\twinapi.appcore.dll

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Program Files\Java\jdk-21\bin;C:\Windows\SYSTEM32;C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.22621.3672_none_2713b9d173822955;C:\Program Files\MacType;C:\Program Files\Java\jdk-21\bin\server;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;C:\javasdk\javafx-sdk-23.0.1\bin;C:\Windows\System32\DriverStore\FileRepository\iigd_dch.inf_amd64_a20fccc4824e3254;C:\Program Files\Common Files\Microsoft Shared\Ink;C:\Users\Lixinze\AppData\Local\Temp

VM Arguments:
jvm_args: --module-path=C:\javasdk\javafx-sdk-23.0.1\lib --add-modules=javafx.controls,javafx.fxml -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=2095:C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 
java_command: BattleJoker
java_class_path (initial): D:\UIC\2425S1\DCN\BattleJoker\out\production\BattleJoker;D:\UIC\2425S1\DCN\BattleJoker\lib\slf4j-api-1.7.36.jar;D:\UIC\2425S1\DCN\BattleJoker\lib\sqlite-jdbc-3.45.2.0.jar;C:\javasdk\javafx-sdk-23.0.1\lib\javafx-swt.jar;C:\javasdk\javafx-sdk-23.0.1\lib\javafx.web.jar;C:\javasdk\javafx-sdk-23.0.1\lib\javafx.base.jar;C:\javasdk\javafx-sdk-23.0.1\lib\javafx.fxml.jar;C:\javasdk\javafx-sdk-23.0.1\lib\javafx.media.jar;C:\javasdk\javafx-sdk-23.0.1\lib\javafx.swing.jar;C:\javasdk\javafx-sdk-23.0.1\lib\javafx.controls.jar;C:\javasdk\javafx-sdk-23.0.1\lib\javafx.graphics.jar
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 12                                        {product} {ergonomic}
     uint ConcGCThreads                            = 4                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 15                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 2097152                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 264241152                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 4215275520                                {product} {ergonomic}
   size_t MaxNewSize                               = 2529165312                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 2097152                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 7602480                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122027880                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122027880                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 4215275520                             {manageable} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
CLASSPATH=C:\Program Files\Java\jdk-21\lib;
PATH=C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\msys64\mingw64\bin;C:\Program Files\dotnet\;C:\Program Files\ITK-SNAP 3.8\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-21\lib;C:\Users\Lixinze\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\Lixinze\AppData\Local\Programs\Python\Python311\;C:\Users\Lixinze\AppData\Local\Microsoft\WindowsApps;;C:\Users\Lixinze\AppData\Local\Programs\Microsoft VS Code\bin;C:\texlive\2023\bin\windows;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.2\bin;;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;
USERNAME=Lixinze
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 154 Stepping 3, GenuineIntel
TMP=C:\Users\Lixinze\AppData\Local\Temp
TEMP=C:\Users\Lixinze\AppData\Local\Temp




Periodic native trim disabled

---------------  S Y S T E M  ---------------

OS:
 Windows 11 , 64 bit Build 22621 (10.0.22621.3958)
OS uptime: 0 days 0:21 hours
Hyper-V role detected

CPU: total 20 (initial active 20) (10 cores per cpu, 2 threads per core) family 6 model 154 stepping 3 microcode 0x41c, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt, clwb, hv, serialize, rdtscp, rdpid, fsrm, f16c, cet_ibt, cet_ss
Processor Information for processor 0
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 1
  Max Mhz: 2300, Current Mhz: 1506, Mhz Limit: 2300
Processor Information for processor 2
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 3
  Max Mhz: 2300, Current Mhz: 1506, Mhz Limit: 2300
Processor Information for processor 4
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 5
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 6
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 7
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 8
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 9
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 10
  Max Mhz: 2300, Current Mhz: 2300, Mhz Limit: 2300
Processor Information for processor 11
  Max Mhz: 2300, Current Mhz: 1506, Mhz Limit: 2300
Processor Information for processor 12
  Max Mhz: 2300, Current Mhz: 1500, Mhz Limit: 1679
Processor Information for processor 13
  Max Mhz: 2300, Current Mhz: 1500, Mhz Limit: 1679
Processor Information for processor 14
  Max Mhz: 2300, Current Mhz: 1500, Mhz Limit: 1679
Processor Information for processor 15
  Max Mhz: 2300, Current Mhz: 1500, Mhz Limit: 1679
Processor Information for processor 16
  Max Mhz: 2300, Current Mhz: 1500, Mhz Limit: 1679
Processor Information for processor 17
  Max Mhz: 2300, Current Mhz: 1500, Mhz Limit: 1679
Processor Information for processor 18
  Max Mhz: 2300, Current Mhz: 1500, Mhz Limit: 1679
Processor Information for processor 19
  Max Mhz: 2300, Current Mhz: 1500, Mhz Limit: 1679

Memory: 4k page, system-wide physical 16075M (762M free)
TotalPageFile size 29719M (AvailPageFile size 4155M)
current process WorkingSet (physical memory assigned to process): 1325M, peak: 4126M
current process commit charge ("private bytes"): 11074M, peak: 11074M

vm_info: Java HotSpot(TM) 64-Bit Server VM (21.0.2+13-LTS-58) for windows-amd64 JRE (21.0.2+13-LTS-58), built on 2024-01-05T18:32:24Z by "mach5one" with MS VC++ 17.1 (VS2022)

END.
